============================= test session starts ==============================
platform linux -- Python 3.8.5, pytest-4.3.1, py-1.9.0, pluggy-0.13.1 -- /home/riyad/.virtualenvs/docker-py/bin/python
cachedir: .pytest_cache
rootdir: /home/riyad/src/docker-py, inifile: pytest.ini
plugins: cov-2.6.1, timeout-1.3.3
collecting ... collected 389 items

tests/integration/api_build_test.py::BuildTest::test_build_container_with_target PASSED [  0%]
tests/integration/api_build_test.py::BuildTest::test_build_from_stringio PASSED [  0%]
tests/integration/api_build_test.py::BuildTest::test_build_gzip_custom_encoding PASSED [  0%]
tests/integration/api_build_test.py::BuildTest::test_build_gzip_encoding PASSED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_abs_dockerfile FAILED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_dockerfile FAILED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_nested_dockerfile FAILED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_invalid_platform FAILED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_isolation PASSED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_labels FAILED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_out_of_context_dockerfile FAILED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_shmsize PASSED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_squash FAILED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_stderr_data FAILED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_streaming PASSED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_with_buildargs PASSED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_with_cache_from FAILED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_with_dockerfile_empty_lines PASSED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_with_dockerignore PASSED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_with_extra_hosts FAILED [  5%]
tests/integration/api_build_test.py::BuildTest::test_build_with_network_mode FAILED [  5%]
tests/integration/api_build_test.py::BuildTest::test_build_with_proxy PASSED [  5%]
tests/integration/api_build_test.py::BuildTest::test_build_with_proxy_and_buildargs PASSED [  5%]
tests/integration/api_build_test.py::BuildTest::test_prune_builds XFAIL  [  6%]
tests/integration/api_client_test.py::InformationTest::test_info PASSED  [  6%]
tests/integration/api_client_test.py::InformationTest::test_version PASSED [  6%]
tests/integration/api_client_test.py::AutoDetectVersionTest::test_client_init PASSED [  6%]
tests/integration/api_client_test.py::ConnectionTimeoutTest::test_timeout PASSED [  7%]
tests/integration/api_client_test.py::UnixconnTest::test_resource_warnings PASSED [  7%]
tests/integration/api_config_test.py::ConfigAPITest::test_create_config ERROR [  7%]
tests/integration/api_config_test.py::ConfigAPITest::test_create_config_unicode_data ERROR [  7%]
tests/integration/api_config_test.py::ConfigAPITest::test_inspect_config ERROR [  8%]
tests/integration/api_config_test.py::ConfigAPITest::test_list_configs ERROR [  8%]
tests/integration/api_config_test.py::ConfigAPITest::test_remove_config ERROR [  8%]
tests/integration/api_container_test.py::ListContainersTest::test_list_containers FAILED [  8%]
tests/integration/api_container_test.py::CreateContainerTest::test_create PASSED [  9%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_container_with_volumes_from FAILED [  9%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_auto_remove PASSED [  9%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_cpu_rt_options XPASS [ 10%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_device_cgroup_rules FAILED [ 10%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_environment_variable_no_value FAILED [ 10%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_host_pid_mode PASSED [ 10%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_init PASSED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_isolation FAILED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_links FAILED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_mac_address FAILED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_memory_constraints_with_int FAILED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_memory_constraints_with_str FAILED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_restart_policy FAILED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_stop_timeout PASSED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_storage_opt XFAIL [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_tmpfs FAILED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_uts_mode PASSED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_group_id_ints FAILED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_group_id_strings FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_invalid_log_driver_raises_exception FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_log_driver_and_log_opt FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_no_config_specified FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_no_log_driver_specified FAILED [ 15%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_binds_ro PASSED [ 15%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_binds_rw PASSED [ 15%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_mounts FAILED [ 15%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_mounts_ro FAILED [ 16%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_volume_mount PASSED [ 16%]
tests/integration/api_container_test.py::ArchiveTest::test_copy_directory_to_container PASSED [ 16%]
tests/integration/api_container_test.py::ArchiveTest::test_copy_file_to_container FAILED [ 16%]
tests/integration/api_container_test.py::ArchiveTest::test_get_file_archive_from_container FAILED [ 17%]
tests/integration/api_container_test.py::ArchiveTest::test_get_file_stat_from_container FAILED [ 17%]
tests/integration/api_container_test.py::RenameContainerTest::test_rename_container FAILED [ 17%]
tests/integration/api_container_test.py::StartContainerTest::test_run_shlex_commands PASSED [ 17%]
tests/integration/api_container_test.py::StartContainerTest::test_start_container PASSED [ 18%]
tests/integration/api_container_test.py::StartContainerTest::test_start_container_with_dict_instead_of_id PASSED [ 18%]
tests/integration/api_container_test.py::WaitTest::test_wait PASSED      [ 18%]
tests/integration/api_container_test.py::WaitTest::test_wait_with_condition FAILED [ 19%]
tests/integration/api_container_test.py::WaitTest::test_wait_with_dict_instead_of_id PASSED [ 19%]
tests/integration/api_container_test.py::LogsTest::test_logs PASSED      [ 19%]
tests/integration/api_container_test.py::LogsTest::test_logs_streaming_and_follow PASSED [ 19%]
tests/integration/api_container_test.py::LogsTest::test_logs_streaming_and_follow_and_cancel PASSED [ 20%]
tests/integration/api_container_test.py::LogsTest::test_logs_tail_option PASSED [ 20%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_dict_instead_of_id PASSED [ 20%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_tail_0 PASSED [ 20%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_until FAILED [ 21%]
tests/integration/api_container_test.py::DiffTest::test_diff PASSED      [ 21%]
tests/integration/api_container_test.py::DiffTest::test_diff_with_dict_instead_of_id PASSED [ 21%]
tests/integration/api_container_test.py::StopTest::test_stop PASSED      [ 21%]
tests/integration/api_container_test.py::StopTest::test_stop_with_dict_instead_of_id PASSED [ 22%]
tests/integration/api_container_test.py::KillTest::test_kill PASSED      [ 22%]
tests/integration/api_container_test.py::KillTest::test_kill_with_dict_instead_of_id PASSED [ 22%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal PASSED [ 22%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal_integer PASSED [ 23%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal_name PASSED [ 23%]
tests/integration/api_container_test.py::PortTest::test_port FAILED      [ 23%]
tests/integration/api_container_test.py::ContainerTopTest::test_top XFAIL [ 23%]
tests/integration/api_container_test.py::ContainerTopTest::test_top_with_psargs XFAIL [ 24%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart PASSED [ 24%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart_with_dict_instead_of_id PASSED [ 24%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart_with_low_timeout PASSED [ 24%]
tests/integration/api_container_test.py::RemoveContainerTest::test_remove PASSED [ 25%]
tests/integration/api_container_test.py::RemoveContainerTest::test_remove_with_dict_instead_of_id PASSED [ 25%]
tests/integration/api_container_test.py::AttachContainerTest::test_attach_no_stream FAILED [ 25%]
tests/integration/api_container_test.py::AttachContainerTest::test_attach_stream_and_cancel PASSED [ 25%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_arg PASSED [ 26%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_config_file PASSED [ 26%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_default PASSED [ 26%]
tests/integration/api_container_test.py::AttachContainerTest::test_run_container_reading_socket PASSED [ 26%]
tests/integration/api_container_test.py::AttachContainerTest::test_run_container_streaming PASSED [ 27%]
tests/integration/api_container_test.py::PauseTest::test_pause_unpause PASSED [ 27%]
tests/integration/api_container_test.py::PruneTest::test_prune_containers PASSED [ 27%]
tests/integration/api_container_test.py::GetContainerStatsTest::test_get_container_stats_no_stream PASSED [ 28%]
tests/integration/api_container_test.py::ContainerUpdateTest::test_restart_policy_update FAILED [ 28%]
tests/integration/api_container_test.py::ContainerUpdateTest::test_update_container FAILED [ 28%]
tests/integration/api_container_test.py::ContainerCPUTest::test_container_cpu_shares FAILED [ 28%]
tests/integration/api_container_test.py::ContainerCPUTest::test_container_cpuset FAILED [ 29%]
tests/integration/api_container_test.py::ContainerCPUTest::test_create_with_runtime FAILED [ 29%]
tests/integration/api_container_test.py::LinkTest::test_remove_link FAILED [ 29%]
tests/integration/api_exec_test.py::ExecTest::test_detach_with_config_file FAILED [ 29%]
tests/integration/api_exec_test.py::ExecTest::test_detach_with_default PASSED [ 30%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_as_root PASSED [ 30%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_as_user PASSED [ 30%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_streaming PASSED [ 30%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_string PASSED [ 31%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_with_env PASSED [ 31%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_with_workdir PASSED [ 31%]
tests/integration/api_exec_test.py::ExecTest::test_exec_inspect PASSED   [ 31%]
tests/integration/api_exec_test.py::ExecTest::test_exec_start_detached FAILED [ 32%]
tests/integration/api_exec_test.py::ExecTest::test_exec_start_socket FAILED [ 32%]
tests/integration/api_exec_test.py::ExecTest::test_execute_command PASSED [ 32%]
tests/integration/api_exec_test.py::ExecTest::test_execute_command_with_proxy_env PASSED [ 32%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_no_stream_demux PASSED [ 33%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_no_stream_no_demux PASSED [ 33%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_stream_demux PASSED [ 33%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_stream_no_demux PASSED [ 33%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_no_stream_demux FAILED [ 34%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_no_stream_no_demux FAILED [ 34%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_stream_demux FAILED [ 34%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_stream_no_demux FAILED [ 34%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_fails FAILED [ 35%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_passes FAILED [ 35%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_shell_command FAILED [ 35%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_start_period FAILED [ 35%]
tests/integration/api_image_test.py::ListImagesTest::test_images PASSED  [ 36%]
tests/integration/api_image_test.py::ListImagesTest::test_images_quiet PASSED [ 36%]
tests/integration/api_image_test.py::PullImageTest::test_pull PASSED     [ 36%]
tests/integration/api_image_test.py::PullImageTest::test_pull_invalid_platform FAILED [ 37%]
tests/integration/api_image_test.py::PullImageTest::test_pull_streaming PASSED [ 37%]
tests/integration/api_image_test.py::CommitTest::test_commit FAILED      [ 37%]
tests/integration/api_image_test.py::CommitTest::test_commit_with_changes FAILED [ 37%]
tests/integration/api_image_test.py::RemoveImageTest::test_remove PASSED [ 38%]
tests/integration/api_image_test.py::ImportImageTest::test_get_load_image FAILED [ 38%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_bytes PASSED [ 38%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_file PASSED [ 38%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_stream PASSED [ 39%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_url SKIPPED [ 39%]
tests/integration/api_image_test.py::ImportImageTest::test_import_image_from_data_with_changes PASSED [ 39%]
tests/integration/api_image_test.py::ImportImageTest::test_import_image_with_changes PASSED [ 39%]
tests/integration/api_image_test.py::PruneImagesTest::test_prune_images FAILED [ 40%]
tests/integration/api_image_test.py::SaveLoadImagesTest::test_get_image_load_image FAILED [ 40%]
tests/integration/api_image_test.py::InspectDistributionTest::test_inspect_distribution FAILED [ 40%]
tests/integration/api_network_test.py::TestNetworks::test_connect_and_disconnect_container FAILED [ 40%]
tests/integration/api_network_test.py::TestNetworks::test_connect_and_force_disconnect_container FAILED [ 41%]
tests/integration/api_network_test.py::TestNetworks::test_connect_on_container_create FAILED [ 41%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_aliases FAILED [ 41%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_ipv4_address FAILED [ 41%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_ipv6_address FAILED [ 42%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_links FAILED [ 42%]
tests/integration/api_network_test.py::TestNetworks::test_create_check_duplicate FAILED [ 42%]
tests/integration/api_network_test.py::TestNetworks::test_create_inspect_network_with_scope FAILED [ 42%]
tests/integration/api_network_test.py::TestNetworks::test_create_internal_networks PASSED [ 43%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_attachable FAILED [ 43%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_ingress FAILED [ 43%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_ipv6_enabled FAILED [ 43%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_host_driver_fails PASSED [ 44%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_ipam_config FAILED [ 44%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_labels PASSED [ 44%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_labels_wrong_type PASSED [ 44%]
tests/integration/api_network_test.py::TestNetworks::test_create_remove_network_with_space_in_name PASSED [ 45%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_aliases PASSED [ 45%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_driveropt FAILED [ 45%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_ipv4_address FAILED [ 46%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_ipv6_address FAILED [ 46%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_linklocal_ips FAILED [ 46%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_links FAILED [ 46%]
tests/integration/api_network_test.py::TestNetworks::test_inspect_network FAILED [ 47%]
tests/integration/api_network_test.py::TestNetworks::test_list_networks FAILED [ 47%]
tests/integration/api_network_test.py::TestNetworks::test_prune_networks FAILED [ 47%]
tests/integration/api_network_test.py::TestNetworks::test_remove_network FAILED [ 47%]
tests/integration/api_plugin_test.py::PluginTest::test_configure_plugin FAILED [ 48%]
tests/integration/api_plugin_test.py::PluginTest::test_create_plugin FAILED [ 48%]
tests/integration/api_plugin_test.py::PluginTest::test_disable_plugin FAILED [ 48%]
tests/integration/api_plugin_test.py::PluginTest::test_enable_plugin FAILED [ 48%]
tests/integration/api_plugin_test.py::PluginTest::test_force_remove_plugin FAILED [ 49%]
tests/integration/api_plugin_test.py::PluginTest::test_inspect_plugin FAILED [ 49%]
tests/integration/api_plugin_test.py::PluginTest::test_install_plugin FAILED [ 49%]
tests/integration/api_plugin_test.py::PluginTest::test_list_plugins FAILED [ 49%]
tests/integration/api_plugin_test.py::PluginTest::test_plugin_privileges FAILED [ 50%]
tests/integration/api_plugin_test.py::PluginTest::test_remove_plugin FAILED [ 50%]
tests/integration/api_plugin_test.py::PluginTest::test_upgrade_plugin FAILED [ 50%]
tests/integration/api_secret_test.py::SecretAPITest::test_create_secret ERROR [ 50%]
tests/integration/api_secret_test.py::SecretAPITest::test_create_secret_unicode_data ERROR [ 51%]
tests/integration/api_secret_test.py::SecretAPITest::test_inspect_secret ERROR [ 51%]
tests/integration/api_secret_test.py::SecretAPITest::test_list_secrets ERROR [ 51%]
tests/integration/api_secret_test.py::SecretAPITest::test_remove_secret ERROR [ 51%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_custom_log_driver ERROR [ 52%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_global_mode ERROR [ 52%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_replicated_mode ERROR [ 52%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_simple ERROR [ 52%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_config ERROR [ 53%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_custom_networks ERROR [ 53%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_dns_config ERROR [ 53%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_endpoint_spec ERROR [ 53%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_endpoint_spec_host_publish_mode ERROR [ 54%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_env ERROR [ 54%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_failure_action_rollback ERROR [ 54%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_generic_resources ERROR [ 55%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_groups ERROR [ 55%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_healthcheck ERROR [ 55%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_hostname ERROR [ 55%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_hosts ERROR [ 56%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_init ERROR [ 56%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_invalid_generic_resources ERROR [ 56%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_network_attachment_config ERROR [ 56%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement ERROR [ 57%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement_object ERROR [ 57%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement_platform ERROR [ 57%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement_preferences ERROR [ 57%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement_preferences_tuple ERROR [ 58%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_privileges ERROR [ 58%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_readonly ERROR [ 58%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_resources_constraints ERROR [ 58%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_restart_policy ERROR [ 59%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_rollback_config ERROR [ 59%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_secret ERROR [ 59%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_stop_signal ERROR [ 59%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_tty ERROR [ 60%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_tty_dict ERROR [ 60%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_unicode_config ERROR [ 60%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_unicode_secret ERROR [ 60%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_update_config ERROR [ 61%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_update_config_monitor ERROR [ 61%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_update_order ERROR [ 61%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_volume_mount ERROR [ 61%]
tests/integration/api_service_test.py::ServiceTest::test_inspect_service_by_id ERROR [ 62%]
tests/integration/api_service_test.py::ServiceTest::test_inspect_service_by_name ERROR [ 62%]
tests/integration/api_service_test.py::ServiceTest::test_inspect_service_insert_defaults ERROR [ 62%]
tests/integration/api_service_test.py::ServiceTest::test_list_services ERROR [ 62%]
tests/integration/api_service_test.py::ServiceTest::test_list_services_filter_by_label ERROR [ 63%]
tests/integration/api_service_test.py::ServiceTest::test_remove_service_by_id ERROR [ 63%]
tests/integration/api_service_test.py::ServiceTest::test_remove_service_by_name ERROR [ 63%]
tests/integration/api_service_test.py::ServiceTest::test_service_logs ERROR [ 64%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_force_update ERROR [ 64%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_remove_container_labels ERROR [ 64%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_remove_healthcheck ERROR [ 64%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_remove_labels ERROR [ 65%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_container_labels ERROR [ 65%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_endpoint_spec ERROR [ 65%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_labels ERROR [ 65%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_mode ERROR [ 66%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_name ERROR [ 66%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_networks ERROR [ 66%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_update_config ERROR [ 66%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_network_change ERROR [ 67%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_already_in_cluster FAILED [ 67%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_addr_pool_both_args FAILED [ 67%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_addr_pool_defaults FAILED [ 67%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_addr_pool_only_pool FAILED [ 68%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_addr_pool_only_subnet_size FAILED [ 68%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_raft_spec FAILED [ 68%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_data_path_addr XFAIL [ 68%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_force_new_cluster SKIPPED [ 69%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_simple FAILED [ 69%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_with_autolock_managers FAILED [ 69%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_with_ca_config FAILED [ 69%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_with_log_driver XFAIL [ 70%]
tests/integration/api_swarm_test.py::SwarmTest::test_inspect_node FAILED [ 70%]
tests/integration/api_swarm_test.py::SwarmTest::test_leave_swarm FAILED  [ 70%]
tests/integration/api_swarm_test.py::SwarmTest::test_list_nodes FAILED   [ 70%]
tests/integration/api_swarm_test.py::SwarmTest::test_remove_main_node FAILED [ 71%]
tests/integration/api_swarm_test.py::SwarmTest::test_rotate_manager_unlock_key FAILED [ 71%]
tests/integration/api_swarm_test.py::SwarmTest::test_update_node FAILED  [ 71%]
tests/integration/api_swarm_test.py::SwarmTest::test_update_swarm FAILED [ 71%]
tests/integration/api_volume_test.py::TestVolumes::test_create_volume PASSED [ 72%]
tests/integration/api_volume_test.py::TestVolumes::test_create_volume_invalid_driver FAILED [ 72%]
tests/integration/api_volume_test.py::TestVolumes::test_force_remove_volume PASSED [ 72%]
tests/integration/api_volume_test.py::TestVolumes::test_inspect_nonexistent_volume PASSED [ 73%]
tests/integration/api_volume_test.py::TestVolumes::test_inspect_volume FAILED [ 73%]
tests/integration/api_volume_test.py::TestVolumes::test_list_volumes FAILED [ 73%]
tests/integration/api_volume_test.py::TestVolumes::test_prune_volumes PASSED [ 73%]
tests/integration/api_volume_test.py::TestVolumes::test_remove_nonexistent_volume PASSED [ 74%]
tests/integration/api_volume_test.py::TestVolumes::test_remove_volume PASSED [ 74%]
tests/integration/client_test.py::ClientTest::test_df PASSED             [ 74%]
tests/integration/client_test.py::ClientTest::test_info PASSED           [ 74%]
tests/integration/client_test.py::ClientTest::test_ping PASSED           [ 75%]
tests/integration/client_test.py::ClientTest::test_version PASSED        [ 75%]
tests/integration/client_test.py::CancellableEventsTest::test_cancel_events PASSED [ 75%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_context_remove FAILED [ 75%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_lifecycle FAILED [ 76%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_load_context_without_orchestrator FAILED [ 76%]
tests/integration/errors_test.py::ErrorsTest::test_api_error_parses_json FAILED [ 76%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_get FAILED [ 76%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_list FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_list_sparse FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_detach FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_auto_remove FAILED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_auto_remove_error FAILED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_error FAILED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_image_that_does_not_exist FAILED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_json_file_driver FAILED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_named_volume FAILED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_network PASSED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_none_driver FAILED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_proxy_config FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_streamed_logs FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_streamed_logs_and_cancel FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_volume FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerTest::test_commit FAILED [ 81%]
tests/integration/models_containers_test.py::ContainerTest::test_create_with_volume_driver FAILED [ 81%]
tests/integration/models_containers_test.py::ContainerTest::test_diff FAILED [ 81%]
tests/integration/models_containers_test.py::ContainerTest::test_exec_run_failed FAILED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_exec_run_success FAILED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_kill FAILED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_logs FAILED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_pause FAILED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_list FAILED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_none FAILED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_tuple FAILED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_remove FAILED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_rename FAILED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_restart FAILED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_start FAILED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_stats FAILED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_stop FAILED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_top FAILED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_update FAILED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_wait FAILED [ 86%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build FAILED [ 86%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_error FAILED [ 86%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_multiple_success FAILED [ 86%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_success_build_output FAILED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_list PASSED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_list_with_repository PASSED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_load_error FAILED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull FAILED [ 88%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_multiple FAILED [ 88%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_with_sha FAILED [ 88%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_with_tag FAILED [ 88%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_and_load PASSED [ 89%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_and_load_repo_name FAILED [ 89%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_name_error PASSED [ 89%]
tests/integration/models_images_test.py::ImageTest::test_tag_and_remove PASSED [ 89%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_create PASSED [ 90%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_get PASSED [ 90%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_list_remove FAILED [ 90%]
tests/integration/models_networks_test.py::NetworkTest::test_connect_disconnect FAILED [ 91%]
tests/integration/models_nodes_test.py::NodesTest::test_list_get_update FAILED [ 91%]
tests/integration/models_resources_test.py::ModelTest::test_reload FAILED [ 91%]
tests/integration/models_services_test.py::ServiceTest::test_create ERROR [ 91%]
tests/integration/models_services_test.py::ServiceTest::test_create_with_network ERROR [ 92%]
tests/integration/models_services_test.py::ServiceTest::test_force_update_service ERROR [ 92%]
tests/integration/models_services_test.py::ServiceTest::test_force_update_service_using_bool ERROR [ 92%]
tests/integration/models_services_test.py::ServiceTest::test_force_update_service_using_shorthand_method ERROR [ 92%]
tests/integration/models_services_test.py::ServiceTest::test_get ERROR   [ 93%]
tests/integration/models_services_test.py::ServiceTest::test_list_remove ERROR [ 93%]
tests/integration/models_services_test.py::ServiceTest::test_scale_method_global_service ERROR [ 93%]
tests/integration/models_services_test.py::ServiceTest::test_scale_method_service ERROR [ 93%]
tests/integration/models_services_test.py::ServiceTest::test_scale_service ERROR [ 94%]
tests/integration/models_services_test.py::ServiceTest::test_tasks ERROR [ 94%]
tests/integration/models_services_test.py::ServiceTest::test_update ERROR [ 94%]
tests/integration/models_services_test.py::ServiceTest::test_update_remove_service_labels ERROR [ 94%]
tests/integration/models_services_test.py::ServiceTest::test_update_retains_container_labels ERROR [ 95%]
tests/integration/models_services_test.py::ServiceTest::test_update_retains_networks XFAIL [ 95%]
tests/integration/models_services_test.py::ServiceTest::test_update_retains_service_labels ERROR [ 95%]
tests/integration/models_swarm_test.py::SwarmTest::test_init_update_leave FAILED [ 95%]
tests/integration/models_swarm_test.py::SwarmTest::test_join_on_already_joined_swarm FAILED [ 96%]
tests/integration/models_volumes_test.py::VolumesTest::test_create_get PASSED [ 96%]
tests/integration/models_volumes_test.py::VolumesTest::test_list_remove FAILED [ 96%]
tests/integration/regression_test.py::TestRegressions::test_443_handle_nonchunked_response_in_stream FAILED [ 96%]
tests/integration/regression_test.py::TestRegressions::test_542_truncate_ids_client_side PASSED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_647_support_doubleslash_in_image_names PASSED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_649_handle_timeout_value_none PASSED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_715_handle_user_param_as_int_value PASSED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_792_explicit_port_protocol FAILED [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_store_and_get ERROR [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_get_nonexistent ERROR [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_store_and_erase ERROR [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_unicode_strings ERROR [ 99%]
tests/integration/credentials/store_test.py::TestStore::test_list ERROR  [ 99%]
tests/integration/credentials/store_test.py::TestStore::test_execute_with_env_override ERROR [ 99%]
tests/integration/credentials/utils_test.py::test_create_environment_dict PASSED [100%]

==================================== ERRORS ====================================
______________ ERROR at setup of ConfigAPITest.test_create_config ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ConfigAPITest.test_create_config_unicode_data ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ ERROR at setup of ConfigAPITest.test_inspect_config ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of ConfigAPITest.test_list_configs _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of ConfigAPITest.test_remove_config ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of SecretAPITest.test_create_secret ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of SecretAPITest.test_create_secret_unicode_data ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ ERROR at setup of SecretAPITest.test_inspect_secret ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of SecretAPITest.test_list_secrets _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of SecretAPITest.test_remove_secret ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_custom_log_driver ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_create_service_global_mode _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_replicated_mode _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________ ERROR at setup of ServiceTest.test_create_service_simple ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_create_service_with_config _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_custom_networks ____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_with_dns_config _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_with_endpoint_spec _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_endpoint_spec_host_publish_mode _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________ ERROR at setup of ServiceTest.test_create_service_with_env __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_failure_action_rollback _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___ ERROR at setup of ServiceTest.test_create_service_with_generic_resources ___
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_create_service_with_groups _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_with_healthcheck ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_create_service_with_hostname ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________ ERROR at setup of ServiceTest.test_create_service_with_hosts _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________ ERROR at setup of ServiceTest.test_create_service_with_init __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_invalid_generic_resources _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_network_attachment_config _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_create_service_with_placement _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___ ERROR at setup of ServiceTest.test_create_service_with_placement_object ____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__ ERROR at setup of ServiceTest.test_create_service_with_placement_platform ___
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_placement_preferences _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_placement_preferences_tuple _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_with_privileges _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_create_service_with_readonly ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_resources_constraints _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_restart_policy _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_rollback_config ____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_create_service_with_secret _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_with_stop_signal ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________ ERROR at setup of ServiceTest.test_create_service_with_tty __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_create_service_with_tty_dict ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_unicode_config _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_unicode_secret _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_with_update_config _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_update_config_monitor _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_with_update_order ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_with_volume_mount ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________ ERROR at setup of ServiceTest.test_inspect_service_by_id ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________ ERROR at setup of ServiceTest.test_inspect_service_by_name __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_inspect_service_insert_defaults ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________ ERROR at setup of ServiceTest.test_list_services _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_list_services_filter_by_label _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________ ERROR at setup of ServiceTest.test_remove_service_by_id ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________ ERROR at setup of ServiceTest.test_remove_service_by_name ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________ ERROR at setup of ServiceTest.test_service_logs ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_update_service_force_update ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__ ERROR at setup of ServiceTest.test_update_service_remove_container_labels ___
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_update_service_remove_healthcheck _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_update_service_remove_labels ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_update_service_with_defaults_container_labels _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_update_service_with_defaults_endpoint_spec _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_update_service_with_defaults_labels ____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_update_service_with_defaults_mode _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_update_service_with_defaults_name _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___ ERROR at setup of ServiceTest.test_update_service_with_defaults_networks ___
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_update_service_with_defaults_update_config _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_update_service_with_network_change _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________ ERROR at setup of ServiceTest.test_create ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
____________ ERROR at setup of ServiceTest.test_create_with_network ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
___________ ERROR at setup of ServiceTest.test_force_update_service ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
______ ERROR at setup of ServiceTest.test_force_update_service_using_bool ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_ ERROR at setup of ServiceTest.test_force_update_service_using_shorthand_method _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
____________________ ERROR at setup of ServiceTest.test_get ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
________________ ERROR at setup of ServiceTest.test_list_remove ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
________ ERROR at setup of ServiceTest.test_scale_method_global_service ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
___________ ERROR at setup of ServiceTest.test_scale_method_service ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_______________ ERROR at setup of ServiceTest.test_scale_service _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
___________________ ERROR at setup of ServiceTest.test_tasks ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
__________________ ERROR at setup of ServiceTest.test_update ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_______ ERROR at setup of ServiceTest.test_update_remove_service_labels ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
______ ERROR at setup of ServiceTest.test_update_retains_container_labels ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_______ ERROR at setup of ServiceTest.test_update_retains_service_labels _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
________________ ERROR at setup of TestStore.test_store_and_get ________________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
_______________ ERROR at setup of TestStore.test_get_nonexistent _______________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
_______________ ERROR at setup of TestStore.test_store_and_erase _______________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
_______________ ERROR at setup of TestStore.test_unicode_strings _______________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
____________________ ERROR at setup of TestStore.test_list _____________________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
__________ ERROR at setup of TestStore.test_execute_with_env_override __________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
=================================== FAILURES ===================================
________________ BuildTest.test_build_in_context_abs_dockerfile ________________
tests/integration/api_build_test.py:575: in test_build_in_context_abs_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built d101af552072\n'
__________________ BuildTest.test_build_in_context_dockerfile __________________
tests/integration/api_build_test.py:510: in test_build_in_context_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built 2945e3dc24a1\n'
______________ BuildTest.test_build_in_context_nested_dockerfile _______________
tests/integration/api_build_test.py:543: in test_build_in_context_nested_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built 82c2e78db401\n'
____________________ BuildTest.test_build_invalid_platform _____________________
tests/integration/api_build_test.py:448: in test_build_invalid_platform
    pass
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
_________________________ BuildTest.test_build_labels __________________________
tests/integration/api_build_test.py:215: in test_build_labels
    assert info['Config']['Labels'] == labels
E   AssertionError: assert {'io.buildah.... 'test': 'OK'} == {'test': 'OK'}
E     Omitting 1 identical items, use -vv to show
E     Left contains more items:
E     {'io.buildah.version': '1.19.0-dev'}
E     Full diff:
E     - {'io.buildah.version': '1.19.0-dev', 'test': 'OK'}
E     + {'test': 'OK'}
________________ BuildTest.test_build_out_of_context_dockerfile ________________
tests/integration/api_build_test.py:481: in test_build_out_of_context_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   KeyError: 'stream'
_________________________ BuildTest.test_build_squash __________________________
tests/integration/api_build_test.py:371: in test_build_squash
    assert len(non_squashed['RootFS']['Layers']) == 4
E   AssertionError: assert 2 == 4
E     -2
E     +4
_______________________ BuildTest.test_build_stderr_data _______________________
tests/integration/api_build_test.py:391: in test_build_stderr_data
    assert any([line == expected for line in lines])
E   AssertionError: assert False
E    +  where False = any([False, False, False, False, False, False, ...])
_____________________ BuildTest.test_build_with_cache_from _____________________
tests/integration/api_build_test.py:240: in test_build_with_cache_from
    assert counter == 3
E   AssertionError: assert 0 == 3
E     -0
E     +3
____________________ BuildTest.test_build_with_extra_hosts _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/images/dockerpytest_extrahost_build/json

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:340: in test_build_with_extra_hosts
    assert self.client.inspect_image(img_name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:253: in inspect_image
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.40/images/dockerpytest_extrahost_build/json: Not Found ("failed to find image dockerpytest_extrahost_build: unable to find a name and tag match for dockerpytest_extrahost_build in repotags: No such image")
____________________ BuildTest.test_build_with_network_mode ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_660e7edc2a040943/connect

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:283: in test_build_with_network_mode
    self.client.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_660e7edc2a040943/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
___________________ ListContainersTest.test_list_containers ____________________
tests/integration/api_container_test.py:40: in test_list_containers
    assert re.search(r'alpine:.*', retrieved['Image']) is not None
E   AssertionError: assert None is not None
E    +  where None = <function search at 0x7f2d349525e0>('alpine:.*', 'docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c')
E    +    where <function search at 0x7f2d349525e0> = re.search
_________ CreateContainerTest.test_create_container_with_volumes_from __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:149: in test_create_container_with_volumes_from
    res = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("container create: error looking up container "foobar_vol0" for volumes-from: no container with name or ID foobar_vol0 found: no such container")
___________ CreateContainerTest.test_create_with_device_cgroup_rules ___________
tests/integration/api_container_test.py:477: in test_create_with_device_cgroup_rules
    assert config['HostConfig']['DeviceCgroupRules'] == [rule]
E   AssertionError: assert None == ['c 7:128 rwm']
E     -None
E     +['c 7:128 rwm']
______ CreateContainerTest.test_create_with_environment_variable_no_value ______
tests/integration/api_container_test.py:373: in test_create_with_environment_variable_no_value
    assert 'Foo' in config['Config']['Env']
E   AssertionError: assert 'Foo' in ['PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'TERM=xterm', 'container=podman', 'Other=one', 'Blank=', 'HOSTNAME=']
________________ CreateContainerTest.test_create_with_isolation ________________
tests/integration/api_container_test.py:402: in test_create_with_isolation
    assert config['HostConfig']['Isolation'] == 'default'
E   AssertionError: assert '' == 'default'
E     + default
__________________ CreateContainerTest.test_create_with_links __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:96: in test_create_with_links
    res2 = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request ("bad parameter: Link is not supported")
_______________ CreateContainerTest.test_create_with_mac_address _______________
tests/integration/api_container_test.py:217: in test_create_with_mac_address
    assert mac_address_expected == res['NetworkSettings']['MacAddress']
E   AssertionError: assert '02:42:ac:11:00:0a' == ''
E     - 02:42:ac:11:00:0a
_______ CreateContainerTest.test_create_with_memory_constraints_with_int _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e230a9efcd9cd40218e8c3ca984f105105b1ea1ee6cb5adc7f0aebe84fa51cbe/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:358: in test_create_with_memory_constraints_with_int
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e230a9efcd9cd40218e8c3ca984f105105b1ea1ee6cb5adc7f0aebe84fa51cbe/start: Internal Server Error ("command rootless-cni-infra [alloc e230a9efcd9cd40218e8c3ca984f105105b1ea1ee6cb5adc7f0aebe84fa51cbe default serene_cohen] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_______ CreateContainerTest.test_create_with_memory_constraints_with_str _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/503a9dfea6ffd8dd2050f1ab00b64337aff8c3d8526726f4a3a290a63f72c0ec/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:343: in test_create_with_memory_constraints_with_str
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/503a9dfea6ffd8dd2050f1ab00b64337aff8c3d8526726f4a3a290a63f72c0ec/start: Internal Server Error ("command rootless-cni-infra [alloc 503a9dfea6ffd8dd2050f1ab00b64337aff8c3d8526726f4a3a290a63f72c0ec default upbeat_dubinsky] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_____________ CreateContainerTest.test_create_with_restart_policy ______________
tests/integration/api_container_test.py:127: in test_create_with_restart_policy
    self.client.remove_container(id)
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
__________________ CreateContainerTest.test_create_with_tmpfs __________________
tests/integration/api_container_test.py:391: in test_create_with_tmpfs
    assert config['HostConfig']['Tmpfs'] == tmpfs
E   AssertionError: assert {'/tmp1=size=...ev,tmpcopyup'} == {'/tmp1': 'size=3M'}
E     Left contains more items:
E     {'/tmp1=size=3M': 'rw,rprivate,nosuid,nodev,tmpcopyup'}
E     Right contains more items:
E     {'/tmp1': 'size=3M'}
E     Full diff:
E     - {'/tmp1=size=3M': 'rw,rprivate,nosuid,nodev,tmpcopyup'}
E     + {'/tmp1': 'size=3M'}
____________________ CreateContainerTest.test_group_id_ints ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/de1597707ec5b7d604eb293a8c61cecc20e6311f8793d49ed05e7fb1bcb756bb/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:227: in test_group_id_ints
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/de1597707ec5b7d604eb293a8c61cecc20e6311f8793d49ed05e7fb1bcb756bb/start: Internal Server Error ("command rootless-cni-infra [alloc de1597707ec5b7d604eb293a8c61cecc20e6311f8793d49ed05e7fb1bcb756bb default exciting_kirch] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
__________________ CreateContainerTest.test_group_id_strings ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a31c3c0d967574ff203bd0a1c0a0cd5d6f0aa4b3b4bbbc0bb86e3c43b8231fea/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:244: in test_group_id_strings
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a31c3c0d967574ff203bd0a1c0a0cd5d6f0aa4b3b4bbbc0bb86e3c43b8231fea/start: Internal Server Error ("command rootless-cni-infra [alloc a31c3c0d967574ff203bd0a1c0a0cd5d6f0aa4b3b4bbbc0bb86e3c43b8231fea default exciting_almeida] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_________ CreateContainerTest.test_invalid_log_driver_raises_exception _________
tests/integration/api_container_test.py:293: in test_invalid_log_driver_raises_exception
    assert excinfo.value.explanation in expected_msgs
E   AssertionError: assert 'container create: error running container create option: invalid log driver: invalid argument' in ["logger: no log driver named 'asdf' is registered", 'error looking up logging plugin asdf: plugin "asdf" not found']
E    +  where 'container create: error running container create option: invalid log driver: invalid argument' = APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')).explanation
E    +    where APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) = <ExceptionInfo APIError tblen=6>.value
____________ CreateContainerTest.test_valid_log_driver_and_log_opt _____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/80edee8d16875396f4c3218f28a6eff3cc8ad41aa542129c728ba3e533d15fc9/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:266: in test_valid_log_driver_and_log_opt
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/80edee8d16875396f4c3218f28a6eff3cc8ad41aa542129c728ba3e533d15fc9/start: Internal Server Error ("command rootless-cni-infra [alloc 80edee8d16875396f4c3218f28a6eff3cc8ad41aa542129c728ba3e533d15fc9 default nifty_moser] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
______________ CreateContainerTest.test_valid_no_config_specified ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a04f93b0b7122ce0297c8fbf9e05503c8059c45bd8e4e4a92aefabec99b46098/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:325: in test_valid_no_config_specified
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a04f93b0b7122ce0297c8fbf9e05503c8059c45bd8e4e4a92aefabec99b46098/start: Internal Server Error ("command rootless-cni-infra [alloc a04f93b0b7122ce0297c8fbf9e05503c8059c45bd8e4e4a92aefabec99b46098 default heuristic_franklin] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
____________ CreateContainerTest.test_valid_no_log_driver_specified ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/2deca868b786fd14d7cbe71425c5b1cdd669bbe8dd2cd9bfb73dbfb61c10da20/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:306: in test_valid_no_log_driver_specified
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2deca868b786fd14d7cbe71425c5b1cdd669bbe8dd2cd9bfb73dbfb61c10da20/start: Internal Server Error ("command rootless-cni-infra [alloc 2deca868b786fd14d7cbe71425c5b1cdd669bbe8dd2cd9bfb73dbfb61c10da20 default affectionate_hoover] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
____________________ VolumeBindTest.test_create_with_mounts ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/fc65d5a9e232b28368150a1c6d180a715ffd4464d5daf323cd82091b5b76e78c/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:552: in test_create_with_mounts
    container = self.run_container(
tests/integration/base.py:100: in run_container
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/fc65d5a9e232b28368150a1c6d180a715ffd4464d5daf323cd82091b5b76e78c/start: Internal Server Error ("command rootless-cni-infra [alloc fc65d5a9e232b28368150a1c6d180a715ffd4464d5daf323cd82091b5b76e78c default wonderful_knuth] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
__________________ VolumeBindTest.test_create_with_mounts_ro ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/fb4a4a81ab5cdefb68fa8c8263fad2e1a42657a32c95e58a43843c767a1ae50a/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:571: in test_create_with_mounts_ro
    container = self.run_container(
tests/integration/base.py:100: in run_container
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/fb4a4a81ab5cdefb68fa8c8263fad2e1a42657a32c95e58a43843c767a1ae50a/start: Internal Server Error ("command rootless-cni-infra [alloc fb4a4a81ab5cdefb68fa8c8263fad2e1a42657a32c95e58a43843c767a1ae50a default silly_bhaskara] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
___________________ ArchiveTest.test_copy_file_to_container ____________________
tests/integration/api_container_test.py:689: in test_copy_file_to_container
    assert logs.strip() == data
E   AssertionError: assert '' == 'Deaf To All But The Song'
E     + Deaf To All But The Song
_______________ ArchiveTest.test_get_file_archive_from_container _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/c091807f33faf343a8c5bd19a9f62728c12039c845caaf944fbe7b520b1e2faa/archive?path=%2Fvol1%2Fdata.txt

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:644: in test_get_file_archive_from_container
    strm, stat = self.client.get_archive(ctnr, '/vol1/data.txt')
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:750: in get_archive
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/c091807f33faf343a8c5bd19a9f62728c12039c845caaf944fbe7b520b1e2faa/archive?path=%2Fvol1%2Fdata.txt: Not Found ("file doesn't exist (errs: "copier: stat: \"/vol1/data.txt\": no such file or directory")")
________________ ArchiveTest.test_get_file_stat_from_container _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/6671fdae8af4c5cc55e498445716feb43a46d353df63dd09c1e2b9a1839ac2fd/archive?path=%2Fvol1%2Fdata.txt

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:662: in test_get_file_stat_from_container
    strm, stat = self.client.get_archive(ctnr, '/vol1/data.txt')
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:750: in get_archive
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/6671fdae8af4c5cc55e498445716feb43a46d353df63dd09c1e2b9a1839ac2fd/archive?path=%2Fvol1%2Fdata.txt: Not Found ("file doesn't exist (errs: "copier: stat: \"/vol1/data.txt\": no such file or directory")")
__________________ RenameContainerTest.test_rename_container ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/2e7573b41bcfe13d352cc7ce7223df77a5b6a84169777817de914bd1a25de43e/rename?name=hong_meiling

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:720: in test_rename_container
    self.client.rename(res, name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1030: in rename
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/2e7573b41bcfe13d352cc7ce7223df77a5b6a84169777817de914bd1a25de43e/rename?name=hong_meiling: Not Found ("Path /v1.40/containers/2e7573b41bcfe13d352cc7ce7223df77a5b6a84169777817de914bd1a25de43e/rename is not supported")
______________________ WaitTest.test_wait_with_condition _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/2f280f552288701336405bd2e5ce4089de9d83a8a21d96a94eea61155a83ec32/wait?condition=removed

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:815: in test_wait_with_condition
    self.client.wait(ctnr, condition='removed', timeout=1)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1306: in wait
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2f280f552288701336405bd2e5ce4089de9d83a8a21d96a94eea61155a83ec32/wait?condition=removed: Internal Server Error ("unknown container state: removed: invalid argument")
________________________ LogsTest.test_logs_with_until _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/3a1e04dadc96baf941de7eaf42974f476e3314525f9a6171e72b8d09582652fb/logs?stderr=1&stdout=1&timestamps=0&follow=0&tail=all&until=1

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:931: in test_logs_with_until
    logs_until_1 = self.client.logs(container, until=1)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:871: in logs
    output = self._get_result(container, stream, res)
docker/api/client.py:486: in _get_result
    return self._get_result_tty(stream, res, self._check_is_tty(container))
docker/api/client.py:495: in _get_result_tty
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/3a1e04dadc96baf941de7eaf42974f476e3314525f9a6171e72b8d09582652fb/logs?stderr=1&stdout=1&timestamps=0&follow=0&tail=all&until=1: Bad Request ("failed to parse query parameter 'until': "1": unable to interpret time value")
______________________________ PortTest.test_port ______________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/352b434d6ebb4dc65a626150358d2efc984dc55c755984285636884ad52c97e7/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1090: in test_port
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/352b434d6ebb4dc65a626150358d2efc984dc55c755984285636884ad52c97e7/start: Internal Server Error ("command rootless-cni-infra [alloc 352b434d6ebb4dc65a626150358d2efc984dc55c755984285636884ad52c97e7 bridge zealous_johnson] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
__________________ AttachContainerTest.test_attach_no_stream ___________________
tests/integration/api_container_test.py:1252: in test_attach_no_stream
    assert output == 'hello\n'.encode(encoding='ascii')
E   AssertionError: assert b'hello' == b'hello\n'
E     Right contains more items, first extra item: 10
E     Full diff:
E     - b'hello'
E     + b'hello\n'
E     ?        ++
________________ ContainerUpdateTest.test_restart_policy_update ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/81cc17268f68bf8e583b3dae76dc6a8c3a09a7c0e56575f2b460f3da924789b8/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1437: in test_restart_policy_update
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/81cc17268f68bf8e583b3dae76dc6a8c3a09a7c0e56575f2b460f3da924789b8/start: Internal Server Error ("command rootless-cni-infra [alloc 81cc17268f68bf8e583b3dae76dc6a8c3a09a7c0e56575f2b460f3da924789b8 default agitated_euler] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
__________________ ContainerUpdateTest.test_update_container ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/5553060f40789bfe520a0980b61d2ae7dd890d4a3abd379c4f63e3056df8bea3/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1415: in test_update_container
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/5553060f40789bfe520a0980b61d2ae7dd890d4a3abd379c4f63e3056df8bea3/start: Internal Server Error ("command rootless-cni-infra [alloc 5553060f40789bfe520a0980b61d2ae7dd890d4a3abd379c4f63e3056df8bea3 default strange_bhabha] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
__________________ ContainerCPUTest.test_container_cpu_shares __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/90b1a83f672ee496ca26b4024d3711a88a70f2e9e81b9bfb295231773c5e7f82/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1460: in test_container_cpu_shares
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/90b1a83f672ee496ca26b4024d3711a88a70f2e9e81b9bfb295231773c5e7f82/start: Internal Server Error ("command rootless-cni-infra [alloc 90b1a83f672ee496ca26b4024d3711a88a70f2e9e81b9bfb295231773c5e7f82 default charming_bose] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
____________________ ContainerCPUTest.test_container_cpuset ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/d5f0bb1ab0875ee0b96d443ebbd7d9eee70a45e8d079fa94876ddb2c686a8196/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1472: in test_container_cpuset
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/d5f0bb1ab0875ee0b96d443ebbd7d9eee70a45e8d079fa94876ddb2c686a8196/start: Internal Server Error ("command rootless-cni-infra [alloc d5f0bb1ab0875ee0b96d443ebbd7d9eee70a45e8d079fa94876ddb2c686a8196 default infallible_tu] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
__________________ ContainerCPUTest.test_create_with_runtime ___________________
tests/integration/api_container_test.py:1483: in test_create_with_runtime
    assert config['HostConfig']['Runtime'] == 'runc'
E   AssertionError: assert 'oci' == 'runc'
E     - oci
E     + runc
__________________________ LinkTest.test_remove_link ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1501: in test_remove_link
    container2 = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request ("bad parameter: Link is not supported")
____________________ ExecTest.test_detach_with_config_file _____________________
tests/integration/api_exec_test.py:227: in test_detach_with_config_file
    assert_cat_socket_detached_with_keys(sock, [ctrl_with('p')])
tests/helpers.py:138: in assert_cat_socket_detached_with_keys
    assert data == b'' or data.startswith(
E   AssertionError
______________________ ExecTest.test_exec_start_detached _______________________
tests/integration/api_exec_test.py:152: in test_exec_start_detached
    assert response == ""
E   AssertionError: assert '\n' == ''
E     Strings contain only whitespace, escaping them using repr()
E     - '\n'
E     + ''
_______________________ ExecTest.test_exec_start_socket ________________________
tests/integration/api_exec_test.py:134: in test_exec_start_socket
    assert stream == 1  # stdout (0 = stdin, 1 = stdout, 2 = stderr)
E   AssertionError: assert 121 == 1
E     -121
E     +1
_____________ ExecDemuxTest.test_exec_command_tty_no_stream_demux ______________
tests/integration/api_exec_test.py:299: in test_exec_command_tty_no_stream_demux
    exec_log = self.client.exec_start(res, demux=True)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/exec_api.py:169: in exec_start
    return self._read_from_socket(res, stream, tty=tty, demux=demux)
docker/api/client.py:450: in _read_from_socket
    return consume_socket_output(gen, demux=demux)
docker/utils/socket.py:142: in consume_socket_output
    for frame in frames:
docker/api/client.py:441: in <genexpr>
    gen = (demux_adaptor(*frame) for frame in gen)
docker/utils/socket.py:169: in demux_adaptor
    raise ValueError('{0} is not a valid stream'.format(stream_id))
E   ValueError: 104 is not a valid stream
____________ ExecDemuxTest.test_exec_command_tty_no_stream_no_demux ____________
tests/integration/api_exec_test.py:282: in test_exec_command_tty_no_stream_no_demux
    assert exec_log == b'hello out\r\nhello err\r\n'
E   AssertionError: assert b't\r\nhello err\r\n' == b'hello out\r\nhello err\r\n'
E     At index 0 diff: 116 != 104
E     Right contains more items, first extra item: 108
E     Full diff:
E     - b't\r\nhello err\r\n'
E     + b'hello out\r\nhello err\r\n'
E     ?   ++++++++
_______________ ExecDemuxTest.test_exec_command_tty_stream_demux _______________
tests/integration/api_exec_test.py:305: in test_exec_command_tty_stream_demux
    exec_log = list(self.client.exec_start(res, demux=True, stream=True))
docker/api/client.py:441: in <genexpr>
    gen = (demux_adaptor(*frame) for frame in gen)
docker/utils/socket.py:169: in demux_adaptor
    raise ValueError('{0} is not a valid stream'.format(stream_id))
E   ValueError: 104 is not a valid stream
_____________ ExecDemuxTest.test_exec_command_tty_stream_no_demux ______________
tests/integration/api_exec_test.py:288: in test_exec_command_tty_stream_no_demux
    assert b'hello out\r\n' in exec_log
E   AssertionError: assert b'hello out\r\n' in [b't\r\n', b'hello err\r\n']
____________________ HealthcheckTest.test_healthcheck_fails ____________________
tests/integration/api_healthcheck_test.py:51: in test_healthcheck_fails
    wait_on_health_status(self.client, container, "unhealthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'
___________________ HealthcheckTest.test_healthcheck_passes ____________________
tests/integration/api_healthcheck_test.py:38: in test_healthcheck_passes
    wait_on_health_status(self.client, container, "healthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'
________________ HealthcheckTest.test_healthcheck_shell_command ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_healthcheck_test.py:18: in test_healthcheck_shell_command
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("fill out specgen: healthcheck-retries must be greater than 0")
________________ HealthcheckTest.test_healthcheck_start_period _________________
tests/integration/api_healthcheck_test.py:68: in test_healthcheck_start_period
    wait_on_health_status(self.client, container, "healthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'
___________________ PullImageTest.test_pull_invalid_platform ___________________
tests/integration/api_image_test.py:70: in test_pull_invalid_platform
    self.client.pull('hello-world', platform='foobar')
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
____________________________ CommitTest.test_commit ____________________________
tests/integration/api_image_test.py:93: in test_commit
    assert TEST_IMG == img['ContainerConfig']['Image']
E   AssertionError: assert 'alpine:3.10' == 'docker.io/library/sha...97472e91ecb41504e8a27c'
E     - alpine:3.10
E     + docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c
_____________________ CommitTest.test_commit_with_changes ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/commit?container=48056450ed13bd2943af9fb2a865162e31bf0633c99617d646d5725573946d12&changes=EXPOSE+8000&changes=CMD+%5B%22bash%22%5D

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:102: in test_commit_with_changes
    img_id = self.client.commit(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:147: in commit
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/commit?container=48056450ed13bd2943af9fb2a865162e31bf0633c99617d646d5725573946d12&changes=EXPOSE+8000&changes=CMD+%5B%22bash%22%5D: Internal Server Error ("CommitFailure: invalid change "CMD" - must be formatted as KEY VALUE")
_____________________ ImportImageTest.test_get_load_image ______________________
tests/integration/api_image_test.py:267: in test_get_load_image
    assert any([
E   AssertionError: assert False
E    +  where False = any([])
______________________ PruneImagesTest.test_prune_images _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/images/prune?filters=%7B%22dangling%22%3A+%5B%22false%22%5D%7D

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:332: in test_prune_images
    result = self.client.prune_images({'dangling': False})
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/image.py:351: in prune_images
    return self._result(self._post(url, params=params), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/images/prune?filters=%7B%22dangling%22%3A+%5B%22false%22%5D%7D: Internal Server Error ("runtime error: invalid memory address or nil pointer dereference")
_________________ SaveLoadImagesTest.test_get_image_load_image _________________
tests/integration/api_image_test.py:361: in test_get_image_load_image
    assert success is True
E   AssertionError: assert False is True
----------------------------- Captured stdout call -----------------------------
{'stream': 'Loaded image: docker.io/library/alpine:3.10\n'}
______________ InspectDistributionTest.test_inspect_distribution _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/distribution/busybox:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:367: in test_inspect_distribution
    data = self.client.inspect_distribution('busybox:latest')
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:289: in inspect_distribution
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/distribution/busybox:latest/json: Not Found ("Path /v1.40/distribution/busybox:latest/json is not supported")
______________ TestNetworks.test_connect_and_disconnect_container ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_2868e0e3ec9a250e/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:102: in test_connect_and_disconnect_container
    self.client.connect_container_to_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_2868e0e3ec9a250e/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
___________ TestNetworks.test_connect_and_force_disconnect_container ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_9f6da6cd57d80bb9/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:129: in test_connect_and_force_disconnect_container
    self.client.connect_container_to_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_9f6da6cd57d80bb9/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
________________ TestNetworks.test_connect_on_container_create _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_7e293402a00b5ef7/disconnect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:175: in test_connect_on_container_create
    self.client.disconnect_container_from_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:274: in disconnect_container_from_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_7e293402a00b5ef7/disconnect: Internal Server Error ("network connect is not enabled for rootless containers")
____________________ TestNetworks.test_connect_with_aliases ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_38f94bcf1caa7e89/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:151: in test_connect_with_aliases
    self.client.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_38f94bcf1caa7e89/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
_________________ TestNetworks.test_connect_with_ipv4_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/0deb9d8f9ccea9b1a6ee7bb3fd11819a7957338293d551c11cb1e820bf0c7943/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:373: in test_connect_with_ipv4_address
    container = self.create_and_start(
tests/integration/base.py:115: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/0deb9d8f9ccea9b1a6ee7bb3fd11819a7957338293d551c11cb1e820bf0c7943/start: Internal Server Error ("command rootless-cni-infra [alloc 0deb9d8f9ccea9b1a6ee7bb3fd11819a7957338293d551c11cb1e820bf0c7943 dockerpytest_6502c1084a4dc283 nervous_chandrasekhar] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="failed to set bridge addr: \"cni-podman0\" already has an IP address different from 172.28.5.254/16\n"")
_________________ TestNetworks.test_connect_with_ipv6_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_220adb577668977d/disconnect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:402: in test_connect_with_ipv6_address
    self.client.disconnect_container_from_network(container, net_name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:274: in disconnect_container_from_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_220adb577668977d/disconnect: Internal Server Error ("network connect is not enabled for rootless containers")
_____________________ TestNetworks.test_connect_with_links _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_84a7e4a05f3fada9/disconnect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:340: in test_connect_with_links
    self.client.disconnect_container_from_network(container, net_name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:274: in disconnect_container_from_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_84a7e4a05f3fada9/disconnect: Internal Server Error ("network connect is not enabled for rootless containers")
___________________ TestNetworks.test_create_check_duplicate ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/create

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:330: in test_create_check_duplicate
    net_id = self.client.create_network(net_name, check_duplicate=False)
docker/api/network.py:153: in create_network
    return self._result(res, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/create: Internal Server Error ("the network name dockerpytest_592b4bd02a2042a5 is already used")
_____________ TestNetworks.test_create_inspect_network_with_scope ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:474: in test_create_inspect_network_with_scope
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________________ TestNetworks.test_create_network_attachable __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:453: in test_create_network_attachable
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________________ TestNetworks.test_create_network_ingress ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:460: in test_create_network_ingress
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________________ TestNetworks.test_create_network_ipv6_enabled _________________
tests/integration/api_network_test.py:449: in test_create_network_ipv6_enabled
    assert net['EnableIPv6'] is True
E   AssertionError: assert False is True
______________ TestNetworks.test_create_network_with_ipam_config _______________
tests/integration/api_network_test.py:70: in test_create_network_with_ipam_config
    assert ipam['Config'] == [{
E   AssertionError: assert [{'Gateway': ...2.28.0.0/16'}] == [{'AuxiliaryAd...2.28.0.0/16'}]
E     At index 0 diff: {'Subnet': '172.28.0.0/16', 'Gateway': '172.28.5.254'} != {'Subnet': '172.28.0.0/16', 'IPRange': '172.28.5.0/24', 'Gateway': '172.28.5.254', 'AuxiliaryAddresses': {'a': '172.28.1.5', 'b': '172.28.1.6', 'c': '172.28.1.7'}}
E     Full diff:
E     - [{'Gateway': '172.28.5.254', 'Subnet': '172.28.0.0/16'}]
E     + [{'AuxiliaryAddresses': {'a': '172.28.1.5',
E     +                          'b': '172.28.1.6',
E     +                          'c': '172.28.1.7'},
E     +   'Gateway': '172.28.5.254',...
E     
E     ...Full output truncated (3 lines hidden), use '-vv' to show
___________________ TestNetworks.test_create_with_driveropt ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6d8a0f807800fed90749391a8e158de6b357baa749462f0d7542fd49f2e5e595/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:292: in test_create_with_driveropt
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6d8a0f807800fed90749391a8e158de6b357baa749462f0d7542fd49f2e5e595/start: Internal Server Error ("command rootless-cni-infra [alloc 6d8a0f807800fed90749391a8e158de6b357baa749462f0d7542fd49f2e5e595 bridge lucid_lamarr] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
__________________ TestNetworks.test_create_with_ipv4_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/d80ed8a9f1b8f2ed3e263d1e64f957b8333c87840dc6824f43554bcbeb4e6be3/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:223: in test_create_with_ipv4_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/d80ed8a9f1b8f2ed3e263d1e64f957b8333c87840dc6824f43554bcbeb4e6be3/start: Internal Server Error ("command rootless-cni-infra [alloc d80ed8a9f1b8f2ed3e263d1e64f957b8333c87840dc6824f43554bcbeb4e6be3 dockerpytest_15e6a3c7e807b6b great_jepsen] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="failed to set bridge addr: \"cni-podman0\" already has an IP address different from 132.124.0.1/16\n"")
__________________ TestNetworks.test_create_with_ipv6_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a8bb9755f82cc4d90d750db3e5d276b011126e03d5b929df611dfce958e8a9c4/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:249: in test_create_with_ipv6_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a8bb9755f82cc4d90d750db3e5d276b011126e03d5b929df611dfce958e8a9c4/start: Internal Server Error ("command rootless-cni-infra [alloc a8bb9755f82cc4d90d750db3e5d276b011126e03d5b929df611dfce958e8a9c4 dockerpytest_b1094228dc491ec2 tender_chaum] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="failed to set bridge addr: \"cni-podman0\" already has an IP address different from 2001:389::1/64\n"")
_________________ TestNetworks.test_create_with_linklocal_ips __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/c953f749cfb796a5ec537c198194da0160aac2f7eafe9dea71d4fbe9ba0e9132/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:271: in test_create_with_linklocal_ips
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c953f749cfb796a5ec537c198194da0160aac2f7eafe9dea71d4fbe9ba0e9132/start: Internal Server Error ("command rootless-cni-infra [alloc c953f749cfb796a5ec537c198194da0160aac2f7eafe9dea71d4fbe9ba0e9132 bridge blissful_davinci] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_____________________ TestNetworks.test_create_with_links ______________________
tests/integration/api_network_test.py:315: in test_create_with_links
    assert net_settings['Networks'][net_name]['Links'] == [
E   AssertionError: assert None == ['docker-py-test-upstream:bar']
E     -None
E     +['docker-py-test-upstream:bar']
______________________ TestNetworks.test_inspect_network _______________________
tests/integration/api_network_test.py:38: in test_inspect_network
    assert net['Id'] == net_id
E   AssertionError: assert '70de48ff5a59...2387185c9ba2d' == 'dockerpytest_2d9cd9c95f55c588'
E     - 70de48ff5a59884e162c022f628ad5771e9575c4344b8278b6d2387185c9ba2d
E     + dockerpytest_2d9cd9c95f55c588
_______________________ TestNetworks.test_list_networks ________________________
tests/integration/api_network_test.py:26: in test_list_networks
    assert net_id in [n['Id'] for n in networks]
E   AssertionError: assert 'dockerpytest_8259c78d112089fe' in ['20525f83edc6406ea529eac7b867b93b6a039d35c28634e552557fc5962bf0d0']
_______________________ TestNetworks.test_prune_networks _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 405 Client Error: Method Not Allowed for url: http+docker://localhost/v1.40/networks/prune

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:469: in test_prune_networks
    result = self.client.prune_networks()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/network.py:175: in prune_networks
    return self._result(self._post(url, params=params), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 405 Client Error for http+docker://localhost/v1.40/networks/prune: Method Not Allowed ("b'Method Not Allowed'")
_______________________ TestNetworks.test_remove_network _______________________
tests/integration/api_network_test.py:90: in test_remove_network
    assert net_name not in [n['Name'] for n in self.client.networks()]
E   TypeError: 'NoneType' object is not iterable
_______________________ PluginTest.test_configure_plugin _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:90: in test_configure_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_create_plugin _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/create?name=docker-sdk-py%2Fdummy

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:140: in test_create_plugin
    assert self.client.create_plugin(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:52: in create_plugin
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/create?name=docker-sdk-py%2Fdummy: Not Found ("b'Not Found'")
________________________ PluginTest.test_disable_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:56: in test_disable_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_enable_plugin _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:47: in test_enable_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
_____________________ PluginTest.test_force_remove_plugin ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:109: in test_force_remove_plugin
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_inspect_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:68: in test_inspect_plugin
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_install_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:120: in test_install_plugin
    prv = self.client.plugin_privileges(SSHFS)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
_________________________ PluginTest.test_list_plugins _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:83: in test_list_plugins
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
______________________ PluginTest.test_plugin_privileges _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:75: in test_plugin_privileges
    prv = self.client.plugin_privileges(SSHFS)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_remove_plugin _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:104: in test_remove_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_upgrade_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:128: in test_upgrade_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
____________________ SwarmTest.test_init_already_in_cluster ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:69: in test_init_already_in_cluster
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ SwarmTest.test_init_swarm_custom_addr_pool_both_args _____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:61: in test_init_swarm_custom_addr_pool_both_args
    assert self.init_swarm(default_addr_pool=['2.0.0.0/16', '3.0.0.0/16'],
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ SwarmTest.test_init_swarm_custom_addr_pool_defaults ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:40: in test_init_swarm_custom_addr_pool_defaults
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ SwarmTest.test_init_swarm_custom_addr_pool_only_pool _____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:47: in test_init_swarm_custom_addr_pool_only_pool
    assert self.init_swarm(default_addr_pool=['2.0.0.0/16'])
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________ SwarmTest.test_init_swarm_custom_addr_pool_only_subnet_size __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:54: in test_init_swarm_custom_addr_pool_only_subnet_size
    assert self.init_swarm(subnet_size=26)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________ SwarmTest.test_init_swarm_custom_raft_spec __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:78: in test_init_swarm_custom_raft_spec
    assert self.init_swarm(swarm_spec=spec)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________________ SwarmTest.test_init_swarm_simple _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:26: in test_init_swarm_simple
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________ SwarmTest.test_init_swarm_with_autolock_managers _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:101: in test_init_swarm_with_autolock_managers
    assert self.init_swarm(swarm_spec=spec)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________________ SwarmTest.test_init_swarm_with_ca_config ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:89: in test_init_swarm_with_ca_config
    assert self.init_swarm(swarm_spec=spec)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________________________ SwarmTest.test_inspect_node __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:189: in test_inspect_node
    node_id = self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________________ SwarmTest.test_leave_swarm __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:127: in test_leave_swarm
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________________ SwarmTest.test_list_nodes ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:170: in test_list_nodes
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________________ SwarmTest.test_remove_main_node ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:224: in test_remove_main_node
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________________ SwarmTest.test_rotate_manager_unlock_key ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:242: in test_rotate_manager_unlock_key
    assert self.init_swarm(swarm_spec=spec)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________________ SwarmTest.test_update_node __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:201: in test_update_node
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________________________ SwarmTest.test_update_swarm __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:139: in test_update_swarm
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________________ TestVolumes.test_create_volume_invalid_driver _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/volumes/create

During handling of the above exception, another exception occurred:
tests/integration/api_volume_test.py:22: in test_create_volume_invalid_driver
    self.client.create_volume('perfectcherryblossom', driver_name)
docker/api/volume.py:89: in create_volume
    return self._result(self._post_json(url, data=data), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/volumes/create: Internal Server Error ("error running volume create option: not yet implemented")
_______________________ TestVolumes.test_inspect_volume ________________________
tests/integration/api_volume_test.py:38: in test_inspect_volume
    assert volume_info == result
E   AssertionError: assert {'CreatedAt':...l/_data', ...} == {'CreatedAt': ...l/_data', ...}
E     Omitting 6 identical items, use -vv to show
E     Differing items:
E     {'Options': None} != {'Options': {}}
E     Full diff:
E     {'CreatedAt': '2020-12-07T21:41:10+01:00',
E     'Driver': 'local',
E     'Labels': {},...
E     
E     ...Full output truncated (8 lines hidden), use '-vv' to show
________________________ TestVolumes.test_list_volumes _________________________
tests/integration/api_volume_test.py:31: in test_list_volumes
    assert volume_info in volumes
E   AssertionError: assert {'CreatedAt': '2020-12-07T21:41:12+01:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...} in [{'CreatedAt': '2020-12-07T21:32:41+01:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage...00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...}]
___________________ ContextLifecycleTest.test_context_remove ___________________
tests/integration/context_api_test.py:47: in test_context_remove
    ContextAPI.create_context("test")
docker/context/api.py:57: in create_context
    raise errors.ContextAlreadyExists(name)
E   docker.errors.ContextAlreadyExists: context test already exists
_____________________ ContextLifecycleTest.test_lifecycle ______________________
tests/integration/context_api_test.py:13: in test_lifecycle
    assert not ContextAPI.get_context("test")
E   AssertionError: assert not <Context: 'test'>
E    +  where <Context: 'test'> = <bound method ContextAPI.get_context of <class 'docker.context.api.ContextAPI'>>('test')
E    +    where <bound method ContextAPI.get_context of <class 'docker.context.api.ContextAPI'>> = ContextAPI.get_context
_________ ContextLifecycleTest.test_load_context_without_orchestrator __________
tests/integration/context_api_test.py:55: in test_load_context_without_orchestrator
    ContextAPI.create_context("test")
docker/context/api.py:57: in create_context
    raise errors.ContextAlreadyExists(name)
E   docker.errors.ContextAlreadyExists: context test already exists
____________________ ErrorsTest.test_api_error_parses_json _____________________
tests/integration/errors_test.py:13: in test_api_error_parses_json
    assert 'You cannot remove a running container' in explanation
E   AssertionError: assert 'You cannot remove a running container' in 'cannot remove container 13c9b11e551aa581f5363987908f711afd1260b34f8744b1253970d89122ab60 as it is running - running or paused containers cannot be removed without force: container state improper'
_______________________ ContainerCollectionTest.test_get _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/d59ff28399955349e32d75bebed2025f52ba1c54724ea0085a694b92825818c0/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:187: in test_get
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/d59ff28399955349e32d75bebed2025f52ba1c54724ea0085a694b92825818c0/start: Internal Server Error ("command rootless-cni-infra [alloc d59ff28399955349e32d75bebed2025f52ba1c54724ea0085a694b92825818c0 default blissful_blackwell] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
______________________ ContainerCollectionTest.test_list _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/83e8a471cb9feb3f8f149a45f948fb8d5f786823200fdea91cde264b45575b8d/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:194: in test_list
    container_id = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/83e8a471cb9feb3f8f149a45f948fb8d5f786823200fdea91cde264b45575b8d/start: Internal Server Error ("command rootless-cni-infra [alloc 83e8a471cb9feb3f8f149a45f948fb8d5f786823200fdea91cde264b45575b8d default sleepy_hugle] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
___________________ ContainerCollectionTest.test_list_sparse ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/1084241552e063e273ce72a15d1fb0293060146ef28eaaebca8cafd9bfb28b1e/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:212: in test_list_sparse
    container_id = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/1084241552e063e273ce72a15d1fb0293060146ef28eaaebca8cafd9bfb28b1e/start: Internal Server Error ("command rootless-cni-infra [alloc 1084241552e063e273ce72a15d1fb0293060146ef28eaaebca8cafd9bfb28b1e default goofy_feistel] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_______________________ ContainerCollectionTest.test_run _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/3adc9f957b6215e19e44c9d26a2cb6fdb9da99123660c612f64c756d52f7a90c/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:18: in test_run
    assert client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3adc9f957b6215e19e44c9d26a2cb6fdb9da99123660c612f64c756d52f7a90c/start: Internal Server Error ("command rootless-cni-infra [alloc 3adc9f957b6215e19e44c9d26a2cb6fdb9da99123660c612f64c756d52f7a90c default tender_nightingale] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
___________________ ContainerCollectionTest.test_run_detach ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/ab6cc769a1ad780a220a5e343b73e1bdb7fcd8dc13c8c1e76cec29edfa5d1bb7/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:24: in test_run_detach
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/ab6cc769a1ad780a220a5e343b73e1bdb7fcd8dc13c8c1e76cec29edfa5d1bb7/start: Internal Server Error ("command rootless-cni-infra [alloc ab6cc769a1ad780a220a5e343b73e1bdb7fcd8dc13c8c1e76cec29edfa5d1bb7 default eager_cerf] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
______________ ContainerCollectionTest.test_run_with_auto_remove _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/636231b09c92138bedc69f2a97af421d917255d58fd52e97db201142a6467e76/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:128: in test_run_with_auto_remove
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/636231b09c92138bedc69f2a97af421d917255d58fd52e97db201142a6467e76/start: Internal Server Error ("command rootless-cni-infra [alloc 636231b09c92138bedc69f2a97af421d917255d58fd52e97db201142a6467e76 default jovial_wu] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
___________ ContainerCollectionTest.test_run_with_auto_remove_error ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/066ad05a41324964a05e86c3e0f047bab42452e6b9984f34591eb37a632cd05d/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:139: in test_run_with_auto_remove_error
    client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/066ad05a41324964a05e86c3e0f047bab42452e6b9984f34591eb37a632cd05d/start: Internal Server Error ("command rootless-cni-infra [alloc 066ad05a41324964a05e86c3e0f047bab42452e6b9984f34591eb37a632cd05d default lucid_jemison] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_________________ ContainerCollectionTest.test_run_with_error __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/dc61834a353f2dae6797ec8da58a7d265de387af358b10702ec8b491759bca5a/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:32: in test_run_with_error
    client.containers.run("alpine", "cat /test", remove=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/dc61834a353f2dae6797ec8da58a7d265de387af358b10702ec8b491759bca5a/start: Internal Server Error ("command rootless-cni-infra [alloc dc61834a353f2dae6797ec8da58a7d265de387af358b10702ec8b491759bca5a default pensive_lamarr] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_______ ContainerCollectionTest.test_run_with_image_that_does_not_exist ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:41: in test_run_with_image_that_does_not_exist
    client.containers.run("dockerpytest_does_not_exist")
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/create: Not Found ("unable to find a name and tag match for dockerpytest_does_not_exist in repotags: no such image")
____________ ContainerCollectionTest.test_run_with_json_file_driver ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6eb234ec5cbcecc41f8253667427a46dd279eeeb066eaf33190ba72e98587350/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:119: in test_run_with_json_file_driver
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6eb234ec5cbcecc41f8253667427a46dd279eeeb066eaf33190ba72e98587350/start: Internal Server Error ("command rootless-cni-infra [alloc 6eb234ec5cbcecc41f8253667427a46dd279eeeb066eaf33190ba72e98587350 default condescending_beaver] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
______________ ContainerCollectionTest.test_run_with_named_volume ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/2ec48f8d92c86c7584da139ce47573aac87a5094b4824c489ae2c61d6af71b22/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:72: in test_run_with_named_volume
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2ec48f8d92c86c7584da139ce47573aac87a5094b4824c489ae2c61d6af71b22/start: Internal Server Error ("command rootless-cni-infra [alloc 2ec48f8d92c86c7584da139ce47573aac87a5094b4824c489ae2c61d6af71b22 default vibrant_noyce] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
______________ ContainerCollectionTest.test_run_with_none_driver _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/db5717d728a3626d39427bf88b4f8e6b3323ed3bd4b1b7b52f6dd8f7e5c78c91/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:110: in test_run_with_none_driver
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/db5717d728a3626d39427bf88b4f8e6b3323ed3bd4b1b7b52f6dd8f7e5c78c91/start: Internal Server Error ("command rootless-cni-infra [alloc db5717d728a3626d39427bf88b4f8e6b3323ed3bd4b1b7b52f6dd8f7e5c78c91 default funny_tereshkova] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
______________ ContainerCollectionTest.test_run_with_proxy_config ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/da7e811d68fa109f9bda107d7ea42b93b370a72bb0152a3797c6aa406acd4734/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:180: in test_run_with_proxy_config
    out = client.containers.run('alpine', 'sh -c "env"')
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/da7e811d68fa109f9bda107d7ea42b93b370a72bb0152a3797c6aa406acd4734/start: Internal Server Error ("command rootless-cni-infra [alloc da7e811d68fa109f9bda107d7ea42b93b370a72bb0152a3797c6aa406acd4734 default xenodochial_tesla] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_____________ ContainerCollectionTest.test_run_with_streamed_logs ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/9ff4a8af2b07e6ceb66ee21523b0ab62dfd6da61597d83c7f40fd6ca6b66c883/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:150: in test_run_with_streamed_logs
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/9ff4a8af2b07e6ceb66ee21523b0ab62dfd6da61597d83c7f40fd6ca6b66c883/start: Internal Server Error ("command rootless-cni-infra [alloc 9ff4a8af2b07e6ceb66ee21523b0ab62dfd6da61597d83c7f40fd6ca6b66c883 default infallible_dirac] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
________ ContainerCollectionTest.test_run_with_streamed_logs_and_cancel ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/98f5079c39a6968337647e8c15ff267b9e409c770d628a202fcdaabd4ff872a9/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:162: in test_run_with_streamed_logs_and_cancel
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/98f5079c39a6968337647e8c15ff267b9e409c770d628a202fcdaabd4ff872a9/start: Internal Server Error ("command rootless-cni-infra [alloc 98f5079c39a6968337647e8c15ff267b9e409c770d628a202fcdaabd4ff872a9 default goofy_goodall] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_________________ ContainerCollectionTest.test_run_with_volume _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6cf77bef193a50e57c3c1bac1438177ba403f7eed60aab9ef98beb32e44573b7/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:50: in test_run_with_volume
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6cf77bef193a50e57c3c1bac1438177ba403f7eed60aab9ef98beb32e44573b7/start: Internal Server Error ("command rootless-cni-infra [alloc 6cf77bef193a50e57c3c1bac1438177ba403f7eed60aab9ef98beb32e44573b7 default elated_hodgkin] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_commit ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/0237aecba0543dd7e79a230aa548e4297324810e248ade129d8189d2670ca586/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:235: in test_commit
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/0237aecba0543dd7e79a230aa548e4297324810e248ade129d8189d2670ca586/start: Internal Server Error ("command rootless-cni-infra [alloc 0237aecba0543dd7e79a230aa548e4297324810e248ade129d8189d2670ca586 default tender_sutherland] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_________________ ContainerTest.test_create_with_volume_driver _________________
tests/integration/models_containers_test.py:456: in test_create_with_volume_driver
    assert container.attrs['HostConfig']['VolumeDriver'] == 'foo'
E   AssertionError: assert '' == 'foo'
E     + foo
___________________________ ContainerTest.test_diff ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/faadd16d6183e875c1270b978d4d980e4c1c9422304d85cc1ce15ecfdbec1667/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:248: in test_diff
    container = client.containers.run("alpine", "touch /test", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/faadd16d6183e875c1270b978d4d980e4c1c9422304d85cc1ce15ecfdbec1667/start: Internal Server Error ("command rootless-cni-infra [alloc faadd16d6183e875c1270b978d4d980e4c1c9422304d85cc1ce15ecfdbec1667 default vigorous_panini] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
______________________ ContainerTest.test_exec_run_failed ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/89d65ad0a22b6707cb28654ac3d49c8e7419b7c10fc0df8a0e9700517272e0d7/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:265: in test_exec_run_failed
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/89d65ad0a22b6707cb28654ac3d49c8e7419b7c10fc0df8a0e9700517272e0d7/start: Internal Server Error ("command rootless-cni-infra [alloc 89d65ad0a22b6707cb28654ac3d49c8e7419b7c10fc0df8a0e9700517272e0d7 default cranky_edison] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_____________________ ContainerTest.test_exec_run_success ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/793fffca9f0ad261d9fc4acdb5a5e0ec977b3021e4886283b3c1ca2699c7f82c/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:255: in test_exec_run_success
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/793fffca9f0ad261d9fc4acdb5a5e0ec977b3021e4886283b3c1ca2699c7f82c/start: Internal Server Error ("command rootless-cni-infra [alloc 793fffca9f0ad261d9fc4acdb5a5e0ec977b3021e4886283b3c1ca2699c7f82c default elated_bartik] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_kill ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/c17cbfbddd32fae684d17c3f4409c999ee3f023878c646cd4fa412d9ca8aee1c/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:274: in test_kill
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c17cbfbddd32fae684d17c3f4409c999ee3f023878c646cd4fa412d9ca8aee1c/start: Internal Server Error ("command rootless-cni-infra [alloc c17cbfbddd32fae684d17c3f4409c999ee3f023878c646cd4fa412d9ca8aee1c default condescending_saha] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_logs ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/7f286016f9a9c1b948e9ee667659011ef61855438f0ef5c066d108b8796dfdf1/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:285: in test_logs
    container = client.containers.run("alpine", "echo hello world",
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7f286016f9a9c1b948e9ee667659011ef61855438f0ef5c066d108b8796dfdf1/start: Internal Server Error ("command rootless-cni-infra [alloc 7f286016f9a9c1b948e9ee667659011ef61855438f0ef5c066d108b8796dfdf1 default modest_darwin] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_pause ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/03616fc93fa7f4f776fbd15b4bd430aa734d0af64fb73d023a00087cb50435a9/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:293: in test_pause
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/03616fc93fa7f4f776fbd15b4bd430aa734d0af64fb73d023a00087cb50435a9/start: Internal Server Error ("command rootless-cni-infra [alloc 03616fc93fa7f4f776fbd15b4bd430aa734d0af64fb73d023a00087cb50435a9 default musing_antonelli] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_____________________ ContainerTest.test_ports_target_list _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/5b7872bac8a5f2e914a3c663c9b11a245043b3fb306e2088a9123140dcb481db/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:394: in test_ports_target_list
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/5b7872bac8a5f2e914a3c663c9b11a245043b3fb306e2088a9123140dcb481db/start: Internal Server Error ("command rootless-cni-infra [alloc 5b7872bac8a5f2e914a3c663c9b11a245043b3fb306e2088a9123140dcb481db default recursing_hellman] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_____________________ ContainerTest.test_ports_target_none _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:354: in test_ports_target_none
    container = client.containers.run(
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("make cli opts(): strconv.Atoi: parsing "": invalid syntax")
____________________ ContainerTest.test_ports_target_tuple _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/3aa6d9cbeea26b6aebd297e790e4e1b3db9a41f641491bb22a5d11e12b7a1559/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:374: in test_ports_target_tuple
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3aa6d9cbeea26b6aebd297e790e4e1b3db9a41f641491bb22a5d11e12b7a1559/start: Internal Server Error ("command rootless-cni-infra [alloc 3aa6d9cbeea26b6aebd297e790e4e1b3db9a41f641491bb22a5d11e12b7a1559 default happy_ramanujan] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_remove ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b0cff249c128e93918bb5d216d910854e60e0b06a10822ba8369056cd099fdaf/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:304: in test_remove
    container = client.containers.run("alpine", "echo hello", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b0cff249c128e93918bb5d216d910854e60e0b06a10822ba8369056cd099fdaf/start: Internal Server Error ("command rootless-cni-infra [alloc b0cff249c128e93918bb5d216d910854e60e0b06a10822ba8369056cd099fdaf default tender_herschel] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_rename ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e4b7b565e3c3114c8a749ef91882861b4538ab45a098180bb94136eb6978e889/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:314: in test_rename
    container = client.containers.run("alpine", "echo hello", name="test1",
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e4b7b565e3c3114c8a749ef91882861b4538ab45a098180bb94136eb6978e889/start: Internal Server Error ("command rootless-cni-infra [alloc e4b7b565e3c3114c8a749ef91882861b4538ab45a098180bb94136eb6978e889 default boring_jones] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_restart __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b2b236a7b74d97432e46547eb1c23b92510129ba0db04d00a697400e58ee4e45/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:324: in test_restart
    container = client.containers.run("alpine", "sleep 100", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b2b236a7b74d97432e46547eb1c23b92510129ba0db04d00a697400e58ee4e45/start: Internal Server Error ("command rootless-cni-infra [alloc b2b236a7b74d97432e46547eb1c23b92510129ba0db04d00a697400e58ee4e45 default sharp_golick] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_start ___________________________
tests/integration/models_containers_test.py:336: in test_start
    assert container.status == "created"
E   AssertionError: assert 'configured' == 'created'
E     - configured
E     + created
___________________________ ContainerTest.test_stats ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/c37c29c01f680bd033848101ebcaddebf37b68b4703b56ab8f43aaa001a09669/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:343: in test_stats
    container = client.containers.run("alpine", "sleep 100", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c37c29c01f680bd033848101ebcaddebf37b68b4703b56ab8f43aaa001a09669/start: Internal Server Error ("command rootless-cni-infra [alloc c37c29c01f680bd033848101ebcaddebf37b68b4703b56ab8f43aaa001a09669 default angry_vaughan] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_stop ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/440fdcc0491e6ebb49df90cd03fe1bc128af36874202529f8c6dd54b7f0cede6/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:412: in test_stop
    container = client.containers.run("alpine", "top", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/440fdcc0491e6ebb49df90cd03fe1bc128af36874202529f8c6dd54b7f0cede6/start: Internal Server Error ("command rootless-cni-infra [alloc 440fdcc0491e6ebb49df90cd03fe1bc128af36874202529f8c6dd54b7f0cede6 default agitated_heisenberg] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
____________________________ ContainerTest.test_top ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/ed055fd0723a6afe77df11c26e9f36510dd4fee5fd2d6f1b73247d4222d1453b/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:421: in test_top
    container = client.containers.run("alpine", "sleep 60", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/ed055fd0723a6afe77df11c26e9f36510dd4fee5fd2d6f1b73247d4222d1453b/start: Internal Server Error ("command rootless-cni-infra [alloc ed055fd0723a6afe77df11c26e9f36510dd4fee5fd2d6f1b73247d4222d1453b default sad_hugle] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_update ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/10b08d5436353b25b966539e9db72c2c7ae8a8e8a7f1a8fa58e493f2e22be751/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:429: in test_update
    container = client.containers.run("alpine", "sleep 60", detach=True,
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/10b08d5436353b25b966539e9db72c2c7ae8a8e8a7f1a8fa58e493f2e22be751/start: Internal Server Error ("command rootless-cni-infra [alloc 10b08d5436353b25b966539e9db72c2c7ae8a8e8a7f1a8fa58e493f2e22be751 default charming_hypatia] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_wait ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/4d30451ce0d3e79980957ba101c20be14a0efdaaf5f50bfefb3731d0050689b0/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:439: in test_wait
    container = client.containers.run("alpine", "sh -c 'exit 0'",
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4d30451ce0d3e79980957ba101c20be14a0efdaaf5f50bfefb3731d0050689b0/start: Internal Server Error ("command rootless-cni-infra [alloc 4d30451ce0d3e79980957ba101c20be14a0efdaaf5f50bfefb3731d0050689b0 default goofy_fermi] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
________________________ ImageCollectionTest.test_build ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:20: in test_build
    assert client.containers.run(image) == b"hello world\n"
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("container create: both RootfsImageName and RootfsImageID must be set if either is set: invalid argument")
__________________ ImageCollectionTest.test_build_with_error ___________________
tests/integration/models_images_test.py:30: in test_build_with_error
    assert (
E   AssertionError: assert "The command '/bin/sh -c exit 1' returned a non-zero code: 1" in 'docker.errors.BuildError: error building at STEP "RUN exit 1": exit status 1'
E    +  where 'docker.errors.BuildError: error building at STEP "RUN exit 1": exit status 1' = <bound method ExceptionInfo.exconly of <ExceptionInfo BuildError tblen=2>>()
E    +    where <bound method ExceptionInfo.exconly of <ExceptionInfo BuildError tblen=2>> = <ExceptionInfo BuildError tblen=2>.exconly
_____________ ImageCollectionTest.test_build_with_multiple_success _____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/12f62707691db1abb14af97246f9ed3f5fef9ce400bbb1d81b8802e21e598c35/start

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:44: in test_build_with_multiple_success
    assert client.containers.run(image) == b"hello world\n"
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/12f62707691db1abb14af97246f9ed3f5fef9ce400bbb1d81b8802e21e598c35/start: Internal Server Error ("command rootless-cni-infra [alloc 12f62707691db1abb14af97246f9ed3f5fef9ce400bbb1d81b8802e21e598c35 default hardcore_liskov] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
___________ ImageCollectionTest.test_build_with_success_build_output ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/57f2ea7f163d3f48ded7e28708956a110b16975d332e59bbd007bb40e61ebd20/start

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:55: in test_build_with_success_build_output
    assert client.containers.run(image) == b"Successfully built abcd1234\n"
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/57f2ea7f163d3f48ded7e28708956a110b16975d332e59bbd007bb40e61ebd20/start: Internal Server Error ("command rootless-cni-infra [alloc 57f2ea7f163d3f48ded7e28708956a110b16975d332e59bbd007bb40e61ebd20 default distracted_wiles] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_____________________ ImageCollectionTest.test_load_error ______________________
tests/integration/models_images_test.py:98: in test_load_error
    client.images.load('abc')
E   Failed: DID NOT RAISE <class 'docker.errors.ImageLoadError'>
________________________ ImageCollectionTest.test_pull _________________________
tests/integration/models_images_test.py:71: in test_pull
    assert 'alpine:latest' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:latest' in ['docker.io/library/alpine:latest', 'docker.io/library/alpine:3.12']
____________________ ImageCollectionTest.test_pull_multiple ____________________
tests/integration/models_images_test.py:91: in test_pull_multiple
    assert any([
tests/integration/models_images_test.py:91: in <listcomp>
    assert any([
E   TypeError: argument of type 'NoneType' is not iterable
____________________ ImageCollectionTest.test_pull_with_sha ____________________
tests/integration/models_images_test.py:85: in test_pull_with_sha
    assert image_ref in image.attrs['RepoDigests']
E   AssertionError: assert 'hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7' in ['docker.io/library/hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7', 'docker.io/library/hello-world@sha256:8072a54ebb3bc136150e2f2860f00a7bf45f13eeb917cca2430fcd0054c8e51b']
____________________ ImageCollectionTest.test_pull_with_tag ____________________
tests/integration/models_images_test.py:76: in test_pull_with_tag
    assert 'alpine:3.10' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:3.10' in ['docker.io/library/alpine:3.10', 'docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c']
_______________ ImageCollectionTest.test_save_and_load_repo_name _______________
tests/integration/models_images_test.py:122: in test_save_and_load_repo_name
    stream = image.save(named='{}:latest'.format(additional_tag))
docker/models/images.py:98: in save
    raise InvalidArgument(
E   docker.errors.InvalidArgument: dockerpytest_e6adc596fe00f4e2:latest is not a valid tag for this image
____________________ NetworkCollectionTest.test_list_remove ____________________
tests/integration/models_networks_test.py:30: in test_list_remove
    assert network.id not in [
docker/models/networks.py:210: in list
    networks = [self.prepare_model(item) for item in resp]
E   TypeError: 'NoneType' object is not iterable
_____________________ NetworkTest.test_connect_disconnect ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/c26d81b6c1bae4ac8483ac1c3e73dbf3b9a45966c580c1692a2016c487398058/connect

During handling of the above exception, another exception occurred:
tests/integration/models_networks_test.py:59: in test_connect_disconnect
    network.connect(container)
docker/models/networks.py:58: in connect
    return self.client.api.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/c26d81b6c1bae4ac8483ac1c3e73dbf3b9a45966c580c1692a2016c487398058/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
________________________ NodesTest.test_list_get_update ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_nodes_test.py:18: in test_list_get_update
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
____________________________ ModelTest.test_reload _____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/d38151baac01cfe9bbd1078cb559d4e00acde73f14113c392bf978053ec8d58f/start

During handling of the above exception, another exception occurred:
tests/integration/models_resources_test.py:9: in test_reload
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/d38151baac01cfe9bbd1078cb559d4e00acde73f14113c392bf978053ec8d58f/start: Internal Server Error ("command rootless-cni-infra [alloc d38151baac01cfe9bbd1078cb559d4e00acde73f14113c392bf978053ec8d58f default practical_lamarr] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
_______________________ SwarmTest.test_init_update_leave _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_swarm_test.py:19: in test_init_update_leave
    client.swarm.init(
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_________________ SwarmTest.test_join_on_already_joined_swarm __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_swarm_test.py:37: in test_join_on_already_joined_swarm
    client.swarm.init()
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_________________________ VolumesTest.test_list_remove _________________________
tests/integration/models_volumes_test.py:26: in test_list_remove
    assert volume in client.volumes.list(filters={'name': 'dockerpytest_'})
E   AssertionError: assert <Volume: dockerpyte> in []
E    +  where [] = <bound method VolumeCollection.list of <docker.models.volumes.VolumeCollection object at 0x7f2d317af100>>(filters={'name': 'dockerpytest_'})
E    +    where <bound method VolumeCollection.list of <docker.models.volumes.VolumeCollection object at 0x7f2d317af100>> = <docker.models.volumes.VolumeCollection object at 0x7f2d317af100>.list
E    +      where <docker.models.volumes.VolumeCollection object at 0x7f2d317af100> = <docker.client.DockerClient object at 0x7f2d3195a2b0>.volumes
________ TestRegressions.test_443_handle_nonchunked_response_in_stream _________
tests/integration/regression_test.py:16: in test_443_handle_nonchunked_response_in_stream
    pass
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
_______________ TestRegressions.test_792_explicit_port_protocol ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/be6a4eb2b9d7815bdd43f6f65110277937180a4533d9988ab83c239e56fb97cf/start

During handling of the above exception, another exception occurred:
tests/integration/regression_test.py:56: in test_792_explicit_port_protocol
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/be6a4eb2b9d7815bdd43f6f65110277937180a4533d9988ab83c239e56fb97cf/start: Internal Server Error ("command rootless-cni-infra [alloc be6a4eb2b9d7815bdd43f6f65110277937180a4533d9988ab83c239e56fb97cf default musing_elbakyan] in container a3800f8ab3e5e380de08bc3c9e06a9c7977561b235a0311495bf11b0299bf209 failed with status 1, stdout="", stderr="no net configurations found in /etc/cni/net.d\n"")
=============================== warnings summary ===============================
tests/integration/api_client_test.py::ConnectionTimeoutTest::test_timeout
  /home/riyad/src/docker-py/docker/utils/utils.py:276: DeprecationWarning: urllib.parse.splitnport() is deprecated as of 3.8, use urllib.parse.urlparse() instead
    host, port = splitnport(parsed_url.netloc)

-- Docs: https://docs.pytest.org/en/latest/warnings.html
=========================== short test summary info ============================
XFAIL tests/integration/api_build_test.py::BuildTest::test_prune_builds
  Currently fails on 18.09: https://github.com/moby/moby/issues/37920
XFAIL tests/integration/api_container_test.py::CreateContainerTest::test_create_with_storage_opt
  Not supported on most drivers
XFAIL tests/integration/api_container_test.py::ContainerTopTest::test_top
  Output of docker top depends on host distro, and is not formalized.
XFAIL tests/integration/api_container_test.py::ContainerTopTest::test_top_with_psargs
  Output of docker top depends on host distro, and is not formalized.
XFAIL tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_data_path_addr
  Can fail if eth0 has multiple IP addresses
XFAIL tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_with_log_driver
  This doesn't seem to be taken into account by the engine
XFAIL tests/integration/models_services_test.py::ServiceTest::test_update_retains_networks
  Flaky test
SKIPPED [1] tests/integration/api_image_test.py:292: Doesn't work inside a container - FIXME
SKIPPED [1] /home/riyad/src/docker-py/tests/integration/api_swarm_test.py:31: Test stalls the engine on 1.12.0
= 173 failed, 116 passed, 2 skipped, 7 xfailed, 1 xpassed, 1 warnings, 90 error in 908.70 seconds =
