============================= test session starts ==============================
platform linux -- Python 3.8.5, pytest-4.3.1, py-1.9.0, pluggy-0.13.1 -- /home/riyad/.virtualenvs/docker-py/bin/python
cachedir: .pytest_cache
rootdir: /home/riyad/src/docker-py, inifile: pytest.ini
plugins: cov-2.6.1, timeout-1.3.3
collecting ... collected 389 items

tests/integration/api_build_test.py::BuildTest::test_build_container_with_target PASSED [  0%]
tests/integration/api_build_test.py::BuildTest::test_build_from_stringio PASSED [  0%]
tests/integration/api_build_test.py::BuildTest::test_build_gzip_custom_encoding PASSED [  0%]
tests/integration/api_build_test.py::BuildTest::test_build_gzip_encoding PASSED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_abs_dockerfile FAILED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_dockerfile FAILED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_nested_dockerfile FAILED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_invalid_platform FAILED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_isolation PASSED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_labels FAILED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_out_of_context_dockerfile FAILED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_shmsize PASSED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_squash FAILED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_stderr_data FAILED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_streaming PASSED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_with_buildargs PASSED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_with_cache_from FAILED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_with_dockerfile_empty_lines PASSED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_with_dockerignore PASSED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_with_extra_hosts FAILED [  5%]
tests/integration/api_build_test.py::BuildTest::test_build_with_network_mode FAILED [  5%]
tests/integration/api_build_test.py::BuildTest::test_build_with_proxy PASSED [  5%]
tests/integration/api_build_test.py::BuildTest::test_build_with_proxy_and_buildargs PASSED [  5%]
tests/integration/api_build_test.py::BuildTest::test_prune_builds XFAIL  [  6%]
tests/integration/api_client_test.py::InformationTest::test_info PASSED  [  6%]
tests/integration/api_client_test.py::InformationTest::test_version PASSED [  6%]
tests/integration/api_client_test.py::AutoDetectVersionTest::test_client_init PASSED [  6%]
tests/integration/api_client_test.py::ConnectionTimeoutTest::test_timeout PASSED [  7%]
tests/integration/api_client_test.py::UnixconnTest::test_resource_warnings PASSED [  7%]
tests/integration/api_config_test.py::ConfigAPITest::test_create_config ERROR [  7%]
tests/integration/api_config_test.py::ConfigAPITest::test_create_config_unicode_data ERROR [  7%]
tests/integration/api_config_test.py::ConfigAPITest::test_inspect_config ERROR [  8%]
tests/integration/api_config_test.py::ConfigAPITest::test_list_configs ERROR [  8%]
tests/integration/api_config_test.py::ConfigAPITest::test_remove_config ERROR [  8%]
tests/integration/api_container_test.py::ListContainersTest::test_list_containers PASSED [  8%]
tests/integration/api_container_test.py::CreateContainerTest::test_create PASSED [  9%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_container_with_volumes_from PASSED [  9%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_auto_remove PASSED [  9%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_cpu_rt_options XPASS [ 10%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_device_cgroup_rules FAILED [ 10%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_environment_variable_no_value FAILED [ 10%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_host_pid_mode FAILED [ 10%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_init PASSED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_isolation FAILED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_links FAILED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_mac_address FAILED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_memory_constraints_with_int PASSED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_memory_constraints_with_str PASSED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_restart_policy FAILED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_stop_timeout PASSED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_storage_opt XFAIL [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_tmpfs FAILED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_uts_mode PASSED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_group_id_ints PASSED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_group_id_strings PASSED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_invalid_log_driver_raises_exception FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_log_driver_and_log_opt FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_no_config_specified FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_no_log_driver_specified FAILED [ 15%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_binds_ro PASSED [ 15%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_binds_rw PASSED [ 15%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_mounts PASSED [ 15%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_mounts_ro FAILED [ 16%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_volume_mount PASSED [ 16%]
tests/integration/api_container_test.py::ArchiveTest::test_copy_directory_to_container FAILED [ 16%]
tests/integration/api_container_test.py::ArchiveTest::test_copy_file_to_container FAILED [ 16%]
tests/integration/api_container_test.py::ArchiveTest::test_get_file_archive_from_container FAILED [ 17%]
tests/integration/api_container_test.py::ArchiveTest::test_get_file_stat_from_container FAILED [ 17%]
tests/integration/api_container_test.py::RenameContainerTest::test_rename_container FAILED [ 17%]
tests/integration/api_container_test.py::StartContainerTest::test_run_shlex_commands PASSED [ 17%]
tests/integration/api_container_test.py::StartContainerTest::test_start_container PASSED [ 18%]
tests/integration/api_container_test.py::StartContainerTest::test_start_container_with_dict_instead_of_id PASSED [ 18%]
tests/integration/api_container_test.py::WaitTest::test_wait PASSED      [ 18%]
tests/integration/api_container_test.py::WaitTest::test_wait_with_condition FAILED [ 19%]
tests/integration/api_container_test.py::WaitTest::test_wait_with_dict_instead_of_id PASSED [ 19%]
tests/integration/api_container_test.py::LogsTest::test_logs PASSED      [ 19%]
tests/integration/api_container_test.py::LogsTest::test_logs_streaming_and_follow PASSED [ 19%]
tests/integration/api_container_test.py::LogsTest::test_logs_streaming_and_follow_and_cancel PASSED [ 20%]
tests/integration/api_container_test.py::LogsTest::test_logs_tail_option PASSED [ 20%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_dict_instead_of_id PASSED [ 20%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_tail_0 PASSED [ 20%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_until PASSED [ 21%]
tests/integration/api_container_test.py::DiffTest::test_diff PASSED      [ 21%]
tests/integration/api_container_test.py::DiffTest::test_diff_with_dict_instead_of_id PASSED [ 21%]
tests/integration/api_container_test.py::StopTest::test_stop PASSED      [ 21%]
tests/integration/api_container_test.py::StopTest::test_stop_with_dict_instead_of_id PASSED [ 22%]
tests/integration/api_container_test.py::KillTest::test_kill PASSED      [ 22%]
tests/integration/api_container_test.py::KillTest::test_kill_with_dict_instead_of_id PASSED [ 22%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal PASSED [ 22%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal_integer PASSED [ 23%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal_name PASSED [ 23%]
tests/integration/api_container_test.py::PortTest::test_port FAILED      [ 23%]
tests/integration/api_container_test.py::ContainerTopTest::test_top XFAIL [ 23%]
tests/integration/api_container_test.py::ContainerTopTest::test_top_with_psargs XFAIL [ 24%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart PASSED [ 24%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart_with_dict_instead_of_id PASSED [ 24%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart_with_low_timeout PASSED [ 24%]
tests/integration/api_container_test.py::RemoveContainerTest::test_remove PASSED [ 25%]
tests/integration/api_container_test.py::RemoveContainerTest::test_remove_with_dict_instead_of_id PASSED [ 25%]
tests/integration/api_container_test.py::AttachContainerTest::test_attach_no_stream FAILED [ 25%]
tests/integration/api_container_test.py::AttachContainerTest::test_attach_stream_and_cancel PASSED [ 25%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_arg PASSED [ 26%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_config_file PASSED [ 26%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_default PASSED [ 26%]
tests/integration/api_container_test.py::AttachContainerTest::test_run_container_reading_socket PASSED [ 26%]
tests/integration/api_container_test.py::AttachContainerTest::test_run_container_streaming PASSED [ 27%]
tests/integration/api_container_test.py::PauseTest::test_pause_unpause PASSED [ 27%]
tests/integration/api_container_test.py::PruneTest::test_prune_containers PASSED [ 27%]
tests/integration/api_container_test.py::GetContainerStatsTest::test_get_container_stats_no_stream PASSED [ 28%]
tests/integration/api_container_test.py::ContainerUpdateTest::test_restart_policy_update FAILED [ 28%]
tests/integration/api_container_test.py::ContainerUpdateTest::test_update_container FAILED [ 28%]
tests/integration/api_container_test.py::ContainerCPUTest::test_container_cpu_shares FAILED [ 28%]
tests/integration/api_container_test.py::ContainerCPUTest::test_container_cpuset FAILED [ 29%]
tests/integration/api_container_test.py::ContainerCPUTest::test_create_with_runtime FAILED [ 29%]
tests/integration/api_container_test.py::LinkTest::test_remove_link FAILED [ 29%]
tests/integration/api_exec_test.py::ExecTest::test_detach_with_config_file FAILED [ 29%]
tests/integration/api_exec_test.py::ExecTest::test_detach_with_default PASSED [ 30%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_as_root PASSED [ 30%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_as_user PASSED [ 30%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_streaming PASSED [ 30%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_string PASSED [ 31%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_with_env PASSED [ 31%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_with_workdir PASSED [ 31%]
tests/integration/api_exec_test.py::ExecTest::test_exec_inspect PASSED   [ 31%]
tests/integration/api_exec_test.py::ExecTest::test_exec_start_detached FAILED [ 32%]
tests/integration/api_exec_test.py::ExecTest::test_exec_start_socket FAILED [ 32%]
tests/integration/api_exec_test.py::ExecTest::test_execute_command PASSED [ 32%]
tests/integration/api_exec_test.py::ExecTest::test_execute_command_with_proxy_env PASSED [ 32%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_no_stream_demux PASSED [ 33%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_no_stream_no_demux PASSED [ 33%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_stream_demux PASSED [ 33%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_stream_no_demux PASSED [ 33%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_no_stream_demux FAILED [ 34%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_no_stream_no_demux FAILED [ 34%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_stream_demux FAILED [ 34%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_stream_no_demux FAILED [ 34%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_fails FAILED [ 35%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_passes FAILED [ 35%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_shell_command FAILED [ 35%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_start_period FAILED [ 35%]
tests/integration/api_image_test.py::ListImagesTest::test_images PASSED  [ 36%]
tests/integration/api_image_test.py::ListImagesTest::test_images_quiet PASSED [ 36%]
tests/integration/api_image_test.py::PullImageTest::test_pull PASSED     [ 36%]
tests/integration/api_image_test.py::PullImageTest::test_pull_invalid_platform FAILED [ 37%]
tests/integration/api_image_test.py::PullImageTest::test_pull_streaming PASSED [ 37%]
tests/integration/api_image_test.py::CommitTest::test_commit FAILED      [ 37%]
tests/integration/api_image_test.py::CommitTest::test_commit_with_changes FAILED [ 37%]
tests/integration/api_image_test.py::RemoveImageTest::test_remove PASSED [ 38%]
tests/integration/api_image_test.py::ImportImageTest::test_get_load_image FAILED [ 38%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_bytes PASSED [ 38%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_file PASSED [ 38%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_stream PASSED [ 39%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_url SKIPPED [ 39%]
tests/integration/api_image_test.py::ImportImageTest::test_import_image_from_data_with_changes PASSED [ 39%]
tests/integration/api_image_test.py::ImportImageTest::test_import_image_with_changes PASSED [ 39%]
tests/integration/api_image_test.py::PruneImagesTest::test_prune_images FAILED [ 40%]
tests/integration/api_image_test.py::SaveLoadImagesTest::test_get_image_load_image FAILED [ 40%]
tests/integration/api_image_test.py::InspectDistributionTest::test_inspect_distribution FAILED [ 40%]
tests/integration/api_network_test.py::TestNetworks::test_connect_and_disconnect_container FAILED [ 40%]
tests/integration/api_network_test.py::TestNetworks::test_connect_and_force_disconnect_container FAILED [ 41%]
tests/integration/api_network_test.py::TestNetworks::test_connect_on_container_create FAILED [ 41%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_aliases FAILED [ 41%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_ipv4_address FAILED [ 41%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_ipv6_address FAILED [ 42%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_links FAILED [ 42%]
tests/integration/api_network_test.py::TestNetworks::test_create_check_duplicate FAILED [ 42%]
tests/integration/api_network_test.py::TestNetworks::test_create_inspect_network_with_scope FAILED [ 42%]
tests/integration/api_network_test.py::TestNetworks::test_create_internal_networks PASSED [ 43%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_attachable FAILED [ 43%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_ingress FAILED [ 43%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_ipv6_enabled FAILED [ 43%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_host_driver_fails PASSED [ 44%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_ipam_config FAILED [ 44%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_labels PASSED [ 44%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_labels_wrong_type PASSED [ 44%]
tests/integration/api_network_test.py::TestNetworks::test_create_remove_network_with_space_in_name PASSED [ 45%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_aliases FAILED [ 45%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_driveropt FAILED [ 45%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_ipv4_address FAILED [ 46%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_ipv6_address FAILED [ 46%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_linklocal_ips FAILED [ 46%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_links FAILED [ 46%]
tests/integration/api_network_test.py::TestNetworks::test_inspect_network PASSED [ 47%]
tests/integration/api_network_test.py::TestNetworks::test_list_networks PASSED [ 47%]
tests/integration/api_network_test.py::TestNetworks::test_prune_networks FAILED [ 47%]
tests/integration/api_network_test.py::TestNetworks::test_remove_network PASSED [ 47%]
tests/integration/api_plugin_test.py::PluginTest::test_configure_plugin FAILED [ 48%]
tests/integration/api_plugin_test.py::PluginTest::test_create_plugin FAILED [ 48%]
tests/integration/api_plugin_test.py::PluginTest::test_disable_plugin FAILED [ 48%]
tests/integration/api_plugin_test.py::PluginTest::test_enable_plugin FAILED [ 48%]
tests/integration/api_plugin_test.py::PluginTest::test_force_remove_plugin FAILED [ 49%]
tests/integration/api_plugin_test.py::PluginTest::test_inspect_plugin FAILED [ 49%]
tests/integration/api_plugin_test.py::PluginTest::test_install_plugin FAILED [ 49%]
tests/integration/api_plugin_test.py::PluginTest::test_list_plugins FAILED [ 49%]
tests/integration/api_plugin_test.py::PluginTest::test_plugin_privileges FAILED [ 50%]
tests/integration/api_plugin_test.py::PluginTest::test_remove_plugin FAILED [ 50%]
tests/integration/api_plugin_test.py::PluginTest::test_upgrade_plugin FAILED [ 50%]
tests/integration/api_secret_test.py::SecretAPITest::test_create_secret ERROR [ 50%]
tests/integration/api_secret_test.py::SecretAPITest::test_create_secret_unicode_data ERROR [ 51%]
tests/integration/api_secret_test.py::SecretAPITest::test_inspect_secret ERROR [ 51%]
tests/integration/api_secret_test.py::SecretAPITest::test_list_secrets ERROR [ 51%]
tests/integration/api_secret_test.py::SecretAPITest::test_remove_secret ERROR [ 51%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_custom_log_driver ERROR [ 52%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_global_mode ERROR [ 52%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_replicated_mode ERROR [ 52%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_simple ERROR [ 52%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_config ERROR [ 53%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_custom_networks ERROR [ 53%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_dns_config ERROR [ 53%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_endpoint_spec ERROR [ 53%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_endpoint_spec_host_publish_mode ERROR [ 54%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_env ERROR [ 54%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_failure_action_rollback ERROR [ 54%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_generic_resources ERROR [ 55%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_groups ERROR [ 55%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_healthcheck ERROR [ 55%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_hostname ERROR [ 55%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_hosts ERROR [ 56%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_init ERROR [ 56%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_invalid_generic_resources ERROR [ 56%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_network_attachment_config ERROR [ 56%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement ERROR [ 57%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement_object ERROR [ 57%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement_platform ERROR [ 57%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement_preferences ERROR [ 57%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement_preferences_tuple ERROR [ 58%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_privileges ERROR [ 58%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_readonly ERROR [ 58%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_resources_constraints ERROR [ 58%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_restart_policy ERROR [ 59%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_rollback_config ERROR [ 59%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_secret ERROR [ 59%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_stop_signal ERROR [ 59%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_tty ERROR [ 60%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_tty_dict ERROR [ 60%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_unicode_config ERROR [ 60%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_unicode_secret ERROR [ 60%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_update_config ERROR [ 61%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_update_config_monitor ERROR [ 61%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_update_order ERROR [ 61%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_volume_mount ERROR [ 61%]
tests/integration/api_service_test.py::ServiceTest::test_inspect_service_by_id ERROR [ 62%]
tests/integration/api_service_test.py::ServiceTest::test_inspect_service_by_name ERROR [ 62%]
tests/integration/api_service_test.py::ServiceTest::test_inspect_service_insert_defaults ERROR [ 62%]
tests/integration/api_service_test.py::ServiceTest::test_list_services ERROR [ 62%]
tests/integration/api_service_test.py::ServiceTest::test_list_services_filter_by_label ERROR [ 63%]
tests/integration/api_service_test.py::ServiceTest::test_remove_service_by_id ERROR [ 63%]
tests/integration/api_service_test.py::ServiceTest::test_remove_service_by_name ERROR [ 63%]
tests/integration/api_service_test.py::ServiceTest::test_service_logs ERROR [ 64%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_force_update ERROR [ 64%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_remove_container_labels ERROR [ 64%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_remove_healthcheck ERROR [ 64%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_remove_labels ERROR [ 65%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_container_labels ERROR [ 65%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_endpoint_spec ERROR [ 65%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_labels ERROR [ 65%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_mode ERROR [ 66%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_name ERROR [ 66%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_networks ERROR [ 66%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_update_config ERROR [ 66%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_network_change ERROR [ 67%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_already_in_cluster FAILED [ 67%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_addr_pool_both_args FAILED [ 67%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_addr_pool_defaults FAILED [ 67%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_addr_pool_only_pool FAILED [ 68%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_addr_pool_only_subnet_size FAILED [ 68%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_raft_spec FAILED [ 68%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_data_path_addr XFAIL [ 68%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_force_new_cluster SKIPPED [ 69%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_simple FAILED [ 69%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_with_autolock_managers FAILED [ 69%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_with_ca_config FAILED [ 69%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_with_log_driver XFAIL [ 70%]
tests/integration/api_swarm_test.py::SwarmTest::test_inspect_node FAILED [ 70%]
tests/integration/api_swarm_test.py::SwarmTest::test_leave_swarm FAILED  [ 70%]
tests/integration/api_swarm_test.py::SwarmTest::test_list_nodes FAILED   [ 70%]
tests/integration/api_swarm_test.py::SwarmTest::test_remove_main_node FAILED [ 71%]
tests/integration/api_swarm_test.py::SwarmTest::test_rotate_manager_unlock_key FAILED [ 71%]
tests/integration/api_swarm_test.py::SwarmTest::test_update_node FAILED  [ 71%]
tests/integration/api_swarm_test.py::SwarmTest::test_update_swarm FAILED [ 71%]
tests/integration/api_volume_test.py::TestVolumes::test_create_volume PASSED [ 72%]
tests/integration/api_volume_test.py::TestVolumes::test_create_volume_invalid_driver FAILED [ 72%]
tests/integration/api_volume_test.py::TestVolumes::test_force_remove_volume PASSED [ 72%]
tests/integration/api_volume_test.py::TestVolumes::test_inspect_nonexistent_volume PASSED [ 73%]
tests/integration/api_volume_test.py::TestVolumes::test_inspect_volume FAILED [ 73%]
tests/integration/api_volume_test.py::TestVolumes::test_list_volumes FAILED [ 73%]
tests/integration/api_volume_test.py::TestVolumes::test_prune_volumes PASSED [ 73%]
tests/integration/api_volume_test.py::TestVolumes::test_remove_nonexistent_volume PASSED [ 74%]
tests/integration/api_volume_test.py::TestVolumes::test_remove_volume PASSED [ 74%]
tests/integration/client_test.py::ClientTest::test_df PASSED             [ 74%]
tests/integration/client_test.py::ClientTest::test_info PASSED           [ 74%]
tests/integration/client_test.py::ClientTest::test_ping PASSED           [ 75%]
tests/integration/client_test.py::ClientTest::test_version PASSED        [ 75%]
tests/integration/client_test.py::CancellableEventsTest::test_cancel_events PASSED [ 75%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_context_remove FAILED [ 75%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_lifecycle FAILED [ 76%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_load_context_without_orchestrator FAILED [ 76%]
tests/integration/errors_test.py::ErrorsTest::test_api_error_parses_json FAILED [ 76%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_get FAILED [ 76%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_list FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_list_sparse FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_detach FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_auto_remove FAILED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_auto_remove_error PASSED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_error PASSED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_image_that_does_not_exist FAILED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_json_file_driver PASSED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_named_volume FAILED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_network FAILED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_none_driver PASSED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_proxy_config FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_streamed_logs FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_streamed_logs_and_cancel FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_volume FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerTest::test_commit FAILED [ 81%]
tests/integration/models_containers_test.py::ContainerTest::test_create_with_volume_driver FAILED [ 81%]
tests/integration/models_containers_test.py::ContainerTest::test_diff FAILED [ 81%]
tests/integration/models_containers_test.py::ContainerTest::test_exec_run_failed FAILED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_exec_run_success PASSED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_kill FAILED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_logs PASSED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_pause PASSED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_list PASSED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_none FAILED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_tuple PASSED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_remove PASSED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_rename FAILED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_restart PASSED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_start FAILED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_stats PASSED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_stop FAILED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_top FAILED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_update FAILED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_wait PASSED [ 86%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build FAILED [ 86%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_error FAILED [ 86%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_multiple_success FAILED [ 86%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_success_build_output FAILED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_list PASSED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_list_with_repository PASSED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_load_error FAILED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull FAILED [ 88%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_multiple FAILED [ 88%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_with_sha FAILED [ 88%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_with_tag FAILED [ 88%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_and_load PASSED [ 89%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_and_load_repo_name FAILED [ 89%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_name_error PASSED [ 89%]
tests/integration/models_images_test.py::ImageTest::test_tag_and_remove PASSED [ 89%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_create PASSED [ 90%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_get PASSED [ 90%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_list_remove FAILED [ 90%]
tests/integration/models_networks_test.py::NetworkTest::test_connect_disconnect FAILED [ 91%]
tests/integration/models_nodes_test.py::NodesTest::test_list_get_update FAILED [ 91%]
tests/integration/models_resources_test.py::ModelTest::test_reload PASSED [ 91%]
tests/integration/models_services_test.py::ServiceTest::test_create ERROR [ 91%]
tests/integration/models_services_test.py::ServiceTest::test_create_with_network ERROR [ 92%]
tests/integration/models_services_test.py::ServiceTest::test_force_update_service ERROR [ 92%]
tests/integration/models_services_test.py::ServiceTest::test_force_update_service_using_bool ERROR [ 92%]
tests/integration/models_services_test.py::ServiceTest::test_force_update_service_using_shorthand_method ERROR [ 92%]
tests/integration/models_services_test.py::ServiceTest::test_get ERROR   [ 93%]
tests/integration/models_services_test.py::ServiceTest::test_list_remove ERROR [ 93%]
tests/integration/models_services_test.py::ServiceTest::test_scale_method_global_service ERROR [ 93%]
tests/integration/models_services_test.py::ServiceTest::test_scale_method_service ERROR [ 93%]
tests/integration/models_services_test.py::ServiceTest::test_scale_service ERROR [ 94%]
tests/integration/models_services_test.py::ServiceTest::test_tasks ERROR [ 94%]
tests/integration/models_services_test.py::ServiceTest::test_update ERROR [ 94%]
tests/integration/models_services_test.py::ServiceTest::test_update_remove_service_labels ERROR [ 94%]
tests/integration/models_services_test.py::ServiceTest::test_update_retains_container_labels ERROR [ 95%]
tests/integration/models_services_test.py::ServiceTest::test_update_retains_networks XFAIL [ 95%]
tests/integration/models_services_test.py::ServiceTest::test_update_retains_service_labels ERROR [ 95%]
tests/integration/models_swarm_test.py::SwarmTest::test_init_update_leave FAILED [ 95%]
tests/integration/models_swarm_test.py::SwarmTest::test_join_on_already_joined_swarm FAILED [ 96%]
tests/integration/models_volumes_test.py::VolumesTest::test_create_get PASSED [ 96%]
tests/integration/models_volumes_test.py::VolumesTest::test_list_remove FAILED [ 96%]
tests/integration/regression_test.py::TestRegressions::test_443_handle_nonchunked_response_in_stream FAILED [ 96%]
tests/integration/regression_test.py::TestRegressions::test_542_truncate_ids_client_side PASSED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_647_support_doubleslash_in_image_names PASSED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_649_handle_timeout_value_none PASSED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_715_handle_user_param_as_int_value PASSED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_792_explicit_port_protocol PASSED [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_store_and_get ERROR [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_get_nonexistent ERROR [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_store_and_erase ERROR [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_unicode_strings ERROR [ 99%]
tests/integration/credentials/store_test.py::TestStore::test_list ERROR  [ 99%]
tests/integration/credentials/store_test.py::TestStore::test_execute_with_env_override ERROR [ 99%]
tests/integration/credentials/utils_test.py::test_create_environment_dict PASSED [100%]

==================================== ERRORS ====================================
______________ ERROR at setup of ConfigAPITest.test_create_config ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ConfigAPITest.test_create_config_unicode_data ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ ERROR at setup of ConfigAPITest.test_inspect_config ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of ConfigAPITest.test_list_configs _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of ConfigAPITest.test_remove_config ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of SecretAPITest.test_create_secret ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of SecretAPITest.test_create_secret_unicode_data ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ ERROR at setup of SecretAPITest.test_inspect_secret ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of SecretAPITest.test_list_secrets _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of SecretAPITest.test_remove_secret ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_custom_log_driver ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_create_service_global_mode _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_replicated_mode _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________ ERROR at setup of ServiceTest.test_create_service_simple ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_create_service_with_config _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_custom_networks ____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_with_dns_config _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_with_endpoint_spec _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_endpoint_spec_host_publish_mode _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________ ERROR at setup of ServiceTest.test_create_service_with_env __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_failure_action_rollback _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___ ERROR at setup of ServiceTest.test_create_service_with_generic_resources ___
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_create_service_with_groups _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_with_healthcheck ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_create_service_with_hostname ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________ ERROR at setup of ServiceTest.test_create_service_with_hosts _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________ ERROR at setup of ServiceTest.test_create_service_with_init __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_invalid_generic_resources _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_network_attachment_config _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_create_service_with_placement _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___ ERROR at setup of ServiceTest.test_create_service_with_placement_object ____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__ ERROR at setup of ServiceTest.test_create_service_with_placement_platform ___
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_placement_preferences _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_placement_preferences_tuple _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_with_privileges _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_create_service_with_readonly ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_resources_constraints _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_restart_policy _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_rollback_config ____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_create_service_with_secret _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_with_stop_signal ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________ ERROR at setup of ServiceTest.test_create_service_with_tty __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_create_service_with_tty_dict ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_unicode_config _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_unicode_secret _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_with_update_config _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_update_config_monitor _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_with_update_order ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_with_volume_mount ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________ ERROR at setup of ServiceTest.test_inspect_service_by_id ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________ ERROR at setup of ServiceTest.test_inspect_service_by_name __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_inspect_service_insert_defaults ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________ ERROR at setup of ServiceTest.test_list_services _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_list_services_filter_by_label _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________ ERROR at setup of ServiceTest.test_remove_service_by_id ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________ ERROR at setup of ServiceTest.test_remove_service_by_name ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________ ERROR at setup of ServiceTest.test_service_logs ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_update_service_force_update ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__ ERROR at setup of ServiceTest.test_update_service_remove_container_labels ___
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_update_service_remove_healthcheck _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_update_service_remove_labels ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_update_service_with_defaults_container_labels _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_update_service_with_defaults_endpoint_spec _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_update_service_with_defaults_labels ____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_update_service_with_defaults_mode _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_update_service_with_defaults_name _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___ ERROR at setup of ServiceTest.test_update_service_with_defaults_networks ___
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_update_service_with_defaults_update_config _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_update_service_with_network_change _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________ ERROR at setup of ServiceTest.test_create ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
____________ ERROR at setup of ServiceTest.test_create_with_network ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
___________ ERROR at setup of ServiceTest.test_force_update_service ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
______ ERROR at setup of ServiceTest.test_force_update_service_using_bool ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_ ERROR at setup of ServiceTest.test_force_update_service_using_shorthand_method _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
____________________ ERROR at setup of ServiceTest.test_get ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
________________ ERROR at setup of ServiceTest.test_list_remove ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
________ ERROR at setup of ServiceTest.test_scale_method_global_service ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
___________ ERROR at setup of ServiceTest.test_scale_method_service ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_______________ ERROR at setup of ServiceTest.test_scale_service _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
___________________ ERROR at setup of ServiceTest.test_tasks ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
__________________ ERROR at setup of ServiceTest.test_update ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_______ ERROR at setup of ServiceTest.test_update_remove_service_labels ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
______ ERROR at setup of ServiceTest.test_update_retains_container_labels ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_______ ERROR at setup of ServiceTest.test_update_retains_service_labels _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
________________ ERROR at setup of TestStore.test_store_and_get ________________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
_______________ ERROR at setup of TestStore.test_get_nonexistent _______________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
_______________ ERROR at setup of TestStore.test_store_and_erase _______________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
_______________ ERROR at setup of TestStore.test_unicode_strings _______________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
____________________ ERROR at setup of TestStore.test_list _____________________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
__________ ERROR at setup of TestStore.test_execute_with_env_override __________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
=================================== FAILURES ===================================
________________ BuildTest.test_build_in_context_abs_dockerfile ________________
tests/integration/api_build_test.py:575: in test_build_in_context_abs_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built 2041caa902f8\n'
__________________ BuildTest.test_build_in_context_dockerfile __________________
tests/integration/api_build_test.py:510: in test_build_in_context_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built 8eda46eefde6\n'
______________ BuildTest.test_build_in_context_nested_dockerfile _______________
tests/integration/api_build_test.py:543: in test_build_in_context_nested_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built c41527b022f6\n'
____________________ BuildTest.test_build_invalid_platform _____________________
tests/integration/api_build_test.py:448: in test_build_invalid_platform
    pass
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
_________________________ BuildTest.test_build_labels __________________________
tests/integration/api_build_test.py:215: in test_build_labels
    assert info['Config']['Labels'] == labels
E   AssertionError: assert {'io.buildah.... 'test': 'OK'} == {'test': 'OK'}
E     Omitting 1 identical items, use -vv to show
E     Left contains more items:
E     {'io.buildah.version': '1.19.0-dev'}
E     Full diff:
E     - {'io.buildah.version': '1.19.0-dev', 'test': 'OK'}
E     + {'test': 'OK'}
________________ BuildTest.test_build_out_of_context_dockerfile ________________
tests/integration/api_build_test.py:481: in test_build_out_of_context_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   KeyError: 'stream'
_________________________ BuildTest.test_build_squash __________________________
tests/integration/api_build_test.py:371: in test_build_squash
    assert len(non_squashed['RootFS']['Layers']) == 4
E   AssertionError: assert 2 == 4
E     -2
E     +4
_______________________ BuildTest.test_build_stderr_data _______________________
tests/integration/api_build_test.py:391: in test_build_stderr_data
    assert any([line == expected for line in lines])
E   AssertionError: assert False
E    +  where False = any([False, False, False, False, False, False, ...])
_____________________ BuildTest.test_build_with_cache_from _____________________
tests/integration/api_build_test.py:240: in test_build_with_cache_from
    assert counter == 3
E   AssertionError: assert 0 == 3
E     -0
E     +3
____________________ BuildTest.test_build_with_extra_hosts _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/images/dockerpytest_extrahost_build/json

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:340: in test_build_with_extra_hosts
    assert self.client.inspect_image(img_name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:253: in inspect_image
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.40/images/dockerpytest_extrahost_build/json: Not Found ("failed to find image dockerpytest_extrahost_build: unable to find a name and tag match for dockerpytest_extrahost_build in repotags: No such image")
____________________ BuildTest.test_build_with_network_mode ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/0b2ad3cc600ece177d6c282126bb9ec5fd84f68300ada1c10d6ab88763456a72/connect

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:283: in test_build_with_network_mode
    self.client.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/0b2ad3cc600ece177d6c282126bb9ec5fd84f68300ada1c10d6ab88763456a72/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
___________ CreateContainerTest.test_create_with_device_cgroup_rules ___________
tests/integration/api_container_test.py:477: in test_create_with_device_cgroup_rules
    assert config['HostConfig']['DeviceCgroupRules'] == [rule]
E   AssertionError: assert None == ['c 7:128 rwm']
E     -None
E     +['c 7:128 rwm']
______ CreateContainerTest.test_create_with_environment_variable_no_value ______
tests/integration/api_container_test.py:373: in test_create_with_environment_variable_no_value
    assert 'Foo' in config['Config']['Env']
E   AssertionError: assert 'Foo' in ['PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'TERM=xterm', 'container=podman', 'Other=one', 'Blank=', 'HOSTNAME=']
______________ CreateContainerTest.test_create_with_host_pid_mode ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b7b07bf9881cec0419c8566d4dd019d5e21bf8886c5519724f99b6b40595ece7/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:59: in test_create_with_host_pid_mode
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b7b07bf9881cec0419c8566d4dd019d5e21bf8886c5519724f99b6b40595ece7/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: readonly path /proc/asound: operation not permitted: OCI permission denied")
________________ CreateContainerTest.test_create_with_isolation ________________
tests/integration/api_container_test.py:402: in test_create_with_isolation
    assert config['HostConfig']['Isolation'] == 'default'
E   AssertionError: assert '' == 'default'
E     + default
__________________ CreateContainerTest.test_create_with_links __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:96: in test_create_with_links
    res2 = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request ("bad parameter: Link is not supported")
_______________ CreateContainerTest.test_create_with_mac_address _______________
tests/integration/api_container_test.py:217: in test_create_with_mac_address
    assert mac_address_expected == res['NetworkSettings']['MacAddress']
E   AssertionError: assert '02:42:ac:11:00:0a' == ''
E     - 02:42:ac:11:00:0a
_____________ CreateContainerTest.test_create_with_restart_policy ______________
tests/integration/api_container_test.py:127: in test_create_with_restart_policy
    self.client.remove_container(id)
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
__________________ CreateContainerTest.test_create_with_tmpfs __________________
tests/integration/api_container_test.py:391: in test_create_with_tmpfs
    assert config['HostConfig']['Tmpfs'] == tmpfs
E   AssertionError: assert {'/tmp1=size=...ev,tmpcopyup'} == {'/tmp1': 'size=3M'}
E     Left contains more items:
E     {'/tmp1=size=3M': 'rw,rprivate,nosuid,nodev,tmpcopyup'}
E     Right contains more items:
E     {'/tmp1': 'size=3M'}
E     Full diff:
E     - {'/tmp1=size=3M': 'rw,rprivate,nosuid,nodev,tmpcopyup'}
E     + {'/tmp1': 'size=3M'}
_________ CreateContainerTest.test_invalid_log_driver_raises_exception _________
tests/integration/api_container_test.py:293: in test_invalid_log_driver_raises_exception
    assert excinfo.value.explanation in expected_msgs
E   AssertionError: assert 'container create: error running container create option: invalid log driver: invalid argument' in ["logger: no log driver named 'asdf' is registered", 'error looking up logging plugin asdf: plugin "asdf" not found']
E    +  where 'container create: error running container create option: invalid log driver: invalid argument' = APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')).explanation
E    +    where APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) = <ExceptionInfo APIError tblen=6>.value
____________ CreateContainerTest.test_valid_log_driver_and_log_opt _____________
tests/integration/api_container_test.py:272: in test_valid_log_driver_and_log_opt
    assert container_log_config['Config'] == log_config.config
E   AssertionError: assert None == {'max-file': '100'}
E     -None
E     +{'max-file': '100'}
______________ CreateContainerTest.test_valid_no_config_specified ______________
tests/integration/api_container_test.py:331: in test_valid_no_config_specified
    assert container_log_config['Config'] == {}
E   AssertionError: assert None == {}
E     -None
E     +{}
____________ CreateContainerTest.test_valid_no_log_driver_specified ____________
tests/integration/api_container_test.py:311: in test_valid_no_log_driver_specified
    assert container_log_config['Type'] == "json-file"
E   AssertionError: assert 'k8s-file' == 'json-file'
E     - k8s-file
E     + json-file
__________________ VolumeBindTest.test_create_with_mounts_ro ___________________
tests/integration/api_container_test.py:581: in test_create_with_mounts_ro
    self.check_container_data(inspect_data, False)
tests/integration/api_container_test.py:614: in check_container_data
    assert mount_data['RW'] == rw
E   AssertionError: assert True == False
E     -True
E     +False
_________________ ArchiveTest.test_copy_directory_to_container _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e4e78a5c0065eb65731e2726212016ba2e07aaa144dd9860db1ca73e79f1f352/archive?path=%2Fvol1

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:700: in test_copy_directory_to_container
    self.client.put_archive(ctnr, '/vol1', test_tar)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:966: in put_archive
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e4e78a5c0065eb65731e2726212016ba2e07aaa144dd9860db1ca73e79f1f352/archive?path=%2Fvol1: Internal Server Error ("No such file or directory")
___________________ ArchiveTest.test_copy_file_to_container ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/9c73eec1d2cbce22d655be84f7f1525bfed0b9501c9d02d6795c595ee2058635/archive?path=%2Fvol1

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:682: in test_copy_file_to_container
    self.client.put_archive(ctnr, '/vol1', test_tar)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:966: in put_archive
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/9c73eec1d2cbce22d655be84f7f1525bfed0b9501c9d02d6795c595ee2058635/archive?path=%2Fvol1: Internal Server Error ("No such file or directory")
_______________ ArchiveTest.test_get_file_archive_from_container _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/226db13e2ce3f387e6bdd0729320969419d350d808b7427acbe020cdea839e43/archive?path=%2Fvol1%2Fdata.txt

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:644: in test_get_file_archive_from_container
    strm, stat = self.client.get_archive(ctnr, '/vol1/data.txt')
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:750: in get_archive
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/226db13e2ce3f387e6bdd0729320969419d350d808b7427acbe020cdea839e43/archive?path=%2Fvol1%2Fdata.txt: Not Found ("No such file or directory")
________________ ArchiveTest.test_get_file_stat_from_container _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/5d52894e6acce1749ab55f204546f6c2a339fd1c76b89151fb1442eee73b80d7/archive?path=%2Fvol1%2Fdata.txt

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:662: in test_get_file_stat_from_container
    strm, stat = self.client.get_archive(ctnr, '/vol1/data.txt')
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:750: in get_archive
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/5d52894e6acce1749ab55f204546f6c2a339fd1c76b89151fb1442eee73b80d7/archive?path=%2Fvol1%2Fdata.txt: Not Found ("No such file or directory")
__________________ RenameContainerTest.test_rename_container ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/2a6b6194c132c0dab53cafec213b05896204e19f304f61a4bcf1e2b8c6be0f73/rename?name=hong_meiling

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:720: in test_rename_container
    self.client.rename(res, name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1030: in rename
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/2a6b6194c132c0dab53cafec213b05896204e19f304f61a4bcf1e2b8c6be0f73/rename?name=hong_meiling: Not Found ("Path /v1.40/containers/2a6b6194c132c0dab53cafec213b05896204e19f304f61a4bcf1e2b8c6be0f73/rename is not supported")
______________________ WaitTest.test_wait_with_condition _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/f0978f3823f66f22f50d89f425c7d518820da13a58d1ba718303ab8b5a037888/wait?condition=removed

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:815: in test_wait_with_condition
    self.client.wait(ctnr, condition='removed', timeout=1)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1306: in wait
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f0978f3823f66f22f50d89f425c7d518820da13a58d1ba718303ab8b5a037888/wait?condition=removed: Internal Server Error ("unknown container state: removed: invalid argument")
______________________________ PortTest.test_port ______________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6e59856754982edaeb068cb0750e6b4ee6ed9dc60925b80344400cd3d5f66315/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1090: in test_port
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6e59856754982edaeb068cb0750e6b4ee6ed9dc60925b80344400cd3d5f66315/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/714d6da9c104712e6f3a3b6275f069492b9ca466e5d2dbc7e6c07e6cf6127b11/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")
__________________ AttachContainerTest.test_attach_no_stream ___________________
tests/integration/api_container_test.py:1252: in test_attach_no_stream
    assert output == 'hello\n'.encode(encoding='ascii')
E   AssertionError: assert b'hello' == b'hello\n'
E     Right contains more items, first extra item: 10
E     Full diff:
E     - b'hello'
E     + b'hello\n'
E     ?        ++
________________ ContainerUpdateTest.test_restart_policy_update ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/f03fbd64bbd85bfe0dc23834d1502924b2e05ded3a8228a9518286ce9eae64e3/update

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1438: in test_restart_policy_update
    self.client.update_container(container,
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1270: in update_container
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/f03fbd64bbd85bfe0dc23834d1502924b2e05ded3a8228a9518286ce9eae64e3/update: Not Found ("b'Not Found'")
__________________ ContainerUpdateTest.test_update_container ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/b1cc79d49c2c35cbe53aad07b3af5ef23702affd85cf85083e47978b3d5cdeac/update

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1416: in test_update_container
    self.client.update_container(container, mem_limit=new_mem_limit)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1270: in update_container
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/b1cc79d49c2c35cbe53aad07b3af5ef23702affd85cf85083e47978b3d5cdeac/update: Not Found ("b'Not Found'")
__________________ ContainerCPUTest.test_container_cpu_shares __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/60f1b6a50429c8a37c02c80062c5f16b98290124838e43626b07a3bc39650994/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1460: in test_container_cpu_shares
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/60f1b6a50429c8a37c02c80062c5f16b98290124838e43626b07a3bc39650994/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: process_linux.go:422: setting cgroup config for procHooks process caused: failed to write "20" to "/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/user.slice/libpod-60f1b6a50429c8a37c02c80062c5f16b98290124838e43626b07a3bc39650994.scope/cpu.weight": open /sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/user.slice/libpod-60f1b6a50429c8a37c02c80062c5f16b98290124838e43626b07a3bc39650994.scope/cpu.weight: permission denied: OCI permission denied")
____________________ ContainerCPUTest.test_container_cpuset ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/fe0a377f07ad7a3545bb74304d31b94213a865748a91de16531ded9ef6cbc16d/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1472: in test_container_cpuset
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/fe0a377f07ad7a3545bb74304d31b94213a865748a91de16531ded9ef6cbc16d/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: process_linux.go:422: setting cgroup config for procHooks process caused: failed to write "0,1" to "/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/user.slice/libpod-fe0a377f07ad7a3545bb74304d31b94213a865748a91de16531ded9ef6cbc16d.scope/cpuset.cpus": open /sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/user.slice/libpod-fe0a377f07ad7a3545bb74304d31b94213a865748a91de16531ded9ef6cbc16d.scope/cpuset.cpus: permission denied: OCI permission denied")
__________________ ContainerCPUTest.test_create_with_runtime ___________________
tests/integration/api_container_test.py:1483: in test_create_with_runtime
    assert config['HostConfig']['Runtime'] == 'runc'
E   AssertionError: assert 'oci' == 'runc'
E     - oci
E     + runc
__________________________ LinkTest.test_remove_link ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1501: in test_remove_link
    container2 = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request ("bad parameter: Link is not supported")
____________________ ExecTest.test_detach_with_config_file _____________________
tests/integration/api_exec_test.py:227: in test_detach_with_config_file
    assert_cat_socket_detached_with_keys(sock, [ctrl_with('p')])
tests/helpers.py:138: in assert_cat_socket_detached_with_keys
    assert data == b'' or data.startswith(
E   AssertionError
______________________ ExecTest.test_exec_start_detached _______________________
tests/integration/api_exec_test.py:152: in test_exec_start_detached
    assert response == ""
E   AssertionError: assert '\n' == ''
E     Strings contain only whitespace, escaping them using repr()
E     - '\n'
E     + ''
_______________________ ExecTest.test_exec_start_socket ________________________
tests/integration/api_exec_test.py:134: in test_exec_start_socket
    assert stream == 1  # stdout (0 = stdin, 1 = stdout, 2 = stderr)
E   AssertionError: assert 121 == 1
E     -121
E     +1
_____________ ExecDemuxTest.test_exec_command_tty_no_stream_demux ______________
tests/integration/api_exec_test.py:299: in test_exec_command_tty_no_stream_demux
    exec_log = self.client.exec_start(res, demux=True)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/exec_api.py:169: in exec_start
    return self._read_from_socket(res, stream, tty=tty, demux=demux)
docker/api/client.py:450: in _read_from_socket
    return consume_socket_output(gen, demux=demux)
docker/utils/socket.py:142: in consume_socket_output
    for frame in frames:
docker/api/client.py:441: in <genexpr>
    gen = (demux_adaptor(*frame) for frame in gen)
docker/utils/socket.py:169: in demux_adaptor
    raise ValueError('{0} is not a valid stream'.format(stream_id))
E   ValueError: 104 is not a valid stream
____________ ExecDemuxTest.test_exec_command_tty_no_stream_no_demux ____________
tests/integration/api_exec_test.py:282: in test_exec_command_tty_no_stream_no_demux
    assert exec_log == b'hello out\r\nhello err\r\n'
E   AssertionError: assert b't\r\nhello err\r\n' == b'hello out\r\nhello err\r\n'
E     At index 0 diff: 116 != 104
E     Right contains more items, first extra item: 108
E     Full diff:
E     - b't\r\nhello err\r\n'
E     + b'hello out\r\nhello err\r\n'
E     ?   ++++++++
_______________ ExecDemuxTest.test_exec_command_tty_stream_demux _______________
tests/integration/api_exec_test.py:305: in test_exec_command_tty_stream_demux
    exec_log = list(self.client.exec_start(res, demux=True, stream=True))
docker/api/client.py:441: in <genexpr>
    gen = (demux_adaptor(*frame) for frame in gen)
docker/utils/socket.py:169: in demux_adaptor
    raise ValueError('{0} is not a valid stream'.format(stream_id))
E   ValueError: 104 is not a valid stream
_____________ ExecDemuxTest.test_exec_command_tty_stream_no_demux ______________
tests/integration/api_exec_test.py:288: in test_exec_command_tty_stream_no_demux
    assert b'hello out\r\n' in exec_log
E   AssertionError: assert b'hello out\r\n' in [b't\r\n', b'hello err\r\n']
____________________ HealthcheckTest.test_healthcheck_fails ____________________
tests/integration/api_healthcheck_test.py:51: in test_healthcheck_fails
    wait_on_health_status(self.client, container, "unhealthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'
___________________ HealthcheckTest.test_healthcheck_passes ____________________
tests/integration/api_healthcheck_test.py:38: in test_healthcheck_passes
    wait_on_health_status(self.client, container, "healthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'
________________ HealthcheckTest.test_healthcheck_shell_command ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_healthcheck_test.py:18: in test_healthcheck_shell_command
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("fill out specgen: healthcheck-retries must be greater than 0")
________________ HealthcheckTest.test_healthcheck_start_period _________________
tests/integration/api_healthcheck_test.py:68: in test_healthcheck_start_period
    wait_on_health_status(self.client, container, "healthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'
___________________ PullImageTest.test_pull_invalid_platform ___________________
tests/integration/api_image_test.py:70: in test_pull_invalid_platform
    self.client.pull('hello-world', platform='foobar')
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
____________________________ CommitTest.test_commit ____________________________
tests/integration/api_image_test.py:93: in test_commit
    assert TEST_IMG == img['ContainerConfig']['Image']
E   AssertionError: assert 'alpine:3.10' == 'docker.io/library/sha...97472e91ecb41504e8a27c'
E     - alpine:3.10
E     + docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c
_____________________ CommitTest.test_commit_with_changes ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/commit?container=5300a1b0421f0b0486b5252a77b90499d8655618581187417164b06e2b65a661&changes=EXPOSE+8000&changes=CMD+%5B%22bash%22%5D

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:102: in test_commit_with_changes
    img_id = self.client.commit(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:147: in commit
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/commit?container=5300a1b0421f0b0486b5252a77b90499d8655618581187417164b06e2b65a661&changes=EXPOSE+8000&changes=CMD+%5B%22bash%22%5D: Internal Server Error ("CommitFailure: invalid change "CMD" - must be formatted as KEY VALUE")
_____________________ ImportImageTest.test_get_load_image ______________________
tests/integration/api_image_test.py:267: in test_get_load_image
    assert any([
E   AssertionError: assert False
E    +  where False = any([])
______________________ PruneImagesTest.test_prune_images _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/images/prune?filters=%7B%22dangling%22%3A+%5B%22false%22%5D%7D

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:332: in test_prune_images
    result = self.client.prune_images({'dangling': False})
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/image.py:351: in prune_images
    return self._result(self._post(url, params=params), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/images/prune?filters=%7B%22dangling%22%3A+%5B%22false%22%5D%7D: Internal Server Error ("runtime error: invalid memory address or nil pointer dereference")
_________________ SaveLoadImagesTest.test_get_image_load_image _________________
tests/integration/api_image_test.py:361: in test_get_image_load_image
    assert success is True
E   AssertionError: assert False is True
----------------------------- Captured stdout call -----------------------------
{'stream': 'Loaded image: docker.io/library/alpine:3.10\n'}
______________ InspectDistributionTest.test_inspect_distribution _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/distribution/busybox:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:367: in test_inspect_distribution
    data = self.client.inspect_distribution('busybox:latest')
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:289: in inspect_distribution
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/distribution/busybox:latest/json: Not Found ("Path /v1.40/distribution/busybox:latest/json is not supported")
______________ TestNetworks.test_connect_and_disconnect_container ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/fd63c1a6f2eb5db192c0ab2c756242ccb7f88c72c7afb0aa2487dc2b9b0a44bc/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:102: in test_connect_and_disconnect_container
    self.client.connect_container_to_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/fd63c1a6f2eb5db192c0ab2c756242ccb7f88c72c7afb0aa2487dc2b9b0a44bc/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
___________ TestNetworks.test_connect_and_force_disconnect_container ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/023e61ab8915d36371e23f401dfc395f18334dccd336f8c4b2d7fcc259584c25/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:129: in test_connect_and_force_disconnect_container
    self.client.connect_container_to_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/023e61ab8915d36371e23f401dfc395f18334dccd336f8c4b2d7fcc259584c25/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
________________ TestNetworks.test_connect_on_container_create _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a0e7a11e59334d380cc8018c7c0683fd33a3a93a210ba3ef31d4100b8ecf8bd1/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:169: in test_connect_on_container_create
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a0e7a11e59334d380cc8018c7c0683fd33a3a93a210ba3ef31d4100b8ecf8bd1/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7a966aa83044d8fce90e91c0639aec71a762534c358e18159a74843e1924265f/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")
____________________ TestNetworks.test_connect_with_aliases ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/0cc2ce8bbac31a38052f766ed00320561e9c0ced81febf56744343ac6afc7abf/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:151: in test_connect_with_aliases
    self.client.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/0cc2ce8bbac31a38052f766ed00320561e9c0ced81febf56744343ac6afc7abf/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
_________________ TestNetworks.test_connect_with_ipv4_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/35f3affbc869e008e980e581f1d8d7b92509c42316df8238347b7931bb61dcf2/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:373: in test_connect_with_ipv4_address
    container = self.create_and_start(
tests/integration/base.py:115: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/35f3affbc869e008e980e581f1d8d7b92509c42316df8238347b7931bb61dcf2/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7a966aa83044d8fce90e91c0639aec71a762534c358e18159a74843e1924265f/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")
_________________ TestNetworks.test_connect_with_ipv6_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/5b17f9931531654ed743e73329f3af4f6f6e94a6ee4ad32a55bfab0025452bca/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:399: in test_connect_with_ipv6_address
    container = self.create_and_start(
tests/integration/base.py:115: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/5b17f9931531654ed743e73329f3af4f6f6e94a6ee4ad32a55bfab0025452bca/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7a966aa83044d8fce90e91c0639aec71a762534c358e18159a74843e1924265f/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")
_____________________ TestNetworks.test_connect_with_links _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/0ee56da6b831e78c12f4b4d082bf950a20b1e3eaa0662df342ad066d37f4c4eb/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:337: in test_connect_with_links
    container = self.create_and_start(
tests/integration/base.py:115: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/0ee56da6b831e78c12f4b4d082bf950a20b1e3eaa0662df342ad066d37f4c4eb/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7a966aa83044d8fce90e91c0639aec71a762534c358e18159a74843e1924265f/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")
___________________ TestNetworks.test_create_check_duplicate ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/create

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:330: in test_create_check_duplicate
    net_id = self.client.create_network(net_name, check_duplicate=False)
docker/api/network.py:153: in create_network
    return self._result(res, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/create: Internal Server Error ("the network name dockerpytest_a70749e5649bde19 is already used")
_____________ TestNetworks.test_create_inspect_network_with_scope ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:474: in test_create_inspect_network_with_scope
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________________ TestNetworks.test_create_network_attachable __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:453: in test_create_network_attachable
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________________ TestNetworks.test_create_network_ingress ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:460: in test_create_network_ingress
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________________ TestNetworks.test_create_network_ipv6_enabled _________________
tests/integration/api_network_test.py:449: in test_create_network_ipv6_enabled
    assert net['EnableIPv6'] is True
E   AssertionError: assert False is True
______________ TestNetworks.test_create_network_with_ipam_config _______________
tests/integration/api_network_test.py:70: in test_create_network_with_ipam_config
    assert ipam['Config'] == [{
E   AssertionError: assert [{'Gateway': ...2.28.0.0/16'}] == [{'AuxiliaryAd...2.28.0.0/16'}]
E     At index 0 diff: {'Subnet': '172.28.0.0/16', 'Gateway': '172.28.5.254'} != {'Subnet': '172.28.0.0/16', 'IPRange': '172.28.5.0/24', 'Gateway': '172.28.5.254', 'AuxiliaryAddresses': {'a': '172.28.1.5', 'b': '172.28.1.6', 'c': '172.28.1.7'}}
E     Full diff:
E     - [{'Gateway': '172.28.5.254', 'Subnet': '172.28.0.0/16'}]
E     + [{'AuxiliaryAddresses': {'a': '172.28.1.5',
E     +                          'b': '172.28.1.6',
E     +                          'c': '172.28.1.7'},
E     +   'Gateway': '172.28.5.254',...
E     
E     ...Full output truncated (3 lines hidden), use '-vv' to show
____________________ TestNetworks.test_create_with_aliases _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/18dacfdd7a0d892b47da342386ca842c22d717d13968477c25db02cebbc85dac/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:196: in test_create_with_aliases
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/18dacfdd7a0d892b47da342386ca842c22d717d13968477c25db02cebbc85dac/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7a966aa83044d8fce90e91c0639aec71a762534c358e18159a74843e1924265f/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")
___________________ TestNetworks.test_create_with_driveropt ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/16ef485f0245face0e1f91852120d2946caa4e58f3ba12f6b71c7f90bc6e74f6/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:292: in test_create_with_driveropt
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/16ef485f0245face0e1f91852120d2946caa4e58f3ba12f6b71c7f90bc6e74f6/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7a966aa83044d8fce90e91c0639aec71a762534c358e18159a74843e1924265f/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")
__________________ TestNetworks.test_create_with_ipv4_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/0176c2b1ba070d785e684fa98c9e3da6f2707c16997b4d9bfa6dbd1c098a4d24/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:223: in test_create_with_ipv4_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/0176c2b1ba070d785e684fa98c9e3da6f2707c16997b4d9bfa6dbd1c098a4d24/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7a966aa83044d8fce90e91c0639aec71a762534c358e18159a74843e1924265f/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")
__________________ TestNetworks.test_create_with_ipv6_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/4aa73390c1a04e05dc9c2a7cc4b807080b87d514f6826768a69715cc44c2b87c/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:249: in test_create_with_ipv6_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4aa73390c1a04e05dc9c2a7cc4b807080b87d514f6826768a69715cc44c2b87c/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7a966aa83044d8fce90e91c0639aec71a762534c358e18159a74843e1924265f/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")
_________________ TestNetworks.test_create_with_linklocal_ips __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6865ffb4adf40a503147f6b7ecc3d75da06738b8c50da814931bb929eefdc4b2/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:271: in test_create_with_linklocal_ips
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6865ffb4adf40a503147f6b7ecc3d75da06738b8c50da814931bb929eefdc4b2/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7a966aa83044d8fce90e91c0639aec71a762534c358e18159a74843e1924265f/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")
_____________________ TestNetworks.test_create_with_links ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/88712ad8cf9086472b582c39583c97c66eebdb351d7ab500514863331c680149/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:303: in test_create_with_links
    container = self.create_and_start(
tests/integration/base.py:115: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/88712ad8cf9086472b582c39583c97c66eebdb351d7ab500514863331c680149/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7a966aa83044d8fce90e91c0639aec71a762534c358e18159a74843e1924265f/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")
_______________________ TestNetworks.test_prune_networks _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 405 Client Error: Method Not Allowed for url: http+docker://localhost/v1.40/networks/prune

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:469: in test_prune_networks
    result = self.client.prune_networks()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/network.py:175: in prune_networks
    return self._result(self._post(url, params=params), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 405 Client Error for http+docker://localhost/v1.40/networks/prune: Method Not Allowed ("b'Method Not Allowed'")
_______________________ PluginTest.test_configure_plugin _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:90: in test_configure_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_create_plugin _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/create?name=docker-sdk-py%2Fdummy

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:140: in test_create_plugin
    assert self.client.create_plugin(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:52: in create_plugin
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/create?name=docker-sdk-py%2Fdummy: Not Found ("b'Not Found'")
________________________ PluginTest.test_disable_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:56: in test_disable_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_enable_plugin _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:47: in test_enable_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
_____________________ PluginTest.test_force_remove_plugin ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:109: in test_force_remove_plugin
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_inspect_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:68: in test_inspect_plugin
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_install_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:120: in test_install_plugin
    prv = self.client.plugin_privileges(SSHFS)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
_________________________ PluginTest.test_list_plugins _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:83: in test_list_plugins
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
______________________ PluginTest.test_plugin_privileges _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:75: in test_plugin_privileges
    prv = self.client.plugin_privileges(SSHFS)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_remove_plugin _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:104: in test_remove_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_upgrade_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:128: in test_upgrade_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
____________________ SwarmTest.test_init_already_in_cluster ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:69: in test_init_already_in_cluster
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ SwarmTest.test_init_swarm_custom_addr_pool_both_args _____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:61: in test_init_swarm_custom_addr_pool_both_args
    assert self.init_swarm(default_addr_pool=['2.0.0.0/16', '3.0.0.0/16'],
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ SwarmTest.test_init_swarm_custom_addr_pool_defaults ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:40: in test_init_swarm_custom_addr_pool_defaults
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ SwarmTest.test_init_swarm_custom_addr_pool_only_pool _____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:47: in test_init_swarm_custom_addr_pool_only_pool
    assert self.init_swarm(default_addr_pool=['2.0.0.0/16'])
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________ SwarmTest.test_init_swarm_custom_addr_pool_only_subnet_size __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:54: in test_init_swarm_custom_addr_pool_only_subnet_size
    assert self.init_swarm(subnet_size=26)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________ SwarmTest.test_init_swarm_custom_raft_spec __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:78: in test_init_swarm_custom_raft_spec
    assert self.init_swarm(swarm_spec=spec)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________________ SwarmTest.test_init_swarm_simple _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:26: in test_init_swarm_simple
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________ SwarmTest.test_init_swarm_with_autolock_managers _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:101: in test_init_swarm_with_autolock_managers
    assert self.init_swarm(swarm_spec=spec)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________________ SwarmTest.test_init_swarm_with_ca_config ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:89: in test_init_swarm_with_ca_config
    assert self.init_swarm(swarm_spec=spec)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________________________ SwarmTest.test_inspect_node __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:189: in test_inspect_node
    node_id = self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________________ SwarmTest.test_leave_swarm __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:127: in test_leave_swarm
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________________ SwarmTest.test_list_nodes ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:170: in test_list_nodes
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________________ SwarmTest.test_remove_main_node ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:224: in test_remove_main_node
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________________ SwarmTest.test_rotate_manager_unlock_key ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:242: in test_rotate_manager_unlock_key
    assert self.init_swarm(swarm_spec=spec)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________________ SwarmTest.test_update_node __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:201: in test_update_node
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________________________ SwarmTest.test_update_swarm __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:139: in test_update_swarm
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________________ TestVolumes.test_create_volume_invalid_driver _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/volumes/create

During handling of the above exception, another exception occurred:
tests/integration/api_volume_test.py:22: in test_create_volume_invalid_driver
    self.client.create_volume('perfectcherryblossom', driver_name)
docker/api/volume.py:89: in create_volume
    return self._result(self._post_json(url, data=data), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/volumes/create: Internal Server Error ("error running volume create option: not yet implemented")
_______________________ TestVolumes.test_inspect_volume ________________________
tests/integration/api_volume_test.py:38: in test_inspect_volume
    assert volume_info == result
E   AssertionError: assert {'CreatedAt':...l/_data', ...} == {'CreatedAt': ...l/_data', ...}
E     Omitting 6 identical items, use -vv to show
E     Differing items:
E     {'Options': None} != {'Options': {}}
E     Full diff:
E     {'CreatedAt': '2021-01-01T23:20:13+01:00',
E     'Driver': 'local',
E     'Labels': {},...
E     
E     ...Full output truncated (8 lines hidden), use '-vv' to show
________________________ TestVolumes.test_list_volumes _________________________
tests/integration/api_volume_test.py:31: in test_list_volumes
    assert volume_info in volumes
E   AssertionError: assert {'CreatedAt': '2021-01-01T23:20:15+01:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...} in [{'CreatedAt': '2021-01-01T23:11:40+01:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage...00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...}]
___________________ ContextLifecycleTest.test_context_remove ___________________
tests/integration/context_api_test.py:47: in test_context_remove
    ContextAPI.create_context("test")
docker/context/api.py:57: in create_context
    raise errors.ContextAlreadyExists(name)
E   docker.errors.ContextAlreadyExists: context test already exists
_____________________ ContextLifecycleTest.test_lifecycle ______________________
tests/integration/context_api_test.py:13: in test_lifecycle
    assert not ContextAPI.get_context("test")
E   AssertionError: assert not <Context: 'test'>
E    +  where <Context: 'test'> = <bound method ContextAPI.get_context of <class 'docker.context.api.ContextAPI'>>('test')
E    +    where <bound method ContextAPI.get_context of <class 'docker.context.api.ContextAPI'>> = ContextAPI.get_context
_________ ContextLifecycleTest.test_load_context_without_orchestrator __________
tests/integration/context_api_test.py:55: in test_load_context_without_orchestrator
    ContextAPI.create_context("test")
docker/context/api.py:57: in create_context
    raise errors.ContextAlreadyExists(name)
E   docker.errors.ContextAlreadyExists: context test already exists
____________________ ErrorsTest.test_api_error_parses_json _____________________
tests/integration/errors_test.py:13: in test_api_error_parses_json
    assert 'You cannot remove a running container' in explanation
E   AssertionError: assert 'You cannot remove a running container' in 'cannot remove container 33a1e53b4ee36bd8cad42a2e9198147965e2755c86cd71a9cf65d9a9697aa2be as it is running - running or paused containers cannot be removed without force: container state improper'
_______________________ ContainerCollectionTest.test_get _______________________
tests/integration/models_containers_test.py:189: in test_get
    assert client.containers.get(container.id).attrs[
E   AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'
E     - docker.io/library/alpine:latest
E     + alpine
______________________ ContainerCollectionTest.test_list _______________________
tests/integration/models_containers_test.py:202: in test_list
    assert container.attrs['Config']['Image'] == 'alpine'
E   AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'
E     - docker.io/library/alpine:latest
E     + alpine
___________________ ContainerCollectionTest.test_list_sparse ___________________
tests/integration/models_containers_test.py:220: in test_list_sparse
    assert container.attrs['Image'] == 'alpine'
E   AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'
E     - docker.io/library/alpine:latest
E     + alpine
_______________________ ContainerCollectionTest.test_run _______________________
tests/integration/models_containers_test.py:18: in test_run
    assert client.containers.run(
E   AssertionError: assert None == b'hello world\n'
E     -None
E     +b'hello world\n'
___________________ ContainerCollectionTest.test_run_detach ____________________
tests/integration/models_containers_test.py:26: in test_run_detach
    assert container.attrs['Config']['Image'] == "alpine"
E   AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'
E     - docker.io/library/alpine:latest
E     + alpine
______________ ContainerCollectionTest.test_run_with_auto_remove _______________
tests/integration/models_containers_test.py:133: in test_run_with_auto_remove
    assert out == b'hello\n'
E   AssertionError: assert None == b'hello\n'
E     -None
E     +b'hello\n'
_______ ContainerCollectionTest.test_run_with_image_that_does_not_exist ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:41: in test_run_with_image_that_does_not_exist
    client.containers.run("dockerpytest_does_not_exist")
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/create: Not Found ("unable to find a name and tag match for dockerpytest_does_not_exist in repotags: no such image")
______________ ContainerCollectionTest.test_run_with_named_volume ______________
tests/integration/models_containers_test.py:87: in test_run_with_named_volume
    assert out == b'hello\n'
E   AssertionError: assert None == b'hello\n'
E     -None
E     +b'hello\n'
________________ ContainerCollectionTest.test_run_with_network _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/52fb16dc6e8b184d21ac5d00b7d21b89fda6e3cd897fe5a667cff45289feacbd/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:95: in test_run_with_network
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/52fb16dc6e8b184d21ac5d00b7d21b89fda6e3cd897fe5a667cff45289feacbd/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7a966aa83044d8fce90e91c0639aec71a762534c358e18159a74843e1924265f/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")
______________ ContainerCollectionTest.test_run_with_proxy_config ______________
tests/integration/models_containers_test.py:182: in test_run_with_proxy_config
    assert b'FTP_PROXY=sakuya.jp:4967\n' in out
E   TypeError: argument of type 'NoneType' is not iterable
_____________ ContainerCollectionTest.test_run_with_streamed_logs ______________
tests/integration/models_containers_test.py:153: in test_run_with_streamed_logs
    logs = [line for line in out]
E   TypeError: 'NoneType' object is not iterable
________ ContainerCollectionTest.test_run_with_streamed_logs_and_cancel ________
tests/integration/models_containers_test.py:166: in test_run_with_streamed_logs_and_cancel
    threading.Timer(1, out.close).start()
E   AttributeError: 'NoneType' object has no attribute 'close'
_________________ ContainerCollectionTest.test_run_with_volume _________________
tests/integration/models_containers_test.py:65: in test_run_with_volume
    assert out == b'hello\n'
E   AssertionError: assert None == b'hello\n'
E     -None
E     +b'hello\n'
__________________________ ContainerTest.test_commit ___________________________
tests/integration/models_containers_test.py:242: in test_commit
    assert client.containers.run(
E   AssertionError: assert None == b'hello\n'
E     -None
E     +b'hello\n'
_________________ ContainerTest.test_create_with_volume_driver _________________
tests/integration/models_containers_test.py:456: in test_create_with_volume_driver
    assert container.attrs['HostConfig']['VolumeDriver'] == 'foo'
E   AssertionError: assert '' == 'foo'
E     + foo
___________________________ ContainerTest.test_diff ____________________________
tests/integration/models_containers_test.py:251: in test_diff
    assert container.diff() == [{'Path': '/test', 'Kind': 1}]
E   AssertionError: assert [{'Kind': 1, ...ath': '/etc'}] == [{'Kind': 1, 'Path': '/test'}]
E     Left contains more items, first extra item: {'Kind': 0, 'Path': '/etc'}
E     Full diff:
E     - [{'Kind': 1, 'Path': '/test'}, {'Kind': 0, 'Path': '/etc'}]
E     + [{'Kind': 1, 'Path': '/test'}]
______________________ ContainerTest.test_exec_run_failed ______________________
tests/integration/models_containers_test.py:270: in test_exec_run_failed
    assert exec_output[0] == 126
E   AssertionError: assert 127 == 126
E     -127
E     +126
___________________________ ContainerTest.test_kill ____________________________
tests/integration/models_containers_test.py:281: in test_kill
    assert container.status == 'exited'
E   AssertionError: assert 'stopped' == 'exited'
E     - stopped
E     + exited
_____________________ ContainerTest.test_ports_target_none _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:354: in test_ports_target_none
    container = client.containers.run(
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("make cli opts(): strconv.Atoi: parsing "": invalid syntax")
__________________________ ContainerTest.test_rename ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/b1d976cfe0a73533535b3f7fe1753b9f52e50cd30e2392a6c70149a4c529225b/rename?name=test2

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:318: in test_rename
    container.rename("test2")
docker/models/containers.py:364: in rename
    return self.client.api.rename(self.id, name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1030: in rename
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/b1d976cfe0a73533535b3f7fe1753b9f52e50cd30e2392a6c70149a4c529225b/rename?name=test2: Not Found ("Path /v1.40/containers/b1d976cfe0a73533535b3f7fe1753b9f52e50cd30e2392a6c70149a4c529225b/rename is not supported")
___________________________ ContainerTest.test_start ___________________________
tests/integration/models_containers_test.py:336: in test_start
    assert container.status == "created"
E   AssertionError: assert 'configured' == 'created'
E     - configured
E     + created
___________________________ ContainerTest.test_stop ____________________________
tests/integration/models_containers_test.py:414: in test_stop
    assert container.status in ("running", "created")
E   AssertionError: assert 'configured' in ('running', 'created')
E    +  where 'configured' = <Container: cdf11809a8>.status
____________________________ ContainerTest.test_top ____________________________
tests/integration/models_containers_test.py:425: in test_top
    assert 'sleep 60' in top['Processes'][0]
E   AssertionError: assert 'sleep 60' in ['    1 root      0:00 sleep 60']
__________________________ ContainerTest.test_update ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6241460e5b3221e08866a53fb9ccd8bb4102ca28331da91e68bb376987cabb51/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:429: in test_update
    container = client.containers.run("alpine", "sleep 60", detach=True,
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6241460e5b3221e08866a53fb9ccd8bb4102ca28331da91e68bb376987cabb51/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: process_linux.go:422: setting cgroup config for procHooks process caused: failed to write "1" to "/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/user.slice/libpod-6241460e5b3221e08866a53fb9ccd8bb4102ca28331da91e68bb376987cabb51.scope/cpu.weight": open /sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/user.slice/libpod-6241460e5b3221e08866a53fb9ccd8bb4102ca28331da91e68bb376987cabb51.scope/cpu.weight: permission denied: OCI permission denied")
________________________ ImageCollectionTest.test_build ________________________
tests/integration/models_images_test.py:20: in test_build
    assert client.containers.run(image) == b"hello world\n"
E   AssertionError: assert None == b'hello world\n'
E     -None
E     +b'hello world\n'
__________________ ImageCollectionTest.test_build_with_error ___________________
tests/integration/models_images_test.py:30: in test_build_with_error
    assert (
E   AssertionError: assert "The command '/bin/sh -c exit 1' returned a non-zero code: 1" in 'docker.errors.BuildError: error building at STEP "RUN exit 1": exit status 1'
E    +  where 'docker.errors.BuildError: error building at STEP "RUN exit 1": exit status 1' = <bound method ExceptionInfo.exconly of <ExceptionInfo BuildError tblen=2>>()
E    +    where <bound method ExceptionInfo.exconly of <ExceptionInfo BuildError tblen=2>> = <ExceptionInfo BuildError tblen=2>.exconly
_____________ ImageCollectionTest.test_build_with_multiple_success _____________
tests/integration/models_images_test.py:44: in test_build_with_multiple_success
    assert client.containers.run(image) == b"hello world\n"
E   AssertionError: assert None == b'hello world\n'
E     -None
E     +b'hello world\n'
___________ ImageCollectionTest.test_build_with_success_build_output ___________
tests/integration/models_images_test.py:55: in test_build_with_success_build_output
    assert client.containers.run(image) == b"Successfully built abcd1234\n"
E   AssertionError: assert None == b'Successfully built abcd1234\n'
E     -None
E     +b'Successfully built abcd1234\n'
_____________________ ImageCollectionTest.test_load_error ______________________
tests/integration/models_images_test.py:98: in test_load_error
    client.images.load('abc')
E   Failed: DID NOT RAISE <class 'docker.errors.ImageLoadError'>
________________________ ImageCollectionTest.test_pull _________________________
tests/integration/models_images_test.py:71: in test_pull
    assert 'alpine:latest' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:latest' in ['docker.io/library/alpine:3.12', 'docker.io/library/alpine:latest']
____________________ ImageCollectionTest.test_pull_multiple ____________________
tests/integration/models_images_test.py:91: in test_pull_multiple
    assert any([
tests/integration/models_images_test.py:91: in <listcomp>
    assert any([
E   TypeError: argument of type 'NoneType' is not iterable
____________________ ImageCollectionTest.test_pull_with_sha ____________________
tests/integration/models_images_test.py:85: in test_pull_with_sha
    assert image_ref in image.attrs['RepoDigests']
E   AssertionError: assert 'hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7' in ['docker.io/library/hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7', 'docker.io/library/hello-world@sha256:8072a54ebb3bc136150e2f2860f00a7bf45f13eeb917cca2430fcd0054c8e51b']
____________________ ImageCollectionTest.test_pull_with_tag ____________________
tests/integration/models_images_test.py:76: in test_pull_with_tag
    assert 'alpine:3.10' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:3.10' in ['docker.io/library/alpine:3.10', 'docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c']
_______________ ImageCollectionTest.test_save_and_load_repo_name _______________
tests/integration/models_images_test.py:122: in test_save_and_load_repo_name
    stream = image.save(named='{}:latest'.format(additional_tag))
docker/models/images.py:98: in save
    raise InvalidArgument(
E   docker.errors.InvalidArgument: dockerpytest_957967b8182b60f:latest is not a valid tag for this image
____________________ NetworkCollectionTest.test_list_remove ____________________
tests/integration/models_networks_test.py:30: in test_list_remove
    assert network.id not in [
docker/models/networks.py:210: in list
    networks = [self.prepare_model(item) for item in resp]
E   TypeError: 'NoneType' object is not iterable
_____________________ NetworkTest.test_connect_disconnect ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/ae4878bed36aea73c6ec70d22227943acc4fffbe55c0d15cd722b67c2fbec06c/connect

During handling of the above exception, another exception occurred:
tests/integration/models_networks_test.py:59: in test_connect_disconnect
    network.connect(container)
docker/models/networks.py:58: in connect
    return self.client.api.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/ae4878bed36aea73c6ec70d22227943acc4fffbe55c0d15cd722b67c2fbec06c/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
________________________ NodesTest.test_list_get_update ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_nodes_test.py:18: in test_list_get_update
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_______________________ SwarmTest.test_init_update_leave _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_swarm_test.py:19: in test_init_update_leave
    client.swarm.init(
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_________________ SwarmTest.test_join_on_already_joined_swarm __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_swarm_test.py:37: in test_join_on_already_joined_swarm
    client.swarm.init()
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_________________________ VolumesTest.test_list_remove _________________________
tests/integration/models_volumes_test.py:26: in test_list_remove
    assert volume in client.volumes.list(filters={'name': 'dockerpytest_'})
E   AssertionError: assert <Volume: dockerpyte> in []
E    +  where [] = <bound method VolumeCollection.list of <docker.models.volumes.VolumeCollection object at 0x7f6be7d1e820>>(filters={'name': 'dockerpytest_'})
E    +    where <bound method VolumeCollection.list of <docker.models.volumes.VolumeCollection object at 0x7f6be7d1e820>> = <docker.models.volumes.VolumeCollection object at 0x7f6be7d1e820>.list
E    +      where <docker.models.volumes.VolumeCollection object at 0x7f6be7d1e820> = <docker.client.DockerClient object at 0x7f6be7d1ed30>.volumes
________ TestRegressions.test_443_handle_nonchunked_response_in_stream _________
tests/integration/regression_test.py:16: in test_443_handle_nonchunked_response_in_stream
    pass
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
=============================== warnings summary ===============================
tests/integration/api_client_test.py::ConnectionTimeoutTest::test_timeout
  /home/riyad/src/docker-py/docker/utils/utils.py:276: DeprecationWarning: urllib.parse.splitnport() is deprecated as of 3.8, use urllib.parse.urlparse() instead
    host, port = splitnport(parsed_url.netloc)

-- Docs: https://docs.pytest.org/en/latest/warnings.html
=========================== short test summary info ============================
XFAIL tests/integration/api_build_test.py::BuildTest::test_prune_builds
  Currently fails on 18.09: https://github.com/moby/moby/issues/37920
XFAIL tests/integration/api_container_test.py::CreateContainerTest::test_create_with_storage_opt
  Not supported on most drivers
XFAIL tests/integration/api_container_test.py::ContainerTopTest::test_top
  Output of docker top depends on host distro, and is not formalized.
XFAIL tests/integration/api_container_test.py::ContainerTopTest::test_top_with_psargs
  Output of docker top depends on host distro, and is not formalized.
XFAIL tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_data_path_addr
  Can fail if eth0 has multiple IP addresses
XFAIL tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_with_log_driver
  This doesn't seem to be taken into account by the engine
XFAIL tests/integration/models_services_test.py::ServiceTest::test_update_retains_networks
  Flaky test
SKIPPED [1] tests/integration/api_image_test.py:292: Doesn't work inside a container - FIXME
SKIPPED [1] /home/riyad/src/docker-py/tests/integration/api_swarm_test.py:31: Test stalls the engine on 1.12.0
= 151 failed, 138 passed, 2 skipped, 7 xfailed, 1 xpassed, 1 warnings, 90 error in 912.47 seconds =
