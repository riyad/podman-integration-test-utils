<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="docker-py" errors="0" failures="103" skipped="5" tests="278" time="1905.357" timestamp="2021-04-06T17:56:39.726965" hostname="acnologia"><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_container_with_target" time="4.660"><failure message="docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.40/images/build1/json: Not Found (&quot;failed to find image build1: unable to find a name and tag match for build1 in repotags: No such image&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/images/build1/json

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:272: in test_build_container_with_target
    info = self.client.inspect_image('build1')
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:253: in inspect_image
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.40/images/build1/json: Not Found ("failed to find image build1: unable to find a name and tag match for build1 in repotags: No such image")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_from_stringio" time="3.078" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_gzip_custom_encoding" time="3.220" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_gzip_encoding" time="3.836" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_in_context_abs_dockerfile" time="4.388" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_in_context_dockerfile" time="5.104" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_in_context_nested_dockerfile" time="7.390" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_invalid_platform" time="7.736"><failure message="Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;">tests/integration/api_build_test.py:452: in test_build_invalid_platform
    pass
E   Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_isolation" time="9.051" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_labels" time="5.583"><failure message="AssertionError: assert {'io.buildah.... 'test': 'OK'} == {'test': 'OK'}&#10;  Omitting 1 identical items, use -vv to show&#10;  Left contains 1 more item:&#10;  {'io.buildah.version': '1.20.0'}&#10;  Full diff:&#10;  - {'test': 'OK'}&#10;  + {'io.buildah.version': '1.20.0', 'test': 'OK'}">tests/integration/api_build_test.py:215: in test_build_labels
    assert info['Config']['Labels'] == labels
E   AssertionError: assert {'io.buildah.... 'test': 'OK'} == {'test': 'OK'}
E     Omitting 1 identical items, use -vv to show
E     Left contains 1 more item:
E     {'io.buildah.version': '1.20.0'}
E     Full diff:
E     - {'test': 'OK'}
E     + {'io.buildah.version': '1.20.0', 'test': 'OK'}</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_out_of_context_dockerfile" time="8.391" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_shmsize" time="6.080" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_squash" time="12.784"><failure message="docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.40/images/nosquash/json: Not Found (&quot;failed to find image nosquash: unable to find a name and tag match for nosquash in repotags: No such image&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/images/nosquash/json

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:369: in test_build_squash
    non_squashed = build_squashed(False)
tests/integration/api_build_test.py:367: in build_squashed
    return self.client.inspect_image(tag)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:253: in inspect_image
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.40/images/nosquash/json: Not Found ("failed to find image nosquash: unable to find a name and tag match for nosquash in repotags: No such image")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_stderr_data" time="8.357"><failure message="AssertionError: assert False&#10; +  where False = any([False, False, False, False])">tests/integration/api_build_test.py:395: in test_build_stderr_data
    assert any([line == expected for line in lines])
E   AssertionError: assert False
E    +  where False = any([False, False, False, False])</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_streaming" time="7.931" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_buildargs" time="7.804" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_cache_from" time="11.900"><failure message="AssertionError: assert 0 == 3&#10;  +0&#10;  -3">tests/integration/api_build_test.py:240: in test_build_with_cache_from
    assert counter == 3
E   AssertionError: assert 0 == 3
E     +0
E     -3</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_dockerfile_empty_lines" time="9.421" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_dockerignore" time="12.039" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_extra_hosts" time="6.079"><failure message="docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/build?t=dockerpytest_extrahost_build&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;extrahosts=extrahost.local.test%3A127.0.0.1&amp;extrahosts=hello.world.test%3A127.0.0.1: Bad Request (&quot;failed to parse query parameter 'extrahosts': &quot;hello.world.test:127.0.0.1&quot;: invalid character 'h' looking for beginning of value&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/build?t=dockerpytest_extrahost_build&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;extrahosts=extrahost.local.test%3A127.0.0.1&amp;extrahosts=hello.world.test%3A127.0.0.1

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:336: in test_build_with_extra_hosts
    for chunk in stream:
docker/api/client.py:387: in _stream_helper
    yield self._result(response, json=decode)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/build?t=dockerpytest_extrahost_build&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;extrahosts=extrahost.local.test%3A127.0.0.1&amp;extrahosts=hello.world.test%3A127.0.0.1: Bad Request ("failed to parse query parameter 'extrahosts': "hello.world.test:127.0.0.1": invalid character 'h' looking for beginning of value")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_network_mode" time="7.471"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/2d7015c94835fcb8f0666220bc97b84f2c77b61f1fa5e6c0db0b2c267bc42141/connect: Internal Server Error (&quot;network disconnect is not enabled for rootless containers&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/2d7015c94835fcb8f0666220bc97b84f2c77b61f1fa5e6c0db0b2c267bc42141/connect

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:283: in test_build_with_network_mode
    self.client.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/2d7015c94835fcb8f0666220bc97b84f2c77b61f1fa5e6c0db0b2c267bc42141/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_proxy" time="6.255" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_proxy_and_buildargs" time="6.948" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_prune_builds" time="6.373"><skipped type="pytest.xfail" message="Currently fails on 18.09: https://github.com/moby/moby/issues/37920" /></testcase><testcase classname="tests.integration.api_client_test.InformationTest" name="test_info" time="8.300" /><testcase classname="tests.integration.api_client_test.InformationTest" name="test_version" time="7.856" /><testcase classname="tests.integration.api_client_test.AutoDetectVersionTest" name="test_client_init" time="6.298" /><testcase classname="tests.integration.api_client_test.ConnectionTimeoutTest" name="test_timeout" time="0.505" /><testcase classname="tests.integration.api_client_test.UnixconnTest" name="test_resource_warnings" time="2.285" /><testcase classname="tests.integration.api_container_test.ListContainersTest" name="test_list_containers" time="7.390" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create" time="6.167" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_container_with_volumes_from" time="8.533" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_auto_remove" time="6.946" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_cpu_rt_options" time="6.174" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_device_cgroup_rules" time="7.742"><failure message="AssertionError: assert None == ['c 7:128 rwm']&#10;  +None&#10;  -['c 7:128 rwm']">tests/integration/api_container_test.py:470: in test_create_with_device_cgroup_rules
    assert config['HostConfig']['DeviceCgroupRules'] == [rule]
E   AssertionError: assert None == ['c 7:128 rwm']
E     +None
E     -['c 7:128 rwm']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_environment_variable_no_value" time="6.213"><failure message="AssertionError: assert 'Foo' in ['PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'TERM=xterm', 'container=podman', 'Blank=', 'Other=one']">tests/integration/api_container_test.py:366: in test_create_with_environment_variable_no_value
    assert 'Foo' in config['Config']['Env']
E   AssertionError: assert 'Foo' in ['PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'TERM=xterm', 'container=podman', 'Blank=', 'Other=one']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_host_pid_mode" time="7.092"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/467b6c642a2d7c06acf81039a1a9e3ecf46b0bd56ea9f89fb7dc64f094e4e0be/start: Internal Server Error (&quot;container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: readonly path /proc/asound: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/467b6c642a2d7c06acf81039a1a9e3ecf46b0bd56ea9f89fb7dc64f094e4e0be/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:58: in test_create_with_host_pid_mode
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/467b6c642a2d7c06acf81039a1a9e3ecf46b0bd56ea9f89fb7dc64f094e4e0be/start: Internal Server Error ("container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: readonly path /proc/asound: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_init" time="6.585" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_isolation" time="7.818"><failure message="AssertionError: assert '' == 'default'&#10;  - default">tests/integration/api_container_test.py:395: in test_create_with_isolation
    assert config['HostConfig']['Isolation'] == 'default'
E   AssertionError: assert '' == 'default'
E     - default</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_links" time="7.765"><failure message="docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request (&quot;bad parameter: Link is not supported&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:95: in test_create_with_links
    res2 = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request ("bad parameter: Link is not supported")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_mac_address" time="7.213"><failure message="AssertionError: assert '02:42:ac:11:00:0a' == ''&#10;  + 02:42:ac:11:00:0a">tests/integration/api_container_test.py:214: in test_create_with_mac_address
    assert mac_address_expected == res['NetworkSettings']['MacAddress']
E   AssertionError: assert '02:42:ac:11:00:0a' == ''
E     + 02:42:ac:11:00:0a</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_memory_constraints_with_int" time="6.725" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_memory_constraints_with_str" time="6.815" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_restart_policy" time="9.212"><failure message="Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;">tests/integration/api_container_test.py:124: in test_create_with_restart_policy
    self.client.remove_container(id)
E   Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_stop_timeout" time="6.922" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_storage_opt" time="6.362"><skipped type="pytest.xfail" message="Not supported on most drivers" /></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_tmpfs" time="6.545"><failure message="AssertionError: assert {'/tmp1': 'si...ev,tmpcopyup'} == {'/tmp1': 'size=3M'}&#10;  Differing items:&#10;  {'/tmp1': 'size=3M,rw,rprivate,nosuid,nodev,tmpcopyup'} != {'/tmp1': 'size=3M'}&#10;  Full diff:&#10;  - {'/tmp1': 'size=3M'}&#10;  + {'/tmp1': 'size=3M,rw,rprivate,nosuid,nodev,tmpcopyup'}">tests/integration/api_container_test.py:384: in test_create_with_tmpfs
    assert config['HostConfig']['Tmpfs'] == tmpfs
E   AssertionError: assert {'/tmp1': 'si...ev,tmpcopyup'} == {'/tmp1': 'size=3M'}
E     Differing items:
E     {'/tmp1': 'size=3M,rw,rprivate,nosuid,nodev,tmpcopyup'} != {'/tmp1': 'size=3M'}
E     Full diff:
E     - {'/tmp1': 'size=3M'}
E     + {'/tmp1': 'size=3M,rw,rprivate,nosuid,nodev,tmpcopyup'}</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_uts_mode" time="7.041" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_group_id_ints" time="7.236" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_group_id_strings" time="7.031" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_invalid_log_driver_raises_exception" time="6.181"><failure message="AssertionError: assert 'container create: error running container create option: invalid log driver: invalid argument' in [&quot;logger: no log driver named 'asdf' is registered&quot;, 'error looking up logging plugin asdf: plugin &quot;asdf&quot; not found']&#10; +  where 'container create: error running container create option: invalid log driver: invalid argument' = APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')).explanation&#10; +    where APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) = &lt;ExceptionInfo APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) tblen=6&gt;.value">tests/integration/api_container_test.py:286: in test_invalid_log_driver_raises_exception
    assert excinfo.value.explanation in expected_msgs
E   AssertionError: assert 'container create: error running container create option: invalid log driver: invalid argument' in ["logger: no log driver named 'asdf' is registered", 'error looking up logging plugin asdf: plugin "asdf" not found']
E    +  where 'container create: error running container create option: invalid log driver: invalid argument' = APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')).explanation
E    +    where APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) = &lt;ExceptionInfo APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) tblen=6&gt;.value</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_valid_log_driver_and_log_opt" time="7.055"><failure message="AssertionError: assert None == {'max-file': '100'}&#10;  +None&#10;  -{'max-file': '100'}">tests/integration/api_container_test.py:265: in test_valid_log_driver_and_log_opt
    assert container_log_config['Config'] == log_config.config
E   AssertionError: assert None == {'max-file': '100'}
E     +None
E     -{'max-file': '100'}</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_valid_no_config_specified" time="7.161"><failure message="AssertionError: assert None == {}&#10;  +None&#10;  -{}">tests/integration/api_container_test.py:324: in test_valid_no_config_specified
    assert container_log_config['Config'] == {}
E   AssertionError: assert None == {}
E     +None
E     -{}</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_valid_no_log_driver_specified" time="7.630"><failure message="AssertionError: assert None == {'max-file': '100'}&#10;  +None&#10;  -{'max-file': '100'}">tests/integration/api_container_test.py:305: in test_valid_no_log_driver_specified
    assert container_log_config['Config'] == log_config.config
E   AssertionError: assert None == {'max-file': '100'}
E     +None
E     -{'max-file': '100'}</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_binds_ro" time="8.532" /><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_binds_rw" time="8.319" /><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_mounts" time="7.481" /><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_mounts_ro" time="8.582"><failure message="AssertionError: assert True == False&#10;  +True&#10;  -False">tests/integration/api_container_test.py:565: in test_create_with_mounts_ro
    self.check_container_data(inspect_data, False)
tests/integration/api_container_test.py:598: in check_container_data
    assert mount_data['RW'] == rw
E   AssertionError: assert True == False
E     +True
E     -False</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_volume_mount" time="7.429" /><testcase classname="tests.integration.api_container_test.ArchiveTest" name="test_copy_directory_to_container" time="8.373" /><testcase classname="tests.integration.api_container_test.ArchiveTest" name="test_copy_file_to_container" time="8.108"><failure message="AssertionError: assert b'' == b'Deaf To All But The Song'&#10;  Full diff:&#10;  - b'Deaf To All But The Song'&#10;  + b''">tests/integration/api_container_test.py:669: in test_copy_file_to_container
    assert logs.strip() == data
E   AssertionError: assert b'' == b'Deaf To All But The Song'
E     Full diff:
E     - b'Deaf To All But The Song'
E     + b''</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ArchiveTest" name="test_get_file_archive_from_container" time="15.047" /><testcase classname="tests.integration.api_container_test.ArchiveTest" name="test_get_file_stat_from_container" time="13.050" /><testcase classname="tests.integration.api_container_test.RenameContainerTest" name="test_rename_container" time="12.781" /><testcase classname="tests.integration.api_container_test.StartContainerTest" name="test_run_shlex_commands" time="17.815" /><testcase classname="tests.integration.api_container_test.StartContainerTest" name="test_start_container" time="10.375" /><testcase classname="tests.integration.api_container_test.StartContainerTest" name="test_start_container_with_dict_instead_of_id" time="7.877" /><testcase classname="tests.integration.api_container_test.WaitTest" name="test_wait" time="10.477" /><testcase classname="tests.integration.api_container_test.WaitTest" name="test_wait_with_condition" time="12.527" /><testcase classname="tests.integration.api_container_test.WaitTest" name="test_wait_with_dict_instead_of_id" time="10.907" /><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs" time="7.458" /><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_streaming_and_follow" time="10.187" /><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_streaming_and_follow_and_cancel" time="7.815"><failure message="Failed: Timeout &gt;5.0s">tests/integration/api_container_test.py:861: in test_logs_streaming_and_follow_and_cancel
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1110: in start
    res = self._post(url)
docker/utils/decorators.py:46: in inner
    return f(self, *args, **kwargs)
docker/api/client.py:240: in _post
    return self.post(url, **self._set_request_timeout(kwargs))
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/sessions.py:590: in post
    return self.request('POST', url, data=data, json=json, **kwargs)
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/sessions.py:542: in request
    resp = self.send(prep, **send_kwargs)
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/sessions.py:655: in send
    r = adapter.send(request, **kwargs)
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/adapters.py:439: in send
    resp = conn.urlopen(
../../.virtualenvs/docker-py/lib/python3.8/site-packages/urllib3/connectionpool.py:699: in urlopen
    httplib_response = self._make_request(
../../.virtualenvs/docker-py/lib/python3.8/site-packages/urllib3/connectionpool.py:445: in _make_request
    six.raise_from(e, None)
&lt;string&gt;:3: in raise_from
    ???
../../.virtualenvs/docker-py/lib/python3.8/site-packages/urllib3/connectionpool.py:440: in _make_request
    httplib_response = conn.getresponse()
/usr/lib/python3.8/http/client.py:1347: in getresponse
    response.begin()
/usr/lib/python3.8/http/client.py:307: in begin
    version, status, reason = self._read_status()
/usr/lib/python3.8/http/client.py:268: in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
/usr/lib/python3.8/socket.py:669: in readinto
    return self._sock.recv_into(b)
E   Failed: Timeout &gt;5.0s</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_tail_option" time="6.880" /><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_with_dict_instead_of_id" time="7.507" /><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_with_tail_0" time="7.484" /><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_with_until" time="6.899" /><testcase classname="tests.integration.api_container_test.DiffTest" name="test_diff" time="7.221" /><testcase classname="tests.integration.api_container_test.DiffTest" name="test_diff_with_dict_instead_of_id" time="7.470" /><testcase classname="tests.integration.api_container_test.StopTest" name="test_stop" time="9.750" /><testcase classname="tests.integration.api_container_test.StopTest" name="test_stop_with_dict_instead_of_id" time="10.456" /><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill" time="9.870" /><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill_with_dict_instead_of_id" time="8.697" /><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill_with_signal" time="9.158" /><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill_with_signal_integer" time="9.720" /><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill_with_signal_name" time="7.275" /><testcase classname="tests.integration.api_container_test.PortTest" name="test_port" time="6.050"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error (&quot;container create: unable to find network configuration for bridge: network not found&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1060: in test_port
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("container create: unable to find network configuration for bridge: network not found")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ContainerTopTest" name="test_top" time="7.668"><skipped type="pytest.xfail" message="Output of docker top depends on host distro, and is not formalized." /></testcase><testcase classname="tests.integration.api_container_test.ContainerTopTest" name="test_top_with_psargs" time="7.558"><skipped type="pytest.xfail" message="Output of docker top depends on host distro, and is not formalized." /></testcase><testcase classname="tests.integration.api_container_test.RestartContainerTest" name="test_restart" time="9.559" /><testcase classname="tests.integration.api_container_test.RestartContainerTest" name="test_restart_with_dict_instead_of_id" time="9.763" /><testcase classname="tests.integration.api_container_test.RestartContainerTest" name="test_restart_with_low_timeout" time="12.051" /><testcase classname="tests.integration.api_container_test.RemoveContainerTest" name="test_remove" time="7.921" /><testcase classname="tests.integration.api_container_test.RemoveContainerTest" name="test_remove_with_dict_instead_of_id" time="7.386" /><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_attach_no_stream" time="9.001"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7ecc9779394e6a6d043aaeb886caeb504e26c63d07af981c154faaa5634d5cc6/attach?logs=1&amp;stdout=1&amp;stderr=1&amp;stream=0: Internal Server Error (&quot;can only attach to created or running containers - currently in state stopped: container state improper&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/7ecc9779394e6a6d043aaeb886caeb504e26c63d07af981c154faaa5634d5cc6/attach?logs=1&amp;stdout=1&amp;stderr=1&amp;stream=0

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1229: in test_attach_no_stream
    output = self.client.attach(container, stream=False, logs=True)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:62: in attach
    output = self._read_from_socket(
docker/api/client.py:433: in _read_from_socket
    socket = self._get_raw_response_socket(response)
docker/api/client.py:346: in _get_raw_response_socket
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7ecc9779394e6a6d043aaeb886caeb504e26c63d07af981c154faaa5634d5cc6/attach?logs=1&amp;stdout=1&amp;stderr=1&amp;stream=0: Internal Server Error ("can only attach to created or running containers - currently in state stopped: container state improper")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_attach_stream_and_cancel" time="9.996"><failure message="Failed: Timeout &gt;10.0s">tests/integration/base.py:83: in tearDown
    super(BaseAPIIntegrationTest, self).tearDown()
tests/integration/base.py:30: in tearDown
    client = docker.from_env(version=TEST_API_VERSION)
docker/client.py:96: in from_env
    return cls(
docker/client.py:45: in __init__
    self.api = APIClient(*args, **kwargs)
docker/api/client.py:197: in __init__
    self._version = self._retrieve_server_version()
docker/api/client.py:214: in _retrieve_server_version
    return self.version(api_version=False)["ApiVersion"]
docker/api/daemon.py:181: in version
    return self._result(self._get(url), json=True)
docker/utils/decorators.py:46: in inner
    return f(self, *args, **kwargs)
docker/api/client.py:251: in _get
    return self.get(url, **self._set_request_timeout(kwargs))
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/sessions.py:555: in get
    return self.request('GET', url, **kwargs)
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/sessions.py:542: in request
    resp = self.send(prep, **send_kwargs)
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/sessions.py:655: in send
    r = adapter.send(request, **kwargs)
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/adapters.py:439: in send
    resp = conn.urlopen(
../../.virtualenvs/docker-py/lib/python3.8/site-packages/urllib3/connectionpool.py:699: in urlopen
    httplib_response = self._make_request(
../../.virtualenvs/docker-py/lib/python3.8/site-packages/urllib3/connectionpool.py:445: in _make_request
    six.raise_from(e, None)
../../.virtualenvs/docker-py/lib/python3.8/site-packages/urllib3/connectionpool.py:440: in _make_request
    httplib_response = conn.getresponse()
/usr/lib/python3.8/http/client.py:1347: in getresponse
    response.begin()
/usr/lib/python3.8/http/client.py:307: in begin
    version, status, reason = self._read_status()
/usr/lib/python3.8/http/client.py:268: in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
/usr/lib/python3.8/socket.py:669: in readinto
    return self._sock.recv_into(b)
E   Failed: Timeout &gt;10.0s</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_detach_with_arg" time="7.838" /><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_detach_with_config_file" time="7.828" /><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_detach_with_default" time="8.083" /><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_run_container_reading_socket" time="8.233" /><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_run_container_streaming" time="10.387" /><testcase classname="tests.integration.api_container_test.PauseTest" name="test_pause_unpause" time="9.861" /><testcase classname="tests.integration.api_container_test.PruneTest" name="test_prune_containers" time="11.153" /><testcase classname="tests.integration.api_container_test.GetContainerStatsTest" name="test_get_container_stats_no_stream" time="7.167" /><testcase classname="tests.integration.api_container_test.ContainerUpdateTest" name="test_restart_policy_update" time="7.807"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/c491fd93d5bf7e2c57c575e1e71fca2d621fbfe44030cfaac1050cffd283ffa1/update: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/c491fd93d5bf7e2c57c575e1e71fca2d621fbfe44030cfaac1050cffd283ffa1/update

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1416: in test_restart_policy_update
    self.client.update_container(container,
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1270: in update_container
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/c491fd93d5bf7e2c57c575e1e71fca2d621fbfe44030cfaac1050cffd283ffa1/update: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ContainerUpdateTest" name="test_update_container" time="7.696"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/e655697dff9f8fd313ac14e3263a48b4cd52c04b8c01b202d55b58beb124d94e/update: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/e655697dff9f8fd313ac14e3263a48b4cd52c04b8c01b202d55b58beb124d94e/update

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1394: in test_update_container
    self.client.update_container(container, mem_limit=new_mem_limit)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1270: in update_container
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/e655697dff9f8fd313ac14e3263a48b4cd52c04b8c01b202d55b58beb124d94e/update: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ContainerCPUTest" name="test_container_cpu_shares" time="7.297" /><testcase classname="tests.integration.api_container_test.ContainerCPUTest" name="test_container_cpuset" time="9.717" /><testcase classname="tests.integration.api_container_test.ContainerCPUTest" name="test_create_with_runtime" time="7.767"><failure message="AssertionError: assert 'oci' == 'runc'&#10;  - runc&#10;  + oci">tests/integration/api_container_test.py:1461: in test_create_with_runtime
    assert config['HostConfig']['Runtime'] == 'runc'
E   AssertionError: assert 'oci' == 'runc'
E     - runc
E     + oci</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.LinkTest" name="test_remove_link" time="7.012"><failure message="docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request (&quot;bad parameter: Link is not supported&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1479: in test_remove_link
    container2 = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request ("bad parameter: Link is not supported")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_detach_with_config_file" time="12.739"><failure message="AssertionError">tests/integration/api_exec_test.py:227: in test_detach_with_config_file
    assert_cat_socket_detached_with_keys(sock, [ctrl_with('p')])
tests/helpers.py:138: in assert_cat_socket_detached_with_keys
    assert data == b'' or data.startswith(
E   AssertionError</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_detach_with_default" time="9.937" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_as_root" time="8.549" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_as_user" time="7.562" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_streaming" time="9.318" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_string" time="9.991" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_with_env" time="8.524" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_with_workdir" time="7.170" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_inspect" time="7.008" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_start_detached" time="7.430"><failure message="AssertionError: assert '\n' == ''&#10;  Strings contain only whitespace, escaping them using repr()&#10;  - ''&#10;  + '\n'">tests/integration/api_exec_test.py:152: in test_exec_start_detached
    assert response == ""
E   AssertionError: assert '\n' == ''
E     Strings contain only whitespace, escaping them using repr()
E     - ''
E     + '\n'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_start_socket" time="6.964"><failure message="AssertionError: assert 121 == 1&#10;  +121&#10;  -1">tests/integration/api_exec_test.py:134: in test_exec_start_socket
    assert stream == 1  # stdout (0 = stdin, 1 = stdout, 2 = stderr)
E   AssertionError: assert 121 == 1
E     +121
E     -1</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_execute_command" time="6.884" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_execute_command_with_proxy_env" time="7.946" /><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_no_stream_demux" time="8.179" /><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_no_stream_no_demux" time="7.332" /><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_stream_demux" time="8.363" /><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_stream_no_demux" time="9.384" /><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_tty_no_stream_demux" time="7.661"><failure message="ValueError: 104 is not a valid stream">tests/integration/api_exec_test.py:299: in test_exec_command_tty_no_stream_demux
    exec_log = self.client.exec_start(res, demux=True)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/exec_api.py:169: in exec_start
    return self._read_from_socket(res, stream, tty=tty, demux=demux)
docker/api/client.py:448: in _read_from_socket
    return consume_socket_output(gen, demux=demux)
docker/utils/socket.py:142: in consume_socket_output
    for frame in frames:
docker/api/client.py:439: in &lt;genexpr&gt;
    gen = (demux_adaptor(*frame) for frame in gen)
docker/utils/socket.py:169: in demux_adaptor
    raise ValueError('{0} is not a valid stream'.format(stream_id))
E   ValueError: 104 is not a valid stream</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_tty_no_stream_no_demux" time="7.317"><failure message="AssertionError: assert b't\r\nhello err\r\n' == b'hello out\r\nhello err\r\n'&#10;  At index 0 diff: b't' != b'h'&#10;  Full diff:&#10;  - b'hello out\r\nhello err\r\n'&#10;  ?   --------&#10;  + b't\r\nhello err\r\n'">tests/integration/api_exec_test.py:282: in test_exec_command_tty_no_stream_no_demux
    assert exec_log == b'hello out\r\nhello err\r\n'
E   AssertionError: assert b't\r\nhello err\r\n' == b'hello out\r\nhello err\r\n'
E     At index 0 diff: b't' != b'h'
E     Full diff:
E     - b'hello out\r\nhello err\r\n'
E     ?   --------
E     + b't\r\nhello err\r\n'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_tty_stream_demux" time="7.833"><failure message="ValueError: 104 is not a valid stream">tests/integration/api_exec_test.py:305: in test_exec_command_tty_stream_demux
    exec_log = list(self.client.exec_start(res, demux=True, stream=True))
docker/api/client.py:439: in &lt;genexpr&gt;
    gen = (demux_adaptor(*frame) for frame in gen)
docker/utils/socket.py:169: in demux_adaptor
    raise ValueError('{0} is not a valid stream'.format(stream_id))
E   ValueError: 104 is not a valid stream</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_tty_stream_no_demux" time="8.216"><failure message="AssertionError: assert b'hello out\r\n' in [b't\r\n', b'hello err\r\n']">tests/integration/api_exec_test.py:288: in test_exec_command_tty_stream_no_demux
    assert b'hello out\r\n' in exec_log
E   AssertionError: assert b'hello out\r\n' in [b't\r\n', b'hello err\r\n']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_healthcheck_test.HealthcheckTest" name="test_healthcheck_fails" time="9.963"><failure message="KeyError: 'Health'">tests/integration/api_healthcheck_test.py:51: in test_healthcheck_fails
    wait_on_health_status(self.client, container, "unhealthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_healthcheck_test.HealthcheckTest" name="test_healthcheck_passes" time="8.390"><failure message="KeyError: 'Health'">tests/integration/api_healthcheck_test.py:38: in test_healthcheck_passes
    wait_on_health_status(self.client, container, "healthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_healthcheck_test.HealthcheckTest" name="test_healthcheck_shell_command" time="7.199"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error (&quot;fill out specgen: healthcheck-retries must be greater than 0&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_healthcheck_test.py:18: in test_healthcheck_shell_command
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("fill out specgen: healthcheck-retries must be greater than 0")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_healthcheck_test.HealthcheckTest" name="test_healthcheck_start_period" time="7.537"><failure message="KeyError: 'Health'">tests/integration/api_healthcheck_test.py:68: in test_healthcheck_start_period
    wait_on_health_status(self.client, container, "healthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.ListImagesTest" name="test_images" time="8.356" /><testcase classname="tests.integration.api_image_test.ListImagesTest" name="test_images_quiet" time="6.764" /><testcase classname="tests.integration.api_image_test.PullImageTest" name="test_pull" time="9.270" /><testcase classname="tests.integration.api_image_test.PullImageTest" name="test_pull_invalid_platform" time="11.898"><failure message="Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;">tests/integration/api_image_test.py:69: in test_pull_invalid_platform
    self.client.pull('hello-world', platform='foobar')
E   Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.PullImageTest" name="test_pull_streaming" time="9.832" /><testcase classname="tests.integration.api_image_test.CommitTest" name="test_commit" time="7.885"><failure message="AssertionError: assert 'alpine:3.10' == 'docker.io/li...y/alpine:3.10'&#10;  - docker.io/library/alpine:3.10&#10;  + alpine:3.10">tests/integration/api_image_test.py:92: in test_commit
    assert TEST_IMG == img['ContainerConfig']['Image']
E   AssertionError: assert 'alpine:3.10' == 'docker.io/li...y/alpine:3.10'
E     - docker.io/library/alpine:3.10
E     + alpine:3.10</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.CommitTest" name="test_commit_with_changes" time="6.852"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/commit?container=4b404f6a7eb2fc47597f0fa1f7f458ca6899cebf48ef50430657109294cb9167&amp;changes=EXPOSE+8000&amp;changes=CMD+%5B%22bash%22%5D: Internal Server Error (&quot;CommitFailure: invalid change &quot;CMD&quot; - must be formatted as KEY VALUE&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/commit?container=4b404f6a7eb2fc47597f0fa1f7f458ca6899cebf48ef50430657109294cb9167&amp;changes=EXPOSE+8000&amp;changes=CMD+%5B%22bash%22%5D

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:101: in test_commit_with_changes
    img_id = self.client.commit(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:147: in commit
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/commit?container=4b404f6a7eb2fc47597f0fa1f7f458ca6899cebf48ef50430657109294cb9167&amp;changes=EXPOSE+8000&amp;changes=CMD+%5B%22bash%22%5D: Internal Server Error ("CommitFailure: invalid change "CMD" - must be formatted as KEY VALUE")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.RemoveImageTest" name="test_remove" time="8.222" /><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_get_load_image" time="9.486"><failure message="AssertionError: assert False&#10; +  where False = any([])">tests/integration/api_image_test.py:266: in test_get_load_image
    assert any([
E   AssertionError: assert False
E    +  where False = any([])</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_from_bytes" time="6.504" /><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_from_file" time="7.106" /><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_from_stream" time="6.816" /><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_from_url" time="0.001"><skipped type="pytest.skip" message="Doesn't work inside a container - FIXME">/home/riyad/src/docker-py/tests/integration/api_image_test.py:291: Doesn't work inside a container - FIXME</skipped><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_image_from_data_with_changes" time="6.041" /><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_image_with_changes" time="6.448" /><testcase classname="tests.integration.api_image_test.PruneImagesTest" name="test_prune_images" time="9.888"><failure message="AssertionError: assert 0 &gt; 0">tests/integration/api_image_test.py:332: in test_prune_images
    assert result['SpaceReclaimed'] &gt; 0
E   AssertionError: assert 0 &gt; 0</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.SaveLoadImagesTest" name="test_get_image_load_image" time="6.403"><failure message="AssertionError: assert False is True">tests/integration/api_image_test.py:360: in test_get_image_load_image
    assert success is True
E   AssertionError: assert False is True</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------
{'stream': 'Loaded image: docker.io/library/alpine:3.10\n'}

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.InspectDistributionTest" name="test_inspect_distribution" time="7.256"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/distribution/busybox:latest/json: Not Found (&quot;Path /v1.40/distribution/busybox:latest/json is not supported&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/distribution/busybox:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:366: in test_inspect_distribution
    data = self.client.inspect_distribution('busybox:latest')
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:289: in inspect_distribution
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/distribution/busybox:latest/json: Not Found ("Path /v1.40/distribution/busybox:latest/json is not supported")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_and_disconnect_container" time="6.623"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/6be5efb2c605d4aced0370398c0e4e416b6effb32c477d22eba7c2736b1b95fd/connect: Internal Server Error (&quot;network disconnect is not enabled for rootless containers&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/6be5efb2c605d4aced0370398c0e4e416b6effb32c477d22eba7c2736b1b95fd/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:98: in test_connect_and_disconnect_container
    self.client.connect_container_to_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/6be5efb2c605d4aced0370398c0e4e416b6effb32c477d22eba7c2736b1b95fd/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_and_force_disconnect_container" time="9.442"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/524d83b3e1e1d22291640340f92d05ff45c1e51ecbaa79f9ef9ec04dbf0bcc7e/connect: Internal Server Error (&quot;network disconnect is not enabled for rootless containers&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/524d83b3e1e1d22291640340f92d05ff45c1e51ecbaa79f9ef9ec04dbf0bcc7e/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:125: in test_connect_and_force_disconnect_container
    self.client.connect_container_to_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/524d83b3e1e1d22291640340f92d05ff45c1e51ecbaa79f9ef9ec04dbf0bcc7e/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_on_container_create" time="22.548"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8a921abc78aec35c80eb1fb599be0dc2cc44bd18cac647e5fa5f3c7d7fc98545/start: Internal Server Error (&quot;container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/8a921abc78aec35c80eb1fb599be0dc2cc44bd18cac647e5fa5f3c7d7fc98545/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:165: in test_connect_on_container_create
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8a921abc78aec35c80eb1fb599be0dc2cc44bd18cac647e5fa5f3c7d7fc98545/start: Internal Server Error ("container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_with_aliases" time="7.623"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/082a8648012b533a8ff9095cbd1a00bcfb32bbae06b2fb6992f2835a6b41277e/connect: Internal Server Error (&quot;network disconnect is not enabled for rootless containers&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/082a8648012b533a8ff9095cbd1a00bcfb32bbae06b2fb6992f2835a6b41277e/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:147: in test_connect_with_aliases
    self.client.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/082a8648012b533a8ff9095cbd1a00bcfb32bbae06b2fb6992f2835a6b41277e/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_with_ipv4_address" time="6.782"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e782d17882793fa63db9a90902b499d87e1c2179c3e59f96c6bae37ea3d1ef23/start: Internal Server Error (&quot;container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e782d17882793fa63db9a90902b499d87e1c2179c3e59f96c6bae37ea3d1ef23/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:369: in test_connect_with_ipv4_address
    container = self.create_and_start(
tests/integration/base.py:124: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e782d17882793fa63db9a90902b499d87e1c2179c3e59f96c6bae37ea3d1ef23/start: Internal Server Error ("container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_with_ipv6_address" time="6.952"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/62a9b00088f002bcd822a9cea2c4d23e7a3c9577c7e69f33b263445d1b0e9dca/start: Internal Server Error (&quot;container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/62a9b00088f002bcd822a9cea2c4d23e7a3c9577c7e69f33b263445d1b0e9dca/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:395: in test_connect_with_ipv6_address
    container = self.create_and_start(
tests/integration/base.py:124: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/62a9b00088f002bcd822a9cea2c4d23e7a3c9577c7e69f33b263445d1b0e9dca/start: Internal Server Error ("container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_with_links" time="9.717"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/9ee420f25928b9994efc146f117ad7d29fc7d096cadc29ae006ca0dfa40a448f/start: Internal Server Error (&quot;container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/9ee420f25928b9994efc146f117ad7d29fc7d096cadc29ae006ca0dfa40a448f/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:333: in test_connect_with_links
    container = self.create_and_start(
tests/integration/base.py:124: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/9ee420f25928b9994efc146f117ad7d29fc7d096cadc29ae006ca0dfa40a448f/start: Internal Server Error ("container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_check_duplicate" time="8.735"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/create: Internal Server Error (&quot;the network name dockerpytest_b5cb87e139c50053 is already used&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/create

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:326: in test_create_check_duplicate
    net_id = self.client.create_network(net_name, check_duplicate=False)
docker/api/network.py:153: in create_network
    return self._result(res, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/create: Internal Server Error ("the network name dockerpytest_b5cb87e139c50053 is already used")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_internal_networks" time="7.187" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_ipv6_enabled" time="8.890"><failure message="AssertionError: assert False is True">tests/integration/api_network_test.py:445: in test_create_network_ipv6_enabled
    assert net['EnableIPv6'] is True
E   AssertionError: assert False is True</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_with_host_driver_fails" time="6.086" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_with_ipam_config" time="7.319"><failure message="AssertionError: assert {} is None&#10; +  where {} = &lt;built-in method pop of dict object at 0x7fd6c80848c0&gt;('Options', None)&#10; +    where &lt;built-in method pop of dict object at 0x7fd6c80848c0&gt; = {'Config': [{'Gateway': '172.28.5.254', 'Subnet': '172.28.0.0/16'}], 'Driver': 'default'}.pop">tests/integration/api_network_test.py:62: in test_create_network_with_ipam_config
    assert ipam.pop('Options', None) is None
E   AssertionError: assert {} is None
E    +  where {} = &lt;built-in method pop of dict object at 0x7fd6c80848c0&gt;('Options', None)
E    +    where &lt;built-in method pop of dict object at 0x7fd6c80848c0&gt; = {'Config': [{'Gateway': '172.28.5.254', 'Subnet': '172.28.0.0/16'}], 'Driver': 'default'}.pop</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_with_labels" time="11.180" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_with_labels_wrong_type" time="9.149" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_remove_network_with_space_in_name" time="8.038" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_aliases" time="6.746"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3d786b7495c591265e64402df927e9ba2b7fb56b81dd1d3cf00404f59e365d94/start: Internal Server Error (&quot;container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/3d786b7495c591265e64402df927e9ba2b7fb56b81dd1d3cf00404f59e365d94/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:192: in test_create_with_aliases
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3d786b7495c591265e64402df927e9ba2b7fb56b81dd1d3cf00404f59e365d94/start: Internal Server Error ("container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_driveropt" time="3.556"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error (&quot;container create: unable to find network configuration for bridge: network not found&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:276: in test_create_with_driveropt
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("container create: unable to find network configuration for bridge: network not found")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_ipv4_address" time="3.615"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b6bfdb5e67f059eb5dccedbb88b7ea91fb702d89e560e376ea5c77c17e88db74/start: Internal Server Error (&quot;container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b6bfdb5e67f059eb5dccedbb88b7ea91fb702d89e560e376ea5c77c17e88db74/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:219: in test_create_with_ipv4_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b6bfdb5e67f059eb5dccedbb88b7ea91fb702d89e560e376ea5c77c17e88db74/start: Internal Server Error ("container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_ipv6_address" time="4.099"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/1a41c9ecb73453aeca4451f948f8b28aeb27bba8e8ceff789dc7eb5363e4b577/start: Internal Server Error (&quot;container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/1a41c9ecb73453aeca4451f948f8b28aeb27bba8e8ceff789dc7eb5363e4b577/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:245: in test_create_with_ipv6_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/1a41c9ecb73453aeca4451f948f8b28aeb27bba8e8ceff789dc7eb5363e4b577/start: Internal Server Error ("container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_linklocal_ips" time="3.751"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error (&quot;container create: unable to find network configuration for bridge: network not found&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:255: in test_create_with_linklocal_ips
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("container create: unable to find network configuration for bridge: network not found")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_links" time="3.510"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/09217d2670a1ec07f19b6842b00387f7dfbaad943473986b0391619e21267424/start: Internal Server Error (&quot;container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/09217d2670a1ec07f19b6842b00387f7dfbaad943473986b0391619e21267424/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:299: in test_create_with_links
    container = self.create_and_start(
tests/integration/base.py:124: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/09217d2670a1ec07f19b6842b00387f7dfbaad943473986b0391619e21267424/start: Internal Server Error ("container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_inspect_network" time="3.021" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_list_networks" time="3.476" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_prune_networks" time="3.651" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_remove_network" time="3.554" /><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_configure_plugin" time="4.691"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:90: in test_configure_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_create_plugin" time="4.643"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/create?name=docker-sdk-py%2Fdummy: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/create?name=docker-sdk-py%2Fdummy

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:140: in test_create_plugin
    assert self.client.create_plugin(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:52: in create_plugin
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/create?name=docker-sdk-py%2Fdummy: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_disable_plugin" time="4.685"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:56: in test_disable_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_enable_plugin" time="4.798"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:47: in test_enable_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_force_remove_plugin" time="4.675"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:109: in test_force_remove_plugin
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_inspect_plugin" time="4.701"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:68: in test_inspect_plugin
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_install_plugin" time="4.692"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:120: in test_install_plugin
    prv = self.client.plugin_privileges(SSHFS)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_list_plugins" time="4.682"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:83: in test_list_plugins
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_plugin_privileges" time="4.640"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:75: in test_plugin_privileges
    prv = self.client.plugin_privileges(SSHFS)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_remove_plugin" time="4.651"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:104: in test_remove_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_upgrade_plugin" time="5.870"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:128: in test_upgrade_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_create_secret" time="6.082" /><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_create_secret_unicode_data" time="3.466" /><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_inspect_secret" time="3.499" /><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_list_secrets" time="3.488" /><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_remove_secret" time="5.859" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_create_volume" time="3.556" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_create_volume_invalid_driver" time="3.559"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/volumes/create: Internal Server Error (&quot;volume perfectcherryblossom uses volume plugin invalid.driver but it could not be retrieved: no volume plugin with name invalid.driver available: required plugin missing&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/volumes/create

During handling of the above exception, another exception occurred:
tests/integration/api_volume_test.py:22: in test_create_volume_invalid_driver
    self.client.create_volume('perfectcherryblossom', driver_name)
docker/api/volume.py:89: in create_volume
    return self._result(self._post_json(url, data=data), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/volumes/create: Internal Server Error ("volume perfectcherryblossom uses volume plugin invalid.driver but it could not be retrieved: no volume plugin with name invalid.driver available: required plugin missing")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_force_remove_volume" time="3.525" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_inspect_nonexistent_volume" time="3.487" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_inspect_volume" time="3.544"><failure message="AssertionError: assert {'CreatedAt':...l/_data', ...} == {'CreatedAt':...l/_data', ...}&#10;  Omitting 6 identical items, use -vv to show&#10;  Differing items:&#10;  {'Options': None} != {'Options': {}}&#10;  Full diff:&#10;    {&#10;     'CreatedAt': '2021-04-06T18:21:40+02:00',&#10;     'Driver': 'local',...&#10;  &#10;  ...Full output truncated (10 lines hidden), use '-vv' to show">tests/integration/api_volume_test.py:38: in test_inspect_volume
    assert volume_info == result
E   AssertionError: assert {'CreatedAt':...l/_data', ...} == {'CreatedAt':...l/_data', ...}
E     Omitting 6 identical items, use -vv to show
E     Differing items:
E     {'Options': None} != {'Options': {}}
E     Full diff:
E       {
E        'CreatedAt': '2021-04-06T18:21:40+02:00',
E        'Driver': 'local',...
E     
E     ...Full output truncated (10 lines hidden), use '-vv' to show</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_list_volumes" time="3.557"><failure message="AssertionError: assert {'CreatedAt': '2021-04-06T18:21:44+02:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...} in [{'CreatedAt': '2021-04-06T18:03:37+02:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage...00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...}]">tests/integration/api_volume_test.py:31: in test_list_volumes
    assert volume_info in volumes
E   AssertionError: assert {'CreatedAt': '2021-04-06T18:21:44+02:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...} in [{'CreatedAt': '2021-04-06T18:03:37+02:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage...00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...}]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_prune_volumes" time="3.534" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_remove_nonexistent_volume" time="3.508" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_remove_volume" time="3.532" /><testcase classname="tests.integration.client_test.ClientTest" name="test_df" time="1.811" /><testcase classname="tests.integration.client_test.ClientTest" name="test_info" time="1.272" /><testcase classname="tests.integration.client_test.ClientTest" name="test_ping" time="0.003" /><testcase classname="tests.integration.client_test.ClientTest" name="test_version" time="1.248" /><testcase classname="tests.integration.client_test.CancellableEventsTest" name="test_cancel_events" time="2.004" /><testcase classname="tests.integration.context_api_test.ContextLifecycleTest" name="test_context_remove" time="6.373" /><testcase classname="tests.integration.context_api_test.ContextLifecycleTest" name="test_lifecycle" time="6.091" /><testcase classname="tests.integration.context_api_test.ContextLifecycleTest" name="test_load_context_without_orchestrator" time="6.129" /><testcase classname="tests.integration.errors_test.ErrorsTest" name="test_api_error_parses_json" time="6.459"><failure message="AssertionError: assert 'You cannot remove a running container' in 'cannot remove container dd899543fbf7463157b1e4320be9bc42e76d641357427d701d48a027213b7af3 as it is running - running or paused containers cannot be removed without force: container state improper'">tests/integration/errors_test.py:13: in test_api_error_parses_json
    assert 'You cannot remove a running container' in explanation
E   AssertionError: assert 'You cannot remove a running container' in 'cannot remove container dd899543fbf7463157b1e4320be9bc42e76d641357427d701d48a027213b7af3 as it is running - running or paused containers cannot be removed without force: container state improper'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_get" time="4.718"><failure message="AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'&#10;  - alpine&#10;  + docker.io/library/alpine:latest">tests/integration/models_containers_test.py:189: in test_get
    assert client.containers.get(container.id).attrs[
E   AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'
E     - alpine
E     + docker.io/library/alpine:latest</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_list" time="4.813"><failure message="AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'&#10;  - alpine&#10;  + docker.io/library/alpine:latest">tests/integration/models_containers_test.py:202: in test_list
    assert container.attrs['Config']['Image'] == 'alpine'
E   AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'
E     - alpine
E     + docker.io/library/alpine:latest</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_list_sparse" time="5.087"><failure message="AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'&#10;  - alpine&#10;  + docker.io/library/alpine:latest">tests/integration/models_containers_test.py:220: in test_list_sparse
    assert container.attrs['Image'] == 'alpine'
E   AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'
E     - alpine
E     + docker.io/library/alpine:latest</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run" time="4.795" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_detach" time="4.853"><failure message="AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'&#10;  - alpine&#10;  + docker.io/library/alpine:latest">tests/integration/models_containers_test.py:26: in test_run_detach
    assert container.attrs['Config']['Image'] == "alpine"
E   AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'
E     - alpine
E     + docker.io/library/alpine:latest</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_auto_remove" time="6.939" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_auto_remove_error" time="7.064"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/796256ba3850b75071873d4302518ae3fa9e64d3e261dbc41f6a30f3f6f0c0ab/json: Internal Server Error (&quot;container 796256ba3850b75071873d4302518ae3fa9e64d3e261dbc41f6a30f3f6f0c0ab does not exist in database: no such container&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/796256ba3850b75071873d4302518ae3fa9e64d3e261dbc41f6a30f3f6f0c0ab/json

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:139: in test_run_with_auto_remove_error
    client.containers.run(
docker/models/containers.py:827: in run
    out = container.logs(
docker/models/containers.py:306: in logs
    return self.client.api.logs(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:871: in logs
    output = self._get_result(container, stream, res)
docker/api/client.py:484: in _get_result
    return self._get_result_tty(stream, res, self._check_is_tty(container))
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/client.py:480: in _check_is_tty
    cont = self.inspect_container(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:773: in inspect_container
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/796256ba3850b75071873d4302518ae3fa9e64d3e261dbc41f6a30f3f6f0c0ab/json: Internal Server Error ("container 796256ba3850b75071873d4302518ae3fa9e64d3e261dbc41f6a30f3f6f0c0ab does not exist in database: no such container")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_error" time="4.925" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_image_that_does_not_exist" time="3.943"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/create: Not Found (&quot;unable to find a name and tag match for dockerpytest_does_not_exist in repotags: no such image&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:41: in test_run_with_image_that_does_not_exist
    client.containers.run("dockerpytest_does_not_exist")
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/create: Not Found ("unable to find a name and tag match for dockerpytest_does_not_exist in repotags: no such image")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_json_file_driver" time="4.523" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_named_volume" time="5.602" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_network" time="4.226"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c26162894989c784d0f6f6bed04844629e5d8180a861313f5d68cbfe4c1d323a/start: Internal Server Error (&quot;container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/c26162894989c784d0f6f6bed04844629e5d8180a861313f5d68cbfe4c1d323a/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:95: in test_run_with_network
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c26162894989c784d0f6f6bed04844629e5d8180a861313f5d68cbfe4c1d323a/start: Internal Server Error ("container_linux.go:367: starting container process caused: process_linux.go:495: container init caused: rootfs_linux.go:60: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/7e05d78c2217a4a250b9df10b258568807e607e33cd6b6d8c08fd0e46941021a/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_none_driver" time="4.691" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_proxy_config" time="4.430" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_streamed_logs" time="6.135" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_streamed_logs_and_cancel" time="5.006"><failure message="Failed: Timeout &gt;5.0s">tests/integration/base.py:30: in tearDown
    client = docker.from_env(version=TEST_API_VERSION)
docker/client.py:96: in from_env
    return cls(
docker/client.py:45: in __init__
    self.api = APIClient(*args, **kwargs)
docker/api/client.py:197: in __init__
    self._version = self._retrieve_server_version()
docker/api/client.py:214: in _retrieve_server_version
    return self.version(api_version=False)["ApiVersion"]
docker/api/daemon.py:181: in version
    return self._result(self._get(url), json=True)
docker/utils/decorators.py:46: in inner
    return f(self, *args, **kwargs)
docker/api/client.py:251: in _get
    return self.get(url, **self._set_request_timeout(kwargs))
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/sessions.py:555: in get
    return self.request('GET', url, **kwargs)
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/sessions.py:542: in request
    resp = self.send(prep, **send_kwargs)
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/sessions.py:655: in send
    r = adapter.send(request, **kwargs)
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/adapters.py:439: in send
    resp = conn.urlopen(
../../.virtualenvs/docker-py/lib/python3.8/site-packages/urllib3/connectionpool.py:699: in urlopen
    httplib_response = self._make_request(
../../.virtualenvs/docker-py/lib/python3.8/site-packages/urllib3/connectionpool.py:445: in _make_request
    six.raise_from(e, None)
../../.virtualenvs/docker-py/lib/python3.8/site-packages/urllib3/connectionpool.py:440: in _make_request
    httplib_response = conn.getresponse()
/usr/lib/python3.8/http/client.py:1347: in getresponse
    response.begin()
/usr/lib/python3.8/http/client.py:307: in begin
    version, status, reason = self._read_status()
/usr/lib/python3.8/http/client.py:268: in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
/usr/lib/python3.8/socket.py:669: in readinto
    return self._sock.recv_into(b)
E   Failed: Timeout &gt;5.0s</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_volume" time="5.500" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_commit" time="6.197" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_create_with_volume_driver" time="4.019"><failure message="AssertionError: assert '' == 'foo'&#10;  - foo">tests/integration/models_containers_test.py:456: in test_create_with_volume_driver
    assert container.attrs['HostConfig']['VolumeDriver'] == 'foo'
E   AssertionError: assert '' == 'foo'
E     - foo</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_diff" time="5.262"><failure message="AssertionError: assert [{'Kind': 0, ...th': '/test'}] == [{'Kind': 1, 'Path': '/test'}]&#10;  At index 0 diff: {'Path': '/etc', 'Kind': 0} != {'Path': '/test', 'Kind': 1}&#10;  Left contains one more item: {'Kind': 1, 'Path': '/test'}&#10;  Full diff:&#10;  - [{'Kind': 1, 'Path': '/test'}]&#10;  + [{'Kind': 0, 'Path': '/etc'}, {'Kind': 1, 'Path': '/test'}]">tests/integration/models_containers_test.py:251: in test_diff
    assert container.diff() == [{'Path': '/test', 'Kind': 1}]
E   AssertionError: assert [{'Kind': 0, ...th': '/test'}] == [{'Kind': 1, 'Path': '/test'}]
E     At index 0 diff: {'Path': '/etc', 'Kind': 0} != {'Path': '/test', 'Kind': 1}
E     Left contains one more item: {'Kind': 1, 'Path': '/test'}
E     Full diff:
E     - [{'Kind': 1, 'Path': '/test'}]
E     + [{'Kind': 0, 'Path': '/etc'}, {'Kind': 1, 'Path': '/test'}]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_exec_run_failed" time="5.432"><failure message="AssertionError: assert 127 == 126&#10;  +127&#10;  -126">tests/integration/models_containers_test.py:270: in test_exec_run_failed
    assert exec_output[0] == 126
E   AssertionError: assert 127 == 126
E     +127
E     -126</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_exec_run_success" time="5.297" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_kill" time="4.983"><failure message="AssertionError: assert 'stopped' == 'exited'&#10;  - exited&#10;  + stopped">tests/integration/models_containers_test.py:281: in test_kill
    assert container.status == 'exited'
E   AssertionError: assert 'stopped' == 'exited'
E     - exited
E     + stopped</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_logs" time="4.966" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_pause" time="5.030" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_ports_target_list" time="5.430" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_ports_target_none" time="5.123" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_ports_target_tuple" time="5.190" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_remove" time="5.406" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_rename" time="4.785" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_restart" time="15.912" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_start" time="4.964" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_stats" time="4.908" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_stop" time="4.971" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_top" time="5.370"><failure message="AssertionError: assert 'sleep 60' in ['    1 root      0:00 sleep 60']">tests/integration/models_containers_test.py:425: in test_top
    assert 'sleep 60' in top['Processes'][0]
E   AssertionError: assert 'sleep 60' in ['    1 root      0:00 sleep 60']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_update" time="4.812"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/710d998eb635f915e55e35413a05ed2e5ea631015f0396b7f4e0a8c862fa5692/update: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/710d998eb635f915e55e35413a05ed2e5ea631015f0396b7f4e0a8c862fa5692/update

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:433: in test_update
    container.update(cpu_shares=3)
docker/models/containers.py:489: in update
    return self.client.api.update_container(self.id, **kwargs)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1270: in update_container
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/710d998eb635f915e55e35413a05ed2e5ea631015f0396b7f4e0a8c862fa5692/update: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_wait" time="5.345" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_build" time="5.568" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_build_with_error" time="5.353"><failure message="AssertionError: assert &quot;The command '/bin/sh -c exit 1' returned a non-zero code: 1&quot; in 'docker.errors.BuildError: error building at STEP &quot;RUN exit 1&quot;: error while running runtime: exit status 1'&#10; +  where 'docker.errors.BuildError: error building at STEP &quot;RUN exit 1&quot;: error while running runtime: exit status 1' = &lt;bound method ExceptionInfo.exconly of &lt;ExceptionInfo BuildError('error building at STEP &quot;RUN exit 1&quot;: error while running runtime: exit status 1\n') tblen=2&gt;&gt;()&#10; +    where &lt;bound method ExceptionInfo.exconly of &lt;ExceptionInfo BuildError('error building at STEP &quot;RUN exit 1&quot;: error while running runtime: exit status 1\n') tblen=2&gt;&gt; = &lt;ExceptionInfo BuildError('error building at STEP &quot;RUN exit 1&quot;: error while running runtime: exit status 1\n') tblen=2&gt;.exconly">tests/integration/models_images_test.py:30: in test_build_with_error
    assert (
E   AssertionError: assert "The command '/bin/sh -c exit 1' returned a non-zero code: 1" in 'docker.errors.BuildError: error building at STEP "RUN exit 1": error while running runtime: exit status 1'
E    +  where 'docker.errors.BuildError: error building at STEP "RUN exit 1": error while running runtime: exit status 1' = &lt;bound method ExceptionInfo.exconly of &lt;ExceptionInfo BuildError('error building at STEP "RUN exit 1": error while running runtime: exit status 1\n') tblen=2&gt;&gt;()
E    +    where &lt;bound method ExceptionInfo.exconly of &lt;ExceptionInfo BuildError('error building at STEP "RUN exit 1": error while running runtime: exit status 1\n') tblen=2&gt;&gt; = &lt;ExceptionInfo BuildError('error building at STEP "RUN exit 1": error while running runtime: exit status 1\n') tblen=2&gt;.exconly</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_build_with_multiple_success" time="5.402" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_build_with_success_build_output" time="5.160" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_list" time="6.803" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_list_with_repository" time="6.604" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_load_error" time="4.021"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/images/load: Internal Server Error (&quot;failed to load image: error pulling image: payload does not match any of the supported image formats (oci-archive, oci-dir, docker-archive, docker-dir)&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/images/load

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:98: in test_load_error
    client.images.load('abc')
docker/models/images.py:384: in load
    for chunk in resp:
docker/api/client.py:387: in _stream_helper
    yield self._result(response, json=decode)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/images/load: Internal Server Error ("failed to load image: error pulling image: payload does not match any of the supported image formats (oci-archive, oci-dir, docker-archive, docker-dir)")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_pull" time="6.701"><failure message="AssertionError: assert 'alpine:latest' in ['docker.io/library/alpine:latest']">tests/integration/models_images_test.py:71: in test_pull
    assert 'alpine:latest' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:latest' in ['docker.io/library/alpine:latest']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_pull_multiple" time="7.193"><failure message="AssertionError: assert False&#10; +  where False = any([False])">tests/integration/models_images_test.py:91: in test_pull_multiple
    assert any([
E   AssertionError: assert False
E    +  where False = any([False])</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_pull_with_sha" time="6.984"><failure message="AssertionError: assert 'hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7' in ['docker.io/library/hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7', 'docker.io/library/hello-world@sha256:8072a54ebb3bc136150e2f2860f00a7bf45f13eeb917cca2430fcd0054c8e51b']">tests/integration/models_images_test.py:85: in test_pull_with_sha
    assert image_ref in image.attrs['RepoDigests']
E   AssertionError: assert 'hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7' in ['docker.io/library/hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7', 'docker.io/library/hello-world@sha256:8072a54ebb3bc136150e2f2860f00a7bf45f13eeb917cca2430fcd0054c8e51b']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_pull_with_tag" time="6.354"><failure message="AssertionError: assert 'alpine:3.10' in ['docker.io/library/alpine:3.10']">tests/integration/models_images_test.py:76: in test_pull_with_tag
    assert 'alpine:3.10' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:3.10' in ['docker.io/library/alpine:3.10']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_save_and_load" time="4.449" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_save_and_load_repo_name" time="4.206"><failure message="docker.errors.InvalidArgument: dockerpytest_5c47917f11f31ea:latest is not a valid tag for this image">tests/integration/models_images_test.py:122: in test_save_and_load_repo_name
    stream = image.save(named='{}:latest'.format(additional_tag))
docker/models/images.py:98: in save
    raise InvalidArgument(
E   docker.errors.InvalidArgument: dockerpytest_5c47917f11f31ea:latest is not a valid tag for this image</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_save_name_error" time="3.821" /><testcase classname="tests.integration.models_images_test.ImageTest" name="test_tag_and_remove" time="6.873" /><testcase classname="tests.integration.models_networks_test.NetworkCollectionTest" name="test_create" time="4.360" /><testcase classname="tests.integration.models_networks_test.NetworkCollectionTest" name="test_get" time="4.175" /><testcase classname="tests.integration.models_networks_test.NetworkCollectionTest" name="test_list_remove" time="4.234" /><testcase classname="tests.integration.models_networks_test.NetworkTest" name="test_connect_disconnect" time="4.344"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/2148ec4c9ca0eae87cef4a0ae60b3106c412d53d653f480d2818abee4556666d/connect: Internal Server Error (&quot;network disconnect is not enabled for rootless containers&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/2148ec4c9ca0eae87cef4a0ae60b3106c412d53d653f480d2818abee4556666d/connect

During handling of the above exception, another exception occurred:
tests/integration/models_networks_test.py:59: in test_connect_disconnect
    network.connect(container)
docker/models/networks.py:58: in connect
    return self.client.api.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/2148ec4c9ca0eae87cef4a0ae60b3106c412d53d653f480d2818abee4556666d/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_resources_test.ModelTest" name="test_reload" time="5.388" /><testcase classname="tests.integration.models_volumes_test.VolumesTest" name="test_create_get" time="4.023" /><testcase classname="tests.integration.models_volumes_test.VolumesTest" name="test_list_remove" time="3.857"><failure message="AssertionError: assert &lt;Volume: dockerpyte&gt; in []&#10; +  where [] = &lt;bound method VolumeCollection.list of &lt;docker.models.volumes.VolumeCollection object at 0x7fd6c7b6f3d0&gt;&gt;(filters={'name': 'dockerpytest_'})&#10; +    where &lt;bound method VolumeCollection.list of &lt;docker.models.volumes.VolumeCollection object at 0x7fd6c7b6f3d0&gt;&gt; = &lt;docker.models.volumes.VolumeCollection object at 0x7fd6c7b6f3d0&gt;.list&#10; +      where &lt;docker.models.volumes.VolumeCollection object at 0x7fd6c7b6f3d0&gt; = &lt;docker.client.DockerClient object at 0x7fd6c7b6f430&gt;.volumes">tests/integration/models_volumes_test.py:26: in test_list_remove
    assert volume in client.volumes.list(filters={'name': 'dockerpytest_'})
E   AssertionError: assert &lt;Volume: dockerpyte&gt; in []
E    +  where [] = &lt;bound method VolumeCollection.list of &lt;docker.models.volumes.VolumeCollection object at 0x7fd6c7b6f3d0&gt;&gt;(filters={'name': 'dockerpytest_'})
E    +    where &lt;bound method VolumeCollection.list of &lt;docker.models.volumes.VolumeCollection object at 0x7fd6c7b6f3d0&gt;&gt; = &lt;docker.models.volumes.VolumeCollection object at 0x7fd6c7b6f3d0&gt;.list
E    +      where &lt;docker.models.volumes.VolumeCollection object at 0x7fd6c7b6f3d0&gt; = &lt;docker.client.DockerClient object at 0x7fd6c7b6f430&gt;.volumes</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.regression_test.TestRegressions" name="test_443_handle_nonchunked_response_in_stream" time="6.042"><failure message="Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;">tests/integration/regression_test.py:16: in test_443_handle_nonchunked_response_in_stream
    pass
E   Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.regression_test.TestRegressions" name="test_542_truncate_ids_client_side" time="6.442" /><testcase classname="tests.integration.regression_test.TestRegressions" name="test_647_support_doubleslash_in_image_names" time="6.268" /><testcase classname="tests.integration.regression_test.TestRegressions" name="test_649_handle_timeout_value_none" time="6.794" /><testcase classname="tests.integration.regression_test.TestRegressions" name="test_715_handle_user_param_as_int_value" time="6.583" /><testcase classname="tests.integration.regression_test.TestRegressions" name="test_792_explicit_port_protocol" time="7.027" /><testcase classname="tests.integration.credentials.utils_test" name="test_create_environment_dict" time="0.046" /></testsuite></testsuites>