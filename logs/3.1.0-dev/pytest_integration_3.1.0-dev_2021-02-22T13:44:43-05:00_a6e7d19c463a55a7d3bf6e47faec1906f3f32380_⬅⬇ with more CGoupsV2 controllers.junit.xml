<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="docker-py" errors="0" failures="105" skipped="5" tests="278" time="765.656" timestamp="2021-02-23T01:39:50.221869" hostname="acnologia"><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_container_with_target" time="4.877" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_from_stringio" time="2.347" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_gzip_custom_encoding" time="2.733" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_gzip_encoding" time="2.801" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_in_context_abs_dockerfile" time="2.991"><failure message="AssertionError: assert 'Successfully tagged' in 'Successfully built b1c79ba6bd40\n'">tests/integration/api_build_test.py:575: in test_build_in_context_abs_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built b1c79ba6bd40\n'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_in_context_dockerfile" time="2.958"><failure message="AssertionError: assert 'Successfully tagged' in 'Successfully built 0301aac449f3\n'">tests/integration/api_build_test.py:510: in test_build_in_context_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built 0301aac449f3\n'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_in_context_nested_dockerfile" time="2.990"><failure message="AssertionError: assert 'Successfully tagged' in 'Successfully built 5ae6898eb854\n'">tests/integration/api_build_test.py:543: in test_build_in_context_nested_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built 5ae6898eb854\n'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_invalid_platform" time="3.041"><failure message="Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;">tests/integration/api_build_test.py:448: in test_build_invalid_platform
    pass
E   Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_isolation" time="2.098"><failure message="docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/build?t=isolation&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;isolation=default: Bad Request (&quot;schema: error converting value for &quot;isolation&quot;&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/build?t=isolation&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;isolation=default

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:196: in test_build_isolation
    for chunk in stream:
docker/api/client.py:389: in _stream_helper
    yield self._result(response, json=decode)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/build?t=isolation&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;isolation=default: Bad Request ("schema: error converting value for "isolation"")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_labels" time="2.153"><failure message="docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/build?t=labels&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;labels=%7B%22test%22%3A+%22OK%22%7D: Bad Request (&quot;failed to parse query parameter 'labels': &quot;{\&quot;test\&quot;: \&quot;OK\&quot;}&quot;: json: cannot unmarshal object into Go value of type []string&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/build?t=labels&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;labels=%7B%22test%22%3A+%22OK%22%7D

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:211: in test_build_labels
    for chunk in stream:
docker/api/client.py:389: in _stream_helper
    yield self._result(response, json=decode)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/build?t=labels&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;labels=%7B%22test%22%3A+%22OK%22%7D: Bad Request ("failed to parse query parameter 'labels': "{\"test\": \"OK\"}": json: cannot unmarshal object into Go value of type []string")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_out_of_context_dockerfile" time="2.033"><failure message="KeyError: 'stream'">tests/integration/api_build_test.py:481: in test_build_out_of_context_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   KeyError: 'stream'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_shmsize" time="2.216" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_squash" time="7.044"><failure message="AssertionError: assert 2 == 4&#10;  +2&#10;  -4">tests/integration/api_build_test.py:371: in test_build_squash
    assert len(non_squashed['RootFS']['Layers']) == 4
E   AssertionError: assert 2 == 4
E     +2
E     -4</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_stderr_data" time="3.315"><failure message="AssertionError: assert False&#10; +  where False = any([False, False, False, False, False, False, ...])">tests/integration/api_build_test.py:391: in test_build_stderr_data
    assert any([line == expected for line in lines])
E   AssertionError: assert False
E    +  where False = any([False, False, False, False, False, False, ...])</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_streaming" time="4.034" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_buildargs" time="2.369" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_cache_from" time="5.735"><failure message="AssertionError: assert 0 == 3&#10;  +0&#10;  -3">tests/integration/api_build_test.py:240: in test_build_with_cache_from
    assert counter == 3
E   AssertionError: assert 0 == 3
E     +0
E     -3</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_dockerfile_empty_lines" time="2.628" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_dockerignore" time="3.586" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_extra_hosts" time="2.606"><failure message="docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/build?t=dockerpytest_extrahost_build&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;extrahosts=extrahost.local.test%3A127.0.0.1&amp;extrahosts=hello.world.test%3A127.0.0.1: Bad Request (&quot;failed to parse query parameter 'extrahosts': &quot;hello.world.test:127.0.0.1&quot;: invalid character 'h' looking for beginning of value&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/build?t=dockerpytest_extrahost_build&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;extrahosts=extrahost.local.test%3A127.0.0.1&amp;extrahosts=hello.world.test%3A127.0.0.1

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:336: in test_build_with_extra_hosts
    for chunk in stream:
docker/api/client.py:389: in _stream_helper
    yield self._result(response, json=decode)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/build?t=dockerpytest_extrahost_build&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;extrahosts=extrahost.local.test%3A127.0.0.1&amp;extrahosts=hello.world.test%3A127.0.0.1: Bad Request ("failed to parse query parameter 'extrahosts': "hello.world.test:127.0.0.1": invalid character 'h' looking for beginning of value")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_network_mode" time="3.074"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/5709447992fcc01c26aef55f881f08d4044192acde4bdf3fd3d1e2cb773d0b6b/connect: Internal Server Error (&quot;network disconnect is not enabled for rootless containers&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/5709447992fcc01c26aef55f881f08d4044192acde4bdf3fd3d1e2cb773d0b6b/connect

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:283: in test_build_with_network_mode
    self.client.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/5709447992fcc01c26aef55f881f08d4044192acde4bdf3fd3d1e2cb773d0b6b/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_proxy" time="2.943" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_proxy_and_buildargs" time="3.787" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_prune_builds" time="3.554"><skipped type="pytest.xfail" message="Currently fails on 18.09: https://github.com/moby/moby/issues/37920" /></testcase><testcase classname="tests.integration.api_client_test.InformationTest" name="test_info" time="4.207" /><testcase classname="tests.integration.api_client_test.InformationTest" name="test_version" time="4.017" /><testcase classname="tests.integration.api_client_test.AutoDetectVersionTest" name="test_client_init" time="3.717" /><testcase classname="tests.integration.api_client_test.ConnectionTimeoutTest" name="test_timeout" time="0.504" /><testcase classname="tests.integration.api_client_test.UnixconnTest" name="test_resource_warnings" time="1.305" /><testcase classname="tests.integration.api_container_test.ListContainersTest" name="test_list_containers" time="2.634" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create" time="2.693" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_container_with_volumes_from" time="3.510" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_auto_remove" time="2.750" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_cpu_rt_options" time="2.750" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_device_cgroup_rules" time="2.603"><failure message="AssertionError: assert None == ['c 7:128 rwm']&#10;  +None&#10;  -['c 7:128 rwm']">tests/integration/api_container_test.py:477: in test_create_with_device_cgroup_rules
    assert config['HostConfig']['DeviceCgroupRules'] == [rule]
E   AssertionError: assert None == ['c 7:128 rwm']
E     +None
E     -['c 7:128 rwm']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_environment_variable_no_value" time="2.438"><failure message="AssertionError: assert 'Foo' in ['PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'TERM=xterm', 'container=podman', 'Other=one', 'Blank=']">tests/integration/api_container_test.py:373: in test_create_with_environment_variable_no_value
    assert 'Foo' in config['Config']['Env']
E   AssertionError: assert 'Foo' in ['PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'TERM=xterm', 'container=podman', 'Other=one', 'Blank=']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_host_pid_mode" time="2.592"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3e3366a9bdaddbd1bf42bab8c50b15ab64f9cb22663d9eeda007ef8e38925203/start: Internal Server Error (&quot;container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: readonly path /proc/asound: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/3e3366a9bdaddbd1bf42bab8c50b15ab64f9cb22663d9eeda007ef8e38925203/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:59: in test_create_with_host_pid_mode
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3e3366a9bdaddbd1bf42bab8c50b15ab64f9cb22663d9eeda007ef8e38925203/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: readonly path /proc/asound: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_init" time="2.709" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_isolation" time="3.842"><failure message="AssertionError: assert '' == 'default'&#10;  - default">tests/integration/api_container_test.py:402: in test_create_with_isolation
    assert config['HostConfig']['Isolation'] == 'default'
E   AssertionError: assert '' == 'default'
E     - default</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_links" time="3.336"><failure message="docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request (&quot;bad parameter: Link is not supported&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:96: in test_create_with_links
    res2 = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request ("bad parameter: Link is not supported")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_mac_address" time="2.879"><failure message="AssertionError: assert '02:42:ac:11:00:0a' == ''&#10;  + 02:42:ac:11:00:0a">tests/integration/api_container_test.py:217: in test_create_with_mac_address
    assert mac_address_expected == res['NetworkSettings']['MacAddress']
E   AssertionError: assert '02:42:ac:11:00:0a' == ''
E     + 02:42:ac:11:00:0a</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_memory_constraints_with_int" time="4.532" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_memory_constraints_with_str" time="4.078" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_restart_policy" time="5.125"><failure message="Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;">tests/integration/api_container_test.py:127: in test_create_with_restart_policy
    self.client.remove_container(id)
E   Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_stop_timeout" time="2.277" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_storage_opt" time="2.126"><skipped type="pytest.xfail" message="Not supported on most drivers" /></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_tmpfs" time="2.287"><failure message="AssertionError: assert {'/tmp1=size=...ev,tmpcopyup'} == {'/tmp1': 'size=3M'}&#10;  Left contains 1 more item:&#10;  {'/tmp1=size=3M': 'rw,rprivate,nosuid,nodev,tmpcopyup'}&#10;  Right contains 1 more item:&#10;  {'/tmp1': 'size=3M'}&#10;  Full diff:&#10;  - {'/tmp1': 'size=3M'}&#10;  + {'/tmp1=size=3M': 'rw,rprivate,nosuid,nodev,tmpcopyup'}">tests/integration/api_container_test.py:391: in test_create_with_tmpfs
    assert config['HostConfig']['Tmpfs'] == tmpfs
E   AssertionError: assert {'/tmp1=size=...ev,tmpcopyup'} == {'/tmp1': 'size=3M'}
E     Left contains 1 more item:
E     {'/tmp1=size=3M': 'rw,rprivate,nosuid,nodev,tmpcopyup'}
E     Right contains 1 more item:
E     {'/tmp1': 'size=3M'}
E     Full diff:
E     - {'/tmp1': 'size=3M'}
E     + {'/tmp1=size=3M': 'rw,rprivate,nosuid,nodev,tmpcopyup'}</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_uts_mode" time="2.619" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_group_id_ints" time="2.238" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_group_id_strings" time="2.192" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_invalid_log_driver_raises_exception" time="2.065"><failure message="AssertionError: assert 'container create: error running container create option: invalid log driver: invalid argument' in [&quot;logger: no log driver named 'asdf' is registered&quot;, 'error looking up logging plugin asdf: plugin &quot;asdf&quot; not found']&#10; +  where 'container create: error running container create option: invalid log driver: invalid argument' = APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')).explanation&#10; +    where APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) = &lt;ExceptionInfo APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) tblen=6&gt;.value">tests/integration/api_container_test.py:293: in test_invalid_log_driver_raises_exception
    assert excinfo.value.explanation in expected_msgs
E   AssertionError: assert 'container create: error running container create option: invalid log driver: invalid argument' in ["logger: no log driver named 'asdf' is registered", 'error looking up logging plugin asdf: plugin "asdf" not found']
E    +  where 'container create: error running container create option: invalid log driver: invalid argument' = APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')).explanation
E    +    where APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) = &lt;ExceptionInfo APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) tblen=6&gt;.value</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_valid_log_driver_and_log_opt" time="2.338"><failure message="AssertionError: assert None == {'max-file': '100'}&#10;  +None&#10;  -{'max-file': '100'}">tests/integration/api_container_test.py:272: in test_valid_log_driver_and_log_opt
    assert container_log_config['Config'] == log_config.config
E   AssertionError: assert None == {'max-file': '100'}
E     +None
E     -{'max-file': '100'}</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_valid_no_config_specified" time="2.222"><failure message="AssertionError: assert None == {}&#10;  +None&#10;  -{}">tests/integration/api_container_test.py:331: in test_valid_no_config_specified
    assert container_log_config['Config'] == {}
E   AssertionError: assert None == {}
E     +None
E     -{}</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_valid_no_log_driver_specified" time="2.183"><failure message="AssertionError: assert None == {'max-file': '100'}&#10;  +None&#10;  -{'max-file': '100'}">tests/integration/api_container_test.py:312: in test_valid_no_log_driver_specified
    assert container_log_config['Config'] == log_config.config
E   AssertionError: assert None == {'max-file': '100'}
E     +None
E     -{'max-file': '100'}</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_binds_ro" time="2.612" /><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_binds_rw" time="2.489" /><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_mounts" time="2.488" /><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_mounts_ro" time="2.357"><failure message="AssertionError: assert True == False&#10;  +True&#10;  -False">tests/integration/api_container_test.py:581: in test_create_with_mounts_ro
    self.check_container_data(inspect_data, False)
tests/integration/api_container_test.py:614: in check_container_data
    assert mount_data['RW'] == rw
E   AssertionError: assert True == False
E     +True
E     -False</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_volume_mount" time="2.340" /><testcase classname="tests.integration.api_container_test.ArchiveTest" name="test_copy_directory_to_container" time="2.354" /><testcase classname="tests.integration.api_container_test.ArchiveTest" name="test_copy_file_to_container" time="2.444"><failure message="AssertionError: assert '' == 'Deaf To All But The Song'&#10;  - Deaf To All But The Song">tests/integration/api_container_test.py:689: in test_copy_file_to_container
    assert logs.strip() == data
E   AssertionError: assert '' == 'Deaf To All But The Song'
E     - Deaf To All But The Song</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ArchiveTest" name="test_get_file_archive_from_container" time="2.486" /><testcase classname="tests.integration.api_container_test.ArchiveTest" name="test_get_file_stat_from_container" time="2.414" /><testcase classname="tests.integration.api_container_test.RenameContainerTest" name="test_rename_container" time="3.059" /><testcase classname="tests.integration.api_container_test.StartContainerTest" name="test_run_shlex_commands" time="3.444" /><testcase classname="tests.integration.api_container_test.StartContainerTest" name="test_start_container" time="2.175" /><testcase classname="tests.integration.api_container_test.StartContainerTest" name="test_start_container_with_dict_instead_of_id" time="2.172" /><testcase classname="tests.integration.api_container_test.WaitTest" name="test_wait" time="5.135" /><testcase classname="tests.integration.api_container_test.WaitTest" name="test_wait_with_condition" time="6.676" /><testcase classname="tests.integration.api_container_test.WaitTest" name="test_wait_with_dict_instead_of_id" time="5.187" /><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs" time="2.169" /><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_streaming_and_follow" time="2.512" /><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_streaming_and_follow_and_cancel" time="3.304" /><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_tail_option" time="2.234" /><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_with_dict_instead_of_id" time="2.153" /><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_with_tail_0" time="2.183" /><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_with_until" time="2.163" /><testcase classname="tests.integration.api_container_test.DiffTest" name="test_diff" time="2.347" /><testcase classname="tests.integration.api_container_test.DiffTest" name="test_diff_with_dict_instead_of_id" time="2.346" /><testcase classname="tests.integration.api_container_test.StopTest" name="test_stop" time="4.309" /><testcase classname="tests.integration.api_container_test.StopTest" name="test_stop_with_dict_instead_of_id" time="4.260" /><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill" time="2.178" /><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill_with_dict_instead_of_id" time="2.209" /><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill_with_signal" time="2.382" /><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill_with_signal_integer" time="2.216" /><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill_with_signal_name" time="2.209" /><testcase classname="tests.integration.api_container_test.PortTest" name="test_port" time="2.122"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/696fc20f0839abd2b40338a9c87d01d32d6a35b13cf9bc77d16e36df404c47d7/start: Internal Server Error (&quot;container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/ddd2251cb8d9e0cd638889727a166fa0c1e233fe22b0c0fbe26224069edf9579/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/696fc20f0839abd2b40338a9c87d01d32d6a35b13cf9bc77d16e36df404c47d7/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1090: in test_port
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/696fc20f0839abd2b40338a9c87d01d32d6a35b13cf9bc77d16e36df404c47d7/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/ddd2251cb8d9e0cd638889727a166fa0c1e233fe22b0c0fbe26224069edf9579/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ContainerTopTest" name="test_top" time="2.470"><skipped type="pytest.xfail" message="Output of docker top depends on host distro, and is not formalized." /></testcase><testcase classname="tests.integration.api_container_test.ContainerTopTest" name="test_top_with_psargs" time="2.500"><skipped type="pytest.xfail" message="Output of docker top depends on host distro, and is not formalized." /></testcase><testcase classname="tests.integration.api_container_test.RestartContainerTest" name="test_restart" time="4.474" /><testcase classname="tests.integration.api_container_test.RestartContainerTest" name="test_restart_with_dict_instead_of_id" time="4.503" /><testcase classname="tests.integration.api_container_test.RestartContainerTest" name="test_restart_with_low_timeout" time="4.730" /><testcase classname="tests.integration.api_container_test.RemoveContainerTest" name="test_remove" time="2.231" /><testcase classname="tests.integration.api_container_test.RemoveContainerTest" name="test_remove_with_dict_instead_of_id" time="2.158" /><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_attach_no_stream" time="2.219"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/822c7159f7f36c23589c7f8ef39772d7ff6d194fe61bfef8b8c653089ed52273/attach?logs=1&amp;stdout=1&amp;stderr=1&amp;stream=0: Internal Server Error (&quot;can only attach to created or running containers - currently in state stopped: container state improper&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/822c7159f7f36c23589c7f8ef39772d7ff6d194fe61bfef8b8c653089ed52273/attach?logs=1&amp;stdout=1&amp;stderr=1&amp;stream=0

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1251: in test_attach_no_stream
    output = self.client.attach(container, stream=False, logs=True)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:62: in attach
    output = self._read_from_socket(
docker/api/client.py:435: in _read_from_socket
    socket = self._get_raw_response_socket(response)
docker/api/client.py:346: in _get_raw_response_socket
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/822c7159f7f36c23589c7f8ef39772d7ff6d194fe61bfef8b8c653089ed52273/attach?logs=1&amp;stdout=1&amp;stderr=1&amp;stream=0: Internal Server Error ("can only attach to created or running containers - currently in state stopped: container state improper")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_attach_stream_and_cancel" time="5.332" /><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_detach_with_arg" time="2.851" /><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_detach_with_config_file" time="2.775" /><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_detach_with_default" time="3.337" /><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_run_container_reading_socket" time="2.179" /><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_run_container_streaming" time="2.219" /><testcase classname="tests.integration.api_container_test.PauseTest" name="test_pause_unpause" time="2.289" /><testcase classname="tests.integration.api_container_test.PruneTest" name="test_prune_containers" time="3.309" /><testcase classname="tests.integration.api_container_test.GetContainerStatsTest" name="test_get_container_stats_no_stream" time="2.189" /><testcase classname="tests.integration.api_container_test.ContainerUpdateTest" name="test_restart_policy_update" time="2.316"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/5a0fe5ea277849577f7e5e3e08ace568e858f781a3fd7ecb49d991b4adf68445/update: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/5a0fe5ea277849577f7e5e3e08ace568e858f781a3fd7ecb49d991b4adf68445/update

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1438: in test_restart_policy_update
    self.client.update_container(container,
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1270: in update_container
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/5a0fe5ea277849577f7e5e3e08ace568e858f781a3fd7ecb49d991b4adf68445/update: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ContainerUpdateTest" name="test_update_container" time="2.363"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/65e40f020c5cf774cf1b557dac1e4b0d45fbd6a6c2721ea58c491188d7265bea/update: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/65e40f020c5cf774cf1b557dac1e4b0d45fbd6a6c2721ea58c491188d7265bea/update

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1416: in test_update_container
    self.client.update_container(container, mem_limit=new_mem_limit)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1270: in update_container
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/65e40f020c5cf774cf1b557dac1e4b0d45fbd6a6c2721ea58c491188d7265bea/update: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ContainerCPUTest" name="test_container_cpu_shares" time="2.168" /><testcase classname="tests.integration.api_container_test.ContainerCPUTest" name="test_container_cpuset" time="2.163" /><testcase classname="tests.integration.api_container_test.ContainerCPUTest" name="test_create_with_runtime" time="2.032"><failure message="AssertionError: assert 'oci' == 'runc'&#10;  - runc&#10;  + oci">tests/integration/api_container_test.py:1483: in test_create_with_runtime
    assert config['HostConfig']['Runtime'] == 'runc'
E   AssertionError: assert 'oci' == 'runc'
E     - runc
E     + oci</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.LinkTest" name="test_remove_link" time="2.191"><failure message="docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request (&quot;bad parameter: Link is not supported&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1501: in test_remove_link
    container2 = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request ("bad parameter: Link is not supported")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_detach_with_config_file" time="7.616"><failure message="AssertionError">tests/integration/api_exec_test.py:227: in test_detach_with_config_file
    assert_cat_socket_detached_with_keys(sock, [ctrl_with('p')])
tests/helpers.py:138: in assert_cat_socket_detached_with_keys
    assert data == b'' or data.startswith(
E   AssertionError</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_detach_with_default" time="3.471" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_as_root" time="2.383" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_as_user" time="2.437" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_streaming" time="2.409" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_string" time="2.383" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_with_env" time="2.456" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_with_workdir" time="2.430" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_inspect" time="2.379" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_start_detached" time="2.510"><failure message="AssertionError: assert '\n' == ''&#10;  Strings contain only whitespace, escaping them using repr()&#10;  - ''&#10;  + '\n'">tests/integration/api_exec_test.py:152: in test_exec_start_detached
    assert response == ""
E   AssertionError: assert '\n' == ''
E     Strings contain only whitespace, escaping them using repr()
E     - ''
E     + '\n'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_start_socket" time="2.331"><failure message="AssertionError: assert 121 == 1&#10;  +121&#10;  -1">tests/integration/api_exec_test.py:134: in test_exec_start_socket
    assert stream == 1  # stdout (0 = stdin, 1 = stdout, 2 = stderr)
E   AssertionError: assert 121 == 1
E     +121
E     -1</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_execute_command" time="2.498" /><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_execute_command_with_proxy_env" time="2.597" /><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_no_stream_demux" time="2.973" /><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_no_stream_no_demux" time="2.966" /><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_stream_demux" time="3.033" /><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_stream_no_demux" time="2.907" /><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_tty_no_stream_demux" time="2.450"><failure message="ValueError: 104 is not a valid stream">tests/integration/api_exec_test.py:299: in test_exec_command_tty_no_stream_demux
    exec_log = self.client.exec_start(res, demux=True)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/exec_api.py:169: in exec_start
    return self._read_from_socket(res, stream, tty=tty, demux=demux)
docker/api/client.py:450: in _read_from_socket
    return consume_socket_output(gen, demux=demux)
docker/utils/socket.py:142: in consume_socket_output
    for frame in frames:
docker/api/client.py:441: in &lt;genexpr&gt;
    gen = (demux_adaptor(*frame) for frame in gen)
docker/utils/socket.py:169: in demux_adaptor
    raise ValueError('{0} is not a valid stream'.format(stream_id))
E   ValueError: 104 is not a valid stream</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_tty_no_stream_no_demux" time="2.997"><failure message="AssertionError: assert b't\r\nhello err\r\n' == b'hello out\r\nhello err\r\n'&#10;  At index 0 diff: b't' != b'h'&#10;  Full diff:&#10;  - b'hello out\r\nhello err\r\n'&#10;  ?   --------&#10;  + b't\r\nhello err\r\n'">tests/integration/api_exec_test.py:282: in test_exec_command_tty_no_stream_no_demux
    assert exec_log == b'hello out\r\nhello err\r\n'
E   AssertionError: assert b't\r\nhello err\r\n' == b'hello out\r\nhello err\r\n'
E     At index 0 diff: b't' != b'h'
E     Full diff:
E     - b'hello out\r\nhello err\r\n'
E     ?   --------
E     + b't\r\nhello err\r\n'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_tty_stream_demux" time="2.366"><failure message="ValueError: 104 is not a valid stream">tests/integration/api_exec_test.py:305: in test_exec_command_tty_stream_demux
    exec_log = list(self.client.exec_start(res, demux=True, stream=True))
docker/api/client.py:441: in &lt;genexpr&gt;
    gen = (demux_adaptor(*frame) for frame in gen)
docker/utils/socket.py:169: in demux_adaptor
    raise ValueError('{0} is not a valid stream'.format(stream_id))
E   ValueError: 104 is not a valid stream</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_tty_stream_no_demux" time="2.994"><failure message="AssertionError: assert b'hello out\r\n' in [b't\r\n', b'hello err\r\n']">tests/integration/api_exec_test.py:288: in test_exec_command_tty_stream_no_demux
    assert b'hello out\r\n' in exec_log
E   AssertionError: assert b'hello out\r\n' in [b't\r\n', b'hello err\r\n']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_healthcheck_test.HealthcheckTest" name="test_healthcheck_fails" time="2.336"><failure message="KeyError: 'Health'">tests/integration/api_healthcheck_test.py:51: in test_healthcheck_fails
    wait_on_health_status(self.client, container, "unhealthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_healthcheck_test.HealthcheckTest" name="test_healthcheck_passes" time="2.311"><failure message="KeyError: 'Health'">tests/integration/api_healthcheck_test.py:38: in test_healthcheck_passes
    wait_on_health_status(self.client, container, "healthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_healthcheck_test.HealthcheckTest" name="test_healthcheck_shell_command" time="1.963"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error (&quot;fill out specgen: healthcheck-retries must be greater than 0&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_healthcheck_test.py:18: in test_healthcheck_shell_command
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("fill out specgen: healthcheck-retries must be greater than 0")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_healthcheck_test.HealthcheckTest" name="test_healthcheck_start_period" time="2.418"><failure message="KeyError: 'Health'">tests/integration/api_healthcheck_test.py:68: in test_healthcheck_start_period
    wait_on_health_status(self.client, container, "healthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.ListImagesTest" name="test_images" time="3.018" /><testcase classname="tests.integration.api_image_test.ListImagesTest" name="test_images_quiet" time="2.017" /><testcase classname="tests.integration.api_image_test.PullImageTest" name="test_pull" time="5.801" /><testcase classname="tests.integration.api_image_test.PullImageTest" name="test_pull_invalid_platform" time="6.281"><failure message="Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;">tests/integration/api_image_test.py:70: in test_pull_invalid_platform
    self.client.pull('hello-world', platform='foobar')
E   Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.PullImageTest" name="test_pull_streaming" time="5.097" /><testcase classname="tests.integration.api_image_test.CommitTest" name="test_commit" time="2.565"><failure message="AssertionError: assert 'alpine:3.10' == 'docker.io/li...cb41504e8a27c'&#10;  - docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c&#10;  + alpine:3.10">tests/integration/api_image_test.py:93: in test_commit
    assert TEST_IMG == img['ContainerConfig']['Image']
E   AssertionError: assert 'alpine:3.10' == 'docker.io/li...cb41504e8a27c'
E     - docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c
E     + alpine:3.10</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.CommitTest" name="test_commit_with_changes" time="2.197"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/commit?container=a7524dda06a78dfc5e85f956938630074fc6164cd39a2e4495177f81b91c855c&amp;changes=EXPOSE+8000&amp;changes=CMD+%5B%22bash%22%5D: Internal Server Error (&quot;CommitFailure: invalid change &quot;CMD&quot; - must be formatted as KEY VALUE&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/commit?container=a7524dda06a78dfc5e85f956938630074fc6164cd39a2e4495177f81b91c855c&amp;changes=EXPOSE+8000&amp;changes=CMD+%5B%22bash%22%5D

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:102: in test_commit_with_changes
    img_id = self.client.commit(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:147: in commit
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/commit?container=a7524dda06a78dfc5e85f956938630074fc6164cd39a2e4495177f81b91c855c&amp;changes=EXPOSE+8000&amp;changes=CMD+%5B%22bash%22%5D: Internal Server Error ("CommitFailure: invalid change "CMD" - must be formatted as KEY VALUE")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.RemoveImageTest" name="test_remove" time="2.854" /><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_get_load_image" time="5.154"><failure message="AssertionError: assert False&#10; +  where False = any([])">tests/integration/api_image_test.py:267: in test_get_load_image
    assert any([
E   AssertionError: assert False
E    +  where False = any([])</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_from_bytes" time="2.134" /><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_from_file" time="2.130" /><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_from_stream" time="2.118" /><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_from_url" time="0.000"><skipped type="pytest.skip" message="Doesn't work inside a container - FIXME">/home/riyad/src/docker-py/tests/integration/api_image_test.py:292: Doesn't work inside a container - FIXME</skipped><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_image_from_data_with_changes" time="2.204" /><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_image_with_changes" time="2.169" /><testcase classname="tests.integration.api_image_test.PruneImagesTest" name="test_prune_images" time="5.286"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/images/prune?filters=%7B%22dangling%22%3A+%5B%22false%22%5D%7D: Internal Server Error (&quot;runtime error: invalid memory address or nil pointer dereference&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/images/prune?filters=%7B%22dangling%22%3A+%5B%22false%22%5D%7D

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:332: in test_prune_images
    result = self.client.prune_images({'dangling': False})
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/image.py:351: in prune_images
    return self._result(self._post(url, params=params), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/images/prune?filters=%7B%22dangling%22%3A+%5B%22false%22%5D%7D: Internal Server Error ("runtime error: invalid memory address or nil pointer dereference")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.SaveLoadImagesTest" name="test_get_image_load_image" time="2.125"><failure message="AssertionError: assert False is True">tests/integration/api_image_test.py:361: in test_get_image_load_image
    assert success is True
E   AssertionError: assert False is True</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------
{'stream': 'Loaded image: docker.io/library/alpine:3.10\n'}

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.InspectDistributionTest" name="test_inspect_distribution" time="1.955"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/distribution/busybox:latest/json: Not Found (&quot;Path /v1.40/distribution/busybox:latest/json is not supported&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/distribution/busybox:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:367: in test_inspect_distribution
    data = self.client.inspect_distribution('busybox:latest')
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:289: in inspect_distribution
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/distribution/busybox:latest/json: Not Found ("Path /v1.40/distribution/busybox:latest/json is not supported")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_and_disconnect_container" time="2.229"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/e31dbd78e95419b9ca4381d890c6493790185236b97d5f299c5202a63a143f26/connect: Internal Server Error (&quot;network disconnect is not enabled for rootless containers&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/e31dbd78e95419b9ca4381d890c6493790185236b97d5f299c5202a63a143f26/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:98: in test_connect_and_disconnect_container
    self.client.connect_container_to_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/e31dbd78e95419b9ca4381d890c6493790185236b97d5f299c5202a63a143f26/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_and_force_disconnect_container" time="2.278"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/1e362a15ea928835c786084ab392f0c69904e88d0e51bcd3c65715dee21d0b07/connect: Internal Server Error (&quot;network disconnect is not enabled for rootless containers&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/1e362a15ea928835c786084ab392f0c69904e88d0e51bcd3c65715dee21d0b07/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:125: in test_connect_and_force_disconnect_container
    self.client.connect_container_to_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/1e362a15ea928835c786084ab392f0c69904e88d0e51bcd3c65715dee21d0b07/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_on_container_create" time="2.137"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/127fdc6bb4a4524c176889b854ff047b7fe1fe5f0df338c3db6b8dd1e31d9e24/start: Internal Server Error (&quot;container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/127fdc6bb4a4524c176889b854ff047b7fe1fe5f0df338c3db6b8dd1e31d9e24/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:165: in test_connect_on_container_create
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/127fdc6bb4a4524c176889b854ff047b7fe1fe5f0df338c3db6b8dd1e31d9e24/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_with_aliases" time="2.309"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/7b173ef77a49cb5e464f235fd7dfdaff5f08e8a2eaac51ed6143d23d8b3ca6f0/connect: Internal Server Error (&quot;network disconnect is not enabled for rootless containers&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/7b173ef77a49cb5e464f235fd7dfdaff5f08e8a2eaac51ed6143d23d8b3ca6f0/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:147: in test_connect_with_aliases
    self.client.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/7b173ef77a49cb5e464f235fd7dfdaff5f08e8a2eaac51ed6143d23d8b3ca6f0/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_with_ipv4_address" time="2.218"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/cfb4df800436d53a4dc9913afae0dbebbe659cf8e149f28d8cbea76dd57578ad/start: Internal Server Error (&quot;container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/cfb4df800436d53a4dc9913afae0dbebbe659cf8e149f28d8cbea76dd57578ad/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:369: in test_connect_with_ipv4_address
    container = self.create_and_start(
tests/integration/base.py:115: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/cfb4df800436d53a4dc9913afae0dbebbe659cf8e149f28d8cbea76dd57578ad/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_with_ipv6_address" time="2.135"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b02b5c7dbf1510fd37f4b2881354d82cb8536de307ac0f5d5d90b1e8f8644fad/start: Internal Server Error (&quot;container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b02b5c7dbf1510fd37f4b2881354d82cb8536de307ac0f5d5d90b1e8f8644fad/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:395: in test_connect_with_ipv6_address
    container = self.create_and_start(
tests/integration/base.py:115: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b02b5c7dbf1510fd37f4b2881354d82cb8536de307ac0f5d5d90b1e8f8644fad/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_with_links" time="2.139"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4f885e3da4e17a0b733500f55cbe7d4c085717115cf6fabdcd9bd3dbc475f627/start: Internal Server Error (&quot;container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/4f885e3da4e17a0b733500f55cbe7d4c085717115cf6fabdcd9bd3dbc475f627/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:333: in test_connect_with_links
    container = self.create_and_start(
tests/integration/base.py:115: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4f885e3da4e17a0b733500f55cbe7d4c085717115cf6fabdcd9bd3dbc475f627/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_check_duplicate" time="1.964"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/create: Internal Server Error (&quot;the network name dockerpytest_120cc8c2cf4bab11 is already used&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/create

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:326: in test_create_check_duplicate
    net_id = self.client.create_network(net_name, check_duplicate=False)
docker/api/network.py:153: in create_network
    return self._result(res, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/create: Internal Server Error ("the network name dockerpytest_120cc8c2cf4bab11 is already used")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_internal_networks" time="2.012" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_ipv6_enabled" time="2.002"><failure message="AssertionError: assert False is True">tests/integration/api_network_test.py:445: in test_create_network_ipv6_enabled
    assert net['EnableIPv6'] is True
E   AssertionError: assert False is True</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_with_host_driver_fails" time="1.977" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_with_ipam_config" time="1.968"><failure message="AssertionError: assert [{'Gateway': ...2.28.0.0/16'}] == [{'AuxiliaryA...2.28.0.0/16'}]&#10;  At index 0 diff: {'Subnet': '172.28.0.0/16', 'Gateway': '172.28.5.254'} != {'Subnet': '172.28.0.0/16', 'IPRange': '172.28.5.0/24', 'Gateway': '172.28.5.254', 'AuxiliaryAddresses': {'a': '172.28.1.5', 'b': '172.28.1.6', 'c': '172.28.1.7'}}&#10;  Full diff:&#10;    [&#10;  -  {'AuxiliaryAddresses': {'a': '172.28.1.5',&#10;  -                          'b': '172.28.1.6',&#10;  -                          'c': '172.28.1.7'},&#10;  -   'Gateway': '172.28.5.254',...&#10;  &#10;  ...Full output truncated (7 lines hidden), use '-vv' to show">tests/integration/api_network_test.py:66: in test_create_network_with_ipam_config
    assert ipam['Config'] == [{
E   AssertionError: assert [{'Gateway': ...2.28.0.0/16'}] == [{'AuxiliaryA...2.28.0.0/16'}]
E     At index 0 diff: {'Subnet': '172.28.0.0/16', 'Gateway': '172.28.5.254'} != {'Subnet': '172.28.0.0/16', 'IPRange': '172.28.5.0/24', 'Gateway': '172.28.5.254', 'AuxiliaryAddresses': {'a': '172.28.1.5', 'b': '172.28.1.6', 'c': '172.28.1.7'}}
E     Full diff:
E       [
E     -  {'AuxiliaryAddresses': {'a': '172.28.1.5',
E     -                          'b': '172.28.1.6',
E     -                          'c': '172.28.1.7'},
E     -   'Gateway': '172.28.5.254',...
E     
E     ...Full output truncated (7 lines hidden), use '-vv' to show</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_with_labels" time="1.969" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_with_labels_wrong_type" time="1.972" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_remove_network_with_space_in_name" time="1.966" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_aliases" time="2.149"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/15794b94adf4f231ac4a12566c22c057d04ff1535abea6be962d185f56ec4a74/start: Internal Server Error (&quot;container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/15794b94adf4f231ac4a12566c22c057d04ff1535abea6be962d185f56ec4a74/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:192: in test_create_with_aliases
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/15794b94adf4f231ac4a12566c22c057d04ff1535abea6be962d185f56ec4a74/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_driveropt" time="2.153"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/dbfc711aef0e8ef04425d116e90d4495651141a9e789f9e0e3a3431c4993c7ee/start: Internal Server Error (&quot;container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/dbfc711aef0e8ef04425d116e90d4495651141a9e789f9e0e3a3431c4993c7ee/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:288: in test_create_with_driveropt
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/dbfc711aef0e8ef04425d116e90d4495651141a9e789f9e0e3a3431c4993c7ee/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_ipv4_address" time="2.144"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b6ae7004e5511cba4c25bc15b4326b7c9565f9faad1dac6cec385be8e43aa91a/start: Internal Server Error (&quot;container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b6ae7004e5511cba4c25bc15b4326b7c9565f9faad1dac6cec385be8e43aa91a/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:219: in test_create_with_ipv4_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b6ae7004e5511cba4c25bc15b4326b7c9565f9faad1dac6cec385be8e43aa91a/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_ipv6_address" time="2.148"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b4cdb2da6f3b15c52d5711b93d72f2f7ad17c2454b2f575c8575cc80233b7576/start: Internal Server Error (&quot;container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b4cdb2da6f3b15c52d5711b93d72f2f7ad17c2454b2f575c8575cc80233b7576/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:245: in test_create_with_ipv6_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b4cdb2da6f3b15c52d5711b93d72f2f7ad17c2454b2f575c8575cc80233b7576/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_linklocal_ips" time="2.104"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/ffc04033cb9d7fb46acbeddc71a4629872f902bdac60d29592e0eeec7d91b1d9/start: Internal Server Error (&quot;container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/ffc04033cb9d7fb46acbeddc71a4629872f902bdac60d29592e0eeec7d91b1d9/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:267: in test_create_with_linklocal_ips
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/ffc04033cb9d7fb46acbeddc71a4629872f902bdac60d29592e0eeec7d91b1d9/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_links" time="2.125"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/bbc4b53b997d8a6e793f5beaf65d003a670d09f6f7ad27bdf1f21aadfad4867a/start: Internal Server Error (&quot;container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/bbc4b53b997d8a6e793f5beaf65d003a670d09f6f7ad27bdf1f21aadfad4867a/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:299: in test_create_with_links
    container = self.create_and_start(
tests/integration/base.py:115: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/bbc4b53b997d8a6e793f5beaf65d003a670d09f6f7ad27bdf1f21aadfad4867a/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_inspect_network" time="1.973" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_list_networks" time="1.978" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_prune_networks" time="1.966" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_remove_network" time="1.968" /><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_configure_plugin" time="2.964"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:90: in test_configure_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_create_plugin" time="2.946"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/create?name=docker-sdk-py%2Fdummy: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/create?name=docker-sdk-py%2Fdummy

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:140: in test_create_plugin
    assert self.client.create_plugin(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:52: in create_plugin
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/create?name=docker-sdk-py%2Fdummy: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_disable_plugin" time="2.960"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:56: in test_disable_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_enable_plugin" time="2.963"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:47: in test_enable_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_force_remove_plugin" time="3.014"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:109: in test_force_remove_plugin
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_inspect_plugin" time="3.007"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:68: in test_inspect_plugin
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_install_plugin" time="2.959"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:120: in test_install_plugin
    prv = self.client.plugin_privileges(SSHFS)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_list_plugins" time="2.978"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:83: in test_list_plugins
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_plugin_privileges" time="3.036"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:75: in test_plugin_privileges
    prv = self.client.plugin_privileges(SSHFS)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_remove_plugin" time="2.957"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:104: in test_remove_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_plugin_test.PluginTest" name="test_upgrade_plugin" time="3.945"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:128: in test_upgrade_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_create_secret" time="3.930" /><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_create_secret_unicode_data" time="1.958" /><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_inspect_secret" time="1.963"><failure message="AssertionError: assert 'Version' in {'CreatedAt': '2021-02-23T01:48:54.178453025+01:00', 'ID': '265dd29c6e10f50f9b6f3b1a5', 'Spec': {'Driver': {'Name': 'file', 'Options': None}, 'Name': 'favorite_character'}, 'UpdatedAt': '2021-02-23T01:48:54.178453025+01:00'}">tests/integration/api_secret_test.py:58: in test_inspect_secret
    assert 'Version' in data
E   AssertionError: assert 'Version' in {'CreatedAt': '2021-02-23T01:48:54.178453025+01:00', 'ID': '265dd29c6e10f50f9b6f3b1a5', 'Spec': {'Driver': {'Name': 'file', 'Options': None}, 'Name': 'favorite_character'}, 'UpdatedAt': '2021-02-23T01:48:54.178453025+01:00'}</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_list_secrets" time="2.933" /><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_remove_secret" time="3.923" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_create_volume" time="2.002" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_create_volume_invalid_driver" time="1.959"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/volumes/create: Internal Server Error (&quot;volume perfectcherryblossom uses volume plugin invalid.driver but it could not be retrieved: no volume plugin with name invalid.driver available: required plugin missing&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/volumes/create

During handling of the above exception, another exception occurred:
tests/integration/api_volume_test.py:22: in test_create_volume_invalid_driver
    self.client.create_volume('perfectcherryblossom', driver_name)
docker/api/volume.py:89: in create_volume
    return self._result(self._post_json(url, data=data), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/volumes/create: Internal Server Error ("volume perfectcherryblossom uses volume plugin invalid.driver but it could not be retrieved: no volume plugin with name invalid.driver available: required plugin missing")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_force_remove_volume" time="2.029" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_inspect_nonexistent_volume" time="1.977" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_inspect_volume" time="1.993"><failure message="AssertionError: assert {'CreatedAt':...l/_data', ...} == {'CreatedAt':...l/_data', ...}&#10;  Omitting 6 identical items, use -vv to show&#10;  Differing items:&#10;  {'Options': None} != {'Options': {}}&#10;  Full diff:&#10;    {&#10;     'CreatedAt': '2021-02-23T01:49:10+01:00',&#10;     'Driver': 'local',...&#10;  &#10;  ...Full output truncated (10 lines hidden), use '-vv' to show">tests/integration/api_volume_test.py:38: in test_inspect_volume
    assert volume_info == result
E   AssertionError: assert {'CreatedAt':...l/_data', ...} == {'CreatedAt':...l/_data', ...}
E     Omitting 6 identical items, use -vv to show
E     Differing items:
E     {'Options': None} != {'Options': {}}
E     Full diff:
E       {
E        'CreatedAt': '2021-02-23T01:49:10+01:00',
E        'Driver': 'local',...
E     
E     ...Full output truncated (10 lines hidden), use '-vv' to show</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_list_volumes" time="1.987"><failure message="AssertionError: assert {'CreatedAt': '2021-02-23T01:49:12+01:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...} in [{'CreatedAt': '2021-02-23T01:42:48+01:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage...00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...}]">tests/integration/api_volume_test.py:31: in test_list_volumes
    assert volume_info in volumes
E   AssertionError: assert {'CreatedAt': '2021-02-23T01:49:12+01:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...} in [{'CreatedAt': '2021-02-23T01:42:48+01:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage...00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...}]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_prune_volumes" time="1.981" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_remove_nonexistent_volume" time="1.956" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_remove_volume" time="2.022" /><testcase classname="tests.integration.client_test.ClientTest" name="test_df" time="1.332" /><testcase classname="tests.integration.client_test.ClientTest" name="test_info" time="1.000" /><testcase classname="tests.integration.client_test.ClientTest" name="test_ping" time="0.002" /><testcase classname="tests.integration.client_test.ClientTest" name="test_version" time="1.009" /><testcase classname="tests.integration.client_test.CancellableEventsTest" name="test_cancel_events" time="2.004" /><testcase classname="tests.integration.context_api_test.ContextLifecycleTest" name="test_context_remove" time="2.047" /><testcase classname="tests.integration.context_api_test.ContextLifecycleTest" name="test_lifecycle" time="1.983" /><testcase classname="tests.integration.context_api_test.ContextLifecycleTest" name="test_load_context_without_orchestrator" time="1.963" /><testcase classname="tests.integration.errors_test.ErrorsTest" name="test_api_error_parses_json" time="2.186"><failure message="AssertionError: assert 'You cannot remove a running container' in 'cannot remove container a6c93fe92dda88c3a5d0b8a5e90836868ba256439244a12ae749d7951fbdde44 as it is running - running or paused containers cannot be removed without force: container state improper'">tests/integration/errors_test.py:13: in test_api_error_parses_json
    assert 'You cannot remove a running container' in explanation
E   AssertionError: assert 'You cannot remove a running container' in 'cannot remove container a6c93fe92dda88c3a5d0b8a5e90836868ba256439244a12ae749d7951fbdde44 as it is running - running or paused containers cannot be removed without force: container state improper'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_get" time="2.369"><failure message="AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'&#10;  - alpine&#10;  + docker.io/library/alpine:latest">tests/integration/models_containers_test.py:189: in test_get
    assert client.containers.get(container.id).attrs[
E   AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'
E     - alpine
E     + docker.io/library/alpine:latest</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_list" time="2.375"><failure message="AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'&#10;  - alpine&#10;  + docker.io/library/alpine:latest">tests/integration/models_containers_test.py:202: in test_list
    assert container.attrs['Config']['Image'] == 'alpine'
E   AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'
E     - alpine
E     + docker.io/library/alpine:latest</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_list_sparse" time="2.198"><failure message="AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'&#10;  - alpine&#10;  + docker.io/library/alpine:latest">tests/integration/models_containers_test.py:220: in test_list_sparse
    assert container.attrs['Image'] == 'alpine'
E   AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'
E     - alpine
E     + docker.io/library/alpine:latest</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run" time="2.517" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_detach" time="2.253"><failure message="AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'&#10;  - alpine&#10;  + docker.io/library/alpine:latest">tests/integration/models_containers_test.py:26: in test_run_detach
    assert container.attrs['Config']['Image'] == "alpine"
E   AssertionError: assert 'docker.io/li...alpine:latest' == 'alpine'
E     - alpine
E     + docker.io/library/alpine:latest</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_auto_remove" time="4.466" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_auto_remove_error" time="4.396"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/6508498c1255d29ee350e2148a43ccd406227f74bf9463205c9cd64d4c5bf857/json: Not Found (&quot;no container with name or ID 6508498c1255d29ee350e2148a43ccd406227f74bf9463205c9cd64d4c5bf857 found: no such container&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/6508498c1255d29ee350e2148a43ccd406227f74bf9463205c9cd64d4c5bf857/json

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:139: in test_run_with_auto_remove_error
    client.containers.run(
docker/models/containers.py:827: in run
    out = container.logs(
docker/models/containers.py:306: in logs
    return self.client.api.logs(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:871: in logs
    output = self._get_result(container, stream, res)
docker/api/client.py:486: in _get_result
    return self._get_result_tty(stream, res, self._check_is_tty(container))
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/client.py:482: in _check_is_tty
    cont = self.inspect_container(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:773: in inspect_container
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/6508498c1255d29ee350e2148a43ccd406227f74bf9463205c9cd64d4c5bf857/json: Not Found ("no container with name or ID 6508498c1255d29ee350e2148a43ccd406227f74bf9463205c9cd64d4c5bf857 found: no such container")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_error" time="2.516" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_image_that_does_not_exist" time="1.953"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/create: Not Found (&quot;unable to find a name and tag match for dockerpytest_does_not_exist in repotags: no such image&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:41: in test_run_with_image_that_does_not_exist
    client.containers.run("dockerpytest_does_not_exist")
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/create: Not Found ("unable to find a name and tag match for dockerpytest_does_not_exist in repotags: no such image")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_json_file_driver" time="2.421" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_named_volume" time="2.813" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_network" time="2.165"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/292f31f7350d7275fcb1665f403d5ae4babf10b8418efa503f4c5efc052b5498/start: Internal Server Error (&quot;container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting &quot;/home/riyad/.config/cni/net.d&quot; to rootfs at &quot;/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d&quot; caused: operation not permitted: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/292f31f7350d7275fcb1665f403d5ae4babf10b8418efa503f4c5efc052b5498/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:95: in test_run_with_network
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/292f31f7350d7275fcb1665f403d5ae4babf10b8418efa503f4c5efc052b5498/start: Internal Server Error ("container_linux.go:370: starting container process caused: process_linux.go:459: container init caused: rootfs_linux.go:59: mounting "/home/riyad/.config/cni/net.d" to rootfs at "/home/riyad/podman/storage/overlay/de57e06c5e81638dcf7106fff9d3c80358b18c676998c6b38b27a148b4e27683/merged/etc/cni/net.d" caused: operation not permitted: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_none_driver" time="2.158" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_proxy_config" time="2.386" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_streamed_logs" time="2.393" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_streamed_logs_and_cancel" time="2.376" /><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_volume" time="2.728" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_commit" time="3.437" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_create_with_volume_driver" time="2.100"><failure message="AssertionError: assert '' == 'foo'&#10;  - foo">tests/integration/models_containers_test.py:456: in test_create_with_volume_driver
    assert container.attrs['HostConfig']['VolumeDriver'] == 'foo'
E   AssertionError: assert '' == 'foo'
E     - foo</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_diff" time="2.284"><failure message="AssertionError: assert [{'Kind': 0, ...th': '/test'}] == [{'Kind': 1, 'Path': '/test'}]&#10;  At index 0 diff: {'Path': '/etc', 'Kind': 0} != {'Path': '/test', 'Kind': 1}&#10;  Left contains one more item: {'Kind': 1, 'Path': '/test'}&#10;  Full diff:&#10;  - [{'Kind': 1, 'Path': '/test'}]&#10;  + [{'Kind': 0, 'Path': '/etc'}, {'Kind': 1, 'Path': '/test'}]">tests/integration/models_containers_test.py:251: in test_diff
    assert container.diff() == [{'Path': '/test', 'Kind': 1}]
E   AssertionError: assert [{'Kind': 0, ...th': '/test'}] == [{'Kind': 1, 'Path': '/test'}]
E     At index 0 diff: {'Path': '/etc', 'Kind': 0} != {'Path': '/test', 'Kind': 1}
E     Left contains one more item: {'Kind': 1, 'Path': '/test'}
E     Full diff:
E     - [{'Kind': 1, 'Path': '/test'}]
E     + [{'Kind': 0, 'Path': '/etc'}, {'Kind': 1, 'Path': '/test'}]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_exec_run_failed" time="2.417"><failure message="AssertionError: assert 127 == 126&#10;  +127&#10;  -126">tests/integration/models_containers_test.py:270: in test_exec_run_failed
    assert exec_output[0] == 126
E   AssertionError: assert 127 == 126
E     +127
E     -126</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_exec_run_success" time="2.485" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_kill" time="2.208"><failure message="AssertionError: assert 'stopped' == 'exited'&#10;  - exited&#10;  + stopped">tests/integration/models_containers_test.py:281: in test_kill
    assert container.status == 'exited'
E   AssertionError: assert 'stopped' == 'exited'
E     - exited
E     + stopped</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_logs" time="2.295" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_pause" time="2.443" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_ports_target_list" time="2.288" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_ports_target_none" time="2.316" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_ports_target_tuple" time="2.276" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_remove" time="2.254" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_rename" time="2.301" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_restart" time="12.533" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_start" time="2.326" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_stats" time="2.294" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_stop" time="2.262" /><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_top" time="2.395"><failure message="AssertionError: assert 'sleep 60' in ['    1 root      0:00 sleep 60']">tests/integration/models_containers_test.py:425: in test_top
    assert 'sleep 60' in top['Processes'][0]
E   AssertionError: assert 'sleep 60' in ['    1 root      0:00 sleep 60']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_update" time="2.301"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/3fe52e9b62bb7859c0687a9e53034a593f1729da863fc23c3f253992a8fec108/update: Not Found (&quot;b'Not Found'&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/3fe52e9b62bb7859c0687a9e53034a593f1729da863fc23c3f253992a8fec108/update

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:433: in test_update
    container.update(cpu_shares=3)
docker/models/containers.py:489: in update
    return self.client.api.update_container(self.id, **kwargs)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1270: in update_container
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/3fe52e9b62bb7859c0687a9e53034a593f1729da863fc23c3f253992a8fec108/update: Not Found ("b'Not Found'")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_wait" time="2.394" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_build" time="2.585" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_build_with_error" time="2.464"><failure message="AssertionError: assert &quot;The command '/bin/sh -c exit 1' returned a non-zero code: 1&quot; in 'docker.errors.BuildError: error building at STEP &quot;RUN exit 1&quot;: exit status 1'&#10; +  where 'docker.errors.BuildError: error building at STEP &quot;RUN exit 1&quot;: exit status 1' = &lt;bound method ExceptionInfo.exconly of &lt;ExceptionInfo BuildError('error building at STEP &quot;RUN exit 1&quot;: exit status 1\n') tblen=2&gt;&gt;()&#10; +    where &lt;bound method ExceptionInfo.exconly of &lt;ExceptionInfo BuildError('error building at STEP &quot;RUN exit 1&quot;: exit status 1\n') tblen=2&gt;&gt; = &lt;ExceptionInfo BuildError('error building at STEP &quot;RUN exit 1&quot;: exit status 1\n') tblen=2&gt;.exconly">tests/integration/models_images_test.py:30: in test_build_with_error
    assert (
E   AssertionError: assert "The command '/bin/sh -c exit 1' returned a non-zero code: 1" in 'docker.errors.BuildError: error building at STEP "RUN exit 1": exit status 1'
E    +  where 'docker.errors.BuildError: error building at STEP "RUN exit 1": exit status 1' = &lt;bound method ExceptionInfo.exconly of &lt;ExceptionInfo BuildError('error building at STEP "RUN exit 1": exit status 1\n') tblen=2&gt;&gt;()
E    +    where &lt;bound method ExceptionInfo.exconly of &lt;ExceptionInfo BuildError('error building at STEP "RUN exit 1": exit status 1\n') tblen=2&gt;&gt; = &lt;ExceptionInfo BuildError('error building at STEP "RUN exit 1": exit status 1\n') tblen=2&gt;.exconly</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_build_with_multiple_success" time="3.628" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_build_with_success_build_output" time="2.868" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_list" time="4.612" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_list_with_repository" time="4.637" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_load_error" time="1.963"><failure message="Failed: DID NOT RAISE &lt;class 'docker.errors.ImageLoadError'&gt;">tests/integration/models_images_test.py:98: in test_load_error
    client.images.load('abc')
E   Failed: DID NOT RAISE &lt;class 'docker.errors.ImageLoadError'&gt;</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_pull" time="4.551"><failure message="AssertionError: assert 'alpine:latest' in ['docker.io/library/alpine:latest', 'docker.io/library/alpine:3.13']">tests/integration/models_images_test.py:71: in test_pull
    assert 'alpine:latest' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:latest' in ['docker.io/library/alpine:latest', 'docker.io/library/alpine:3.13']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_pull_multiple" time="5.175"><failure message="TypeError: argument of type 'NoneType' is not iterable">tests/integration/models_images_test.py:91: in test_pull_multiple
    assert any([
tests/integration/models_images_test.py:91: in &lt;listcomp&gt;
    assert any([
E   TypeError: argument of type 'NoneType' is not iterable</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_pull_with_sha" time="4.764"><failure message="AssertionError: assert 'hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7' in ['docker.io/library/hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7', 'docker.io/library/hello-world@sha256:8072a54ebb3bc136150e2f2860f00a7bf45f13eeb917cca2430fcd0054c8e51b']">tests/integration/models_images_test.py:85: in test_pull_with_sha
    assert image_ref in image.attrs['RepoDigests']
E   AssertionError: assert 'hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7' in ['docker.io/library/hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7', 'docker.io/library/hello-world@sha256:8072a54ebb3bc136150e2f2860f00a7bf45f13eeb917cca2430fcd0054c8e51b']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_pull_with_tag" time="4.550"><failure message="AssertionError: assert 'alpine:3.10' in ['docker.io/library/alpine:3.10', 'docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c']">tests/integration/models_images_test.py:76: in test_pull_with_tag
    assert 'alpine:3.10' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:3.10' in ['docker.io/library/alpine:3.10', 'docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_save_and_load" time="2.128" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_save_and_load_repo_name" time="2.021"><failure message="docker.errors.InvalidArgument: dockerpytest_81edc204670b48d5:latest is not a valid tag for this image">tests/integration/models_images_test.py:122: in test_save_and_load_repo_name
    stream = image.save(named='{}:latest'.format(additional_tag))
docker/models/images.py:98: in save
    raise InvalidArgument(
E   docker.errors.InvalidArgument: dockerpytest_81edc204670b48d5:latest is not a valid tag for this image</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_save_name_error" time="2.020" /><testcase classname="tests.integration.models_images_test.ImageTest" name="test_tag_and_remove" time="4.461" /><testcase classname="tests.integration.models_networks_test.NetworkCollectionTest" name="test_create" time="1.978" /><testcase classname="tests.integration.models_networks_test.NetworkCollectionTest" name="test_get" time="1.990" /><testcase classname="tests.integration.models_networks_test.NetworkCollectionTest" name="test_list_remove" time="2.049" /><testcase classname="tests.integration.models_networks_test.NetworkTest" name="test_connect_disconnect" time="2.099"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/de9edefb505cd96540cce1985ec6871655b837fbb8a8a1b40d279f82739d2ef3/connect: Internal Server Error (&quot;network disconnect is not enabled for rootless containers&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/de9edefb505cd96540cce1985ec6871655b837fbb8a8a1b40d279f82739d2ef3/connect

During handling of the above exception, another exception occurred:
tests/integration/models_networks_test.py:59: in test_connect_disconnect
    network.connect(container)
docker/models/networks.py:58: in connect
    return self.client.api.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/de9edefb505cd96540cce1985ec6871655b837fbb8a8a1b40d279f82739d2ef3/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_resources_test.ModelTest" name="test_reload" time="2.423" /><testcase classname="tests.integration.models_volumes_test.VolumesTest" name="test_create_get" time="1.977" /><testcase classname="tests.integration.models_volumes_test.VolumesTest" name="test_list_remove" time="1.989"><failure message="AssertionError: assert &lt;Volume: dockerpyte&gt; in []&#10; +  where [] = &lt;bound method VolumeCollection.list of &lt;docker.models.volumes.VolumeCollection object at 0x7fb33a6141c0&gt;&gt;(filters={'name': 'dockerpytest_'})&#10; +    where &lt;bound method VolumeCollection.list of &lt;docker.models.volumes.VolumeCollection object at 0x7fb33a6141c0&gt;&gt; = &lt;docker.models.volumes.VolumeCollection object at 0x7fb33a6141c0&gt;.list&#10; +      where &lt;docker.models.volumes.VolumeCollection object at 0x7fb33a6141c0&gt; = &lt;docker.client.DockerClient object at 0x7fb33a614970&gt;.volumes">tests/integration/models_volumes_test.py:26: in test_list_remove
    assert volume in client.volumes.list(filters={'name': 'dockerpytest_'})
E   AssertionError: assert &lt;Volume: dockerpyte&gt; in []
E    +  where [] = &lt;bound method VolumeCollection.list of &lt;docker.models.volumes.VolumeCollection object at 0x7fb33a6141c0&gt;&gt;(filters={'name': 'dockerpytest_'})
E    +    where &lt;bound method VolumeCollection.list of &lt;docker.models.volumes.VolumeCollection object at 0x7fb33a6141c0&gt;&gt; = &lt;docker.models.volumes.VolumeCollection object at 0x7fb33a6141c0&gt;.list
E    +      where &lt;docker.models.volumes.VolumeCollection object at 0x7fb33a6141c0&gt; = &lt;docker.client.DockerClient object at 0x7fb33a614970&gt;.volumes</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.regression_test.TestRegressions" name="test_443_handle_nonchunked_response_in_stream" time="1.971"><failure message="Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;">tests/integration/regression_test.py:16: in test_443_handle_nonchunked_response_in_stream
    pass
E   Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.regression_test.TestRegressions" name="test_542_truncate_ids_client_side" time="2.112" /><testcase classname="tests.integration.regression_test.TestRegressions" name="test_647_support_doubleslash_in_image_names" time="2.005" /><testcase classname="tests.integration.regression_test.TestRegressions" name="test_649_handle_timeout_value_none" time="2.387" /><testcase classname="tests.integration.regression_test.TestRegressions" name="test_715_handle_user_param_as_int_value" time="2.151" /><testcase classname="tests.integration.regression_test.TestRegressions" name="test_792_explicit_port_protocol" time="2.307" /><testcase classname="tests.integration.credentials.utils_test" name="test_create_environment_dict" time="0.004" /></testsuite></testsuites>