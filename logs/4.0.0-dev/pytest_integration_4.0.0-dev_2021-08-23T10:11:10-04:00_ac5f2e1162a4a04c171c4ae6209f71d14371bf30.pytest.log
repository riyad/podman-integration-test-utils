============================= test session starts ==============================
platform linux -- Python 3.9.5, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- /home/riyad/.virtualenvs/docker-py/bin/python
cachedir: .pytest_cache
rootdir: /home/riyad/src/docker-py, configfile: pytest_podman_apiv2.ini, testpaths: tests/integration/
plugins: cov-2.6.1, timeout-1.4.2
collecting ... collected 415 items / 149 deselected / 266 selected

tests/integration/api_build_test.py::BuildTest::test_build_container_with_target PASSED [  0%]
tests/integration/api_build_test.py::BuildTest::test_build_from_stringio PASSED [  0%]
tests/integration/api_build_test.py::BuildTest::test_build_gzip_custom_encoding PASSED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_gzip_encoding PASSED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_abs_dockerfile PASSED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_dockerfile PASSED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_nested_dockerfile PASSED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_invalid_platform PASSED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_isolation PASSED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_labels FAILED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_out_of_context_dockerfile PASSED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_shmsize PASSED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_squash FAILED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_stderr_data FAILED [  5%]
tests/integration/api_build_test.py::BuildTest::test_build_streaming PASSED [  5%]
tests/integration/api_build_test.py::BuildTest::test_build_with_buildargs PASSED [  6%]
tests/integration/api_build_test.py::BuildTest::test_build_with_cache_from FAILED [  6%]
tests/integration/api_build_test.py::BuildTest::test_build_with_dockerfile_empty_lines PASSED [  6%]
tests/integration/api_build_test.py::BuildTest::test_build_with_dockerignore PASSED [  7%]
tests/integration/api_build_test.py::BuildTest::test_build_with_extra_hosts FAILED [  7%]
tests/integration/api_build_test.py::BuildTest::test_build_with_network_mode FAILED [  7%]
tests/integration/api_build_test.py::BuildTest::test_build_with_proxy PASSED [  8%]
tests/integration/api_build_test.py::BuildTest::test_build_with_proxy_and_buildargs PASSED [  8%]
tests/integration/api_build_test.py::BuildTest::test_prune_builds XFAIL  [  9%]
tests/integration/api_client_test.py::InformationTest::test_info PASSED  [  9%]
tests/integration/api_client_test.py::InformationTest::test_version PASSED [  9%]
tests/integration/api_client_test.py::AutoDetectVersionTest::test_client_init PASSED [ 10%]
tests/integration/api_client_test.py::ConnectionTimeoutTest::test_timeout PASSED [ 10%]
tests/integration/api_client_test.py::UnixconnTest::test_resource_warnings PASSED [ 10%]
tests/integration/api_container_test.py::ListContainersTest::test_list_containers PASSED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create PASSED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_container_with_volumes_from PASSED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_auto_remove PASSED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_cpu_rt_options XPASS [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_device_cgroup_rules FAILED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_environment_variable_no_value FAILED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_host_pid_mode PASSED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_init PASSED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_isolation FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_links FAILED [ 15%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_mac_address FAILED [ 15%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_memory_constraints_with_int PASSED [ 15%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_memory_constraints_with_str PASSED [ 16%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_restart_policy FAILED [ 16%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_stop_timeout PASSED [ 16%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_storage_opt XFAIL [ 17%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_tmpfs FAILED [ 17%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_uts_mode PASSED [ 18%]
tests/integration/api_container_test.py::CreateContainerTest::test_group_id_ints PASSED [ 18%]
tests/integration/api_container_test.py::CreateContainerTest::test_group_id_strings PASSED [ 18%]
tests/integration/api_container_test.py::CreateContainerTest::test_invalid_log_driver_raises_exception FAILED [ 19%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_log_driver_and_log_opt FAILED [ 19%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_no_config_specified FAILED [ 19%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_no_log_driver_specified FAILED [ 20%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_binds_ro PASSED [ 20%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_binds_rw PASSED [ 21%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_mounts PASSED [ 21%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_mounts_ro FAILED [ 21%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_volume_mount PASSED [ 22%]
tests/integration/api_container_test.py::ArchiveTest::test_copy_directory_to_container PASSED [ 22%]
tests/integration/api_container_test.py::ArchiveTest::test_copy_file_to_container FAILED [ 22%]
tests/integration/api_container_test.py::ArchiveTest::test_get_file_archive_from_container PASSED [ 23%]
tests/integration/api_container_test.py::ArchiveTest::test_get_file_stat_from_container PASSED [ 23%]
tests/integration/api_container_test.py::RenameContainerTest::test_rename_container PASSED [ 24%]
tests/integration/api_container_test.py::StartContainerTest::test_run_shlex_commands PASSED [ 24%]
tests/integration/api_container_test.py::StartContainerTest::test_start_container PASSED [ 24%]
tests/integration/api_container_test.py::StartContainerTest::test_start_container_with_dict_instead_of_id PASSED [ 25%]
tests/integration/api_container_test.py::WaitTest::test_wait PASSED      [ 25%]
tests/integration/api_container_test.py::WaitTest::test_wait_with_condition PASSED [ 25%]
tests/integration/api_container_test.py::WaitTest::test_wait_with_dict_instead_of_id PASSED [ 26%]
tests/integration/api_container_test.py::LogsTest::test_logs PASSED      [ 26%]
tests/integration/api_container_test.py::LogsTest::test_logs_streaming_and_follow PASSED [ 27%]
tests/integration/api_container_test.py::LogsTest::test_logs_streaming_and_follow_and_cancel FAILED [ 27%]
tests/integration/api_container_test.py::LogsTest::test_logs_tail_option PASSED [ 27%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_dict_instead_of_id PASSED [ 28%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_tail_0 PASSED [ 28%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_until PASSED [ 28%]
tests/integration/api_container_test.py::DiffTest::test_diff PASSED      [ 29%]
tests/integration/api_container_test.py::DiffTest::test_diff_with_dict_instead_of_id PASSED [ 29%]
tests/integration/api_container_test.py::StopTest::test_stop PASSED      [ 30%]
tests/integration/api_container_test.py::StopTest::test_stop_with_dict_instead_of_id PASSED [ 30%]
tests/integration/api_container_test.py::KillTest::test_kill PASSED      [ 30%]
tests/integration/api_container_test.py::KillTest::test_kill_with_dict_instead_of_id PASSED [ 31%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal PASSED [ 31%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal_integer PASSED [ 31%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal_name PASSED [ 32%]
tests/integration/api_container_test.py::PortTest::test_port PASSED      [ 32%]
tests/integration/api_container_test.py::ContainerTopTest::test_top XFAIL [ 33%]
tests/integration/api_container_test.py::ContainerTopTest::test_top_with_psargs XFAIL [ 33%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart PASSED [ 33%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart_with_dict_instead_of_id PASSED [ 34%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart_with_low_timeout PASSED [ 34%]
tests/integration/api_container_test.py::RemoveContainerTest::test_remove PASSED [ 34%]
tests/integration/api_container_test.py::RemoveContainerTest::test_remove_with_dict_instead_of_id PASSED [ 35%]
tests/integration/api_container_test.py::AttachContainerTest::test_attach_no_stream FAILED [ 35%]
tests/integration/api_container_test.py::AttachContainerTest::test_attach_stream_and_cancel PASSED [ 36%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_arg PASSED [ 36%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_config_file PASSED [ 36%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_default PASSED [ 37%]
tests/integration/api_container_test.py::AttachContainerTest::test_run_container_reading_socket PASSED [ 37%]
tests/integration/api_container_test.py::AttachContainerTest::test_run_container_streaming PASSED [ 37%]
tests/integration/api_container_test.py::PauseTest::test_pause_unpause PASSED [ 38%]
tests/integration/api_container_test.py::PruneTest::test_prune_containers PASSED [ 38%]
tests/integration/api_container_test.py::GetContainerStatsTest::test_get_container_stats_no_stream PASSED [ 39%]
tests/integration/api_container_test.py::ContainerUpdateTest::test_restart_policy_update FAILED [ 39%]
tests/integration/api_container_test.py::ContainerUpdateTest::test_update_container FAILED [ 39%]
tests/integration/api_container_test.py::ContainerCPUTest::test_container_cpu_shares PASSED [ 40%]
tests/integration/api_container_test.py::ContainerCPUTest::test_container_cpuset PASSED [ 40%]
tests/integration/api_container_test.py::ContainerCPUTest::test_create_with_runtime FAILED [ 40%]
tests/integration/api_exec_test.py::ExecTest::test_detach_with_config_file FAILED [ 41%]
tests/integration/api_exec_test.py::ExecTest::test_detach_with_default PASSED [ 41%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_as_root PASSED [ 42%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_as_user PASSED [ 42%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_streaming PASSED [ 42%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_string PASSED [ 43%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_with_env PASSED [ 43%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_with_workdir PASSED [ 43%]
tests/integration/api_exec_test.py::ExecTest::test_exec_inspect PASSED   [ 44%]
tests/integration/api_exec_test.py::ExecTest::test_exec_start_detached FAILED [ 44%]
tests/integration/api_exec_test.py::ExecTest::test_exec_start_socket FAILED [ 45%]
tests/integration/api_exec_test.py::ExecTest::test_execute_command PASSED [ 45%]
tests/integration/api_exec_test.py::ExecTest::test_execute_command_with_proxy_env PASSED [ 45%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_no_stream_demux PASSED [ 46%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_no_stream_no_demux PASSED [ 46%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_stream_demux PASSED [ 46%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_stream_no_demux PASSED [ 47%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_no_stream_demux FAILED [ 47%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_no_stream_no_demux FAILED [ 48%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_stream_demux FAILED [ 48%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_stream_no_demux FAILED [ 48%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_fails PASSED [ 49%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_passes PASSED [ 49%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_shell_command PASSED [ 50%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_start_period PASSED [ 50%]
tests/integration/api_image_test.py::ListImagesTest::test_images PASSED  [ 50%]
tests/integration/api_image_test.py::ListImagesTest::test_images_quiet PASSED [ 51%]
tests/integration/api_image_test.py::PullImageTest::test_pull PASSED     [ 51%]
tests/integration/api_image_test.py::PullImageTest::test_pull_invalid_platform FAILED [ 51%]
tests/integration/api_image_test.py::PullImageTest::test_pull_streaming PASSED [ 52%]
tests/integration/api_image_test.py::CommitTest::test_commit FAILED      [ 52%]
tests/integration/api_image_test.py::CommitTest::test_commit_with_changes FAILED [ 53%]
tests/integration/api_image_test.py::RemoveImageTest::test_remove PASSED [ 53%]
tests/integration/api_image_test.py::ImportImageTest::test_get_load_image FAILED [ 53%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_bytes PASSED [ 54%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_file PASSED [ 54%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_stream PASSED [ 54%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_url SKIPPED [ 55%]
tests/integration/api_image_test.py::ImportImageTest::test_import_image_from_data_with_changes PASSED [ 55%]
tests/integration/api_image_test.py::ImportImageTest::test_import_image_with_changes PASSED [ 56%]
tests/integration/api_image_test.py::PruneImagesTest::test_prune_images FAILED [ 56%]
tests/integration/api_image_test.py::SaveLoadImagesTest::test_get_image_load_image FAILED [ 56%]
tests/integration/api_image_test.py::InspectDistributionTest::test_inspect_distribution FAILED [ 57%]
tests/integration/api_network_test.py::TestNetworks::test_connect_and_disconnect_container PASSED [ 57%]
tests/integration/api_network_test.py::TestNetworks::test_connect_and_force_disconnect_container PASSED [ 57%]
tests/integration/api_network_test.py::TestNetworks::test_connect_on_container_create PASSED [ 58%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_aliases PASSED [ 58%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_ipv4_address FAILED [ 59%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_ipv6_address FAILED [ 59%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_links FAILED [ 59%]
tests/integration/api_network_test.py::TestNetworks::test_create_check_duplicate FAILED [ 60%]
tests/integration/api_network_test.py::TestNetworks::test_create_internal_networks PASSED [ 60%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_ipv6_enabled FAILED [ 60%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_host_driver_fails PASSED [ 61%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_ipam_config FAILED [ 61%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_labels PASSED [ 62%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_labels_wrong_type PASSED [ 62%]
tests/integration/api_network_test.py::TestNetworks::test_create_remove_network_with_space_in_name PASSED [ 62%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_aliases PASSED [ 63%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_driveropt FAILED [ 63%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_ipv4_address FAILED [ 63%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_ipv6_address FAILED [ 64%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_linklocal_ips FAILED [ 64%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_links FAILED [ 65%]
tests/integration/api_network_test.py::TestNetworks::test_inspect_network PASSED [ 65%]
tests/integration/api_network_test.py::TestNetworks::test_list_networks PASSED [ 65%]
tests/integration/api_network_test.py::TestNetworks::test_prune_networks PASSED [ 66%]
tests/integration/api_network_test.py::TestNetworks::test_remove_network PASSED [ 66%]
tests/integration/api_secret_test.py::SecretAPITest::test_create_secret ERROR [ 66%]
tests/integration/api_secret_test.py::SecretAPITest::test_create_secret_unicode_data ERROR [ 67%]
tests/integration/api_secret_test.py::SecretAPITest::test_inspect_secret ERROR [ 67%]
tests/integration/api_secret_test.py::SecretAPITest::test_list_secrets ERROR [ 68%]
tests/integration/api_secret_test.py::SecretAPITest::test_remove_secret ERROR [ 68%]
tests/integration/api_volume_test.py::TestVolumes::test_create_volume PASSED [ 68%]
tests/integration/api_volume_test.py::TestVolumes::test_create_volume_invalid_driver FAILED [ 69%]
tests/integration/api_volume_test.py::TestVolumes::test_force_remove_volume PASSED [ 69%]
tests/integration/api_volume_test.py::TestVolumes::test_inspect_nonexistent_volume PASSED [ 69%]
tests/integration/api_volume_test.py::TestVolumes::test_inspect_volume FAILED [ 70%]
tests/integration/api_volume_test.py::TestVolumes::test_list_volumes FAILED [ 70%]
tests/integration/api_volume_test.py::TestVolumes::test_prune_volumes PASSED [ 71%]
tests/integration/api_volume_test.py::TestVolumes::test_remove_nonexistent_volume PASSED [ 71%]
tests/integration/api_volume_test.py::TestVolumes::test_remove_volume PASSED [ 71%]
tests/integration/client_test.py::ClientTest::test_df PASSED             [ 72%]
tests/integration/client_test.py::ClientTest::test_info PASSED           [ 72%]
tests/integration/client_test.py::ClientTest::test_ping PASSED           [ 72%]
tests/integration/client_test.py::ClientTest::test_version PASSED        [ 73%]
tests/integration/client_test.py::CancellableEventsTest::test_cancel_events PASSED [ 73%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_context_remove PASSED [ 74%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_lifecycle PASSED [ 74%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_load_context_without_orchestrator PASSED [ 74%]
tests/integration/errors_test.py::ErrorsTest::test_api_error_parses_json FAILED [ 75%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_get FAILED [ 75%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_list FAILED [ 75%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_list_sparse FAILED [ 76%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run PASSED [ 76%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_detach FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_auto_remove PASSED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_auto_remove_error FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_error PASSED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_image_that_does_not_exist FAILED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_json_file_driver PASSED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_named_volume PASSED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_network PASSED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_none_driver PASSED [ 80%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_proxy_config FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_streamed_logs FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_streamed_logs_and_cancel FAILED [ 81%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_volume PASSED [ 81%]
tests/integration/models_containers_test.py::ContainerTest::test_commit PASSED [ 81%]
tests/integration/models_containers_test.py::ContainerTest::test_create_with_volume_driver FAILED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_diff FAILED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_exec_run_failed FAILED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_exec_run_success PASSED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_kill PASSED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_logs PASSED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_pause PASSED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_list PASSED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_none PASSED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_tuple PASSED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_remove PASSED [ 86%]
tests/integration/models_containers_test.py::ContainerTest::test_rename PASSED [ 86%]
tests/integration/models_containers_test.py::ContainerTest::test_restart PASSED [ 86%]
tests/integration/models_containers_test.py::ContainerTest::test_start PASSED [ 87%]
tests/integration/models_containers_test.py::ContainerTest::test_stats PASSED [ 87%]
tests/integration/models_containers_test.py::ContainerTest::test_stop PASSED [ 87%]
tests/integration/models_containers_test.py::ContainerTest::test_top FAILED [ 88%]
tests/integration/models_containers_test.py::ContainerTest::test_update FAILED [ 88%]
tests/integration/models_containers_test.py::ContainerTest::test_wait PASSED [ 89%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build PASSED [ 89%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_error FAILED [ 89%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_multiple_success PASSED [ 90%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_success_build_output PASSED [ 90%]
tests/integration/models_images_test.py::ImageCollectionTest::test_list PASSED [ 90%]
tests/integration/models_images_test.py::ImageCollectionTest::test_list_with_repository PASSED [ 91%]
tests/integration/models_images_test.py::ImageCollectionTest::test_load_error FAILED [ 91%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull FAILED [ 92%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_multiple FAILED [ 92%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_with_sha FAILED [ 92%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_with_tag FAILED [ 93%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_and_load PASSED [ 93%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_and_load_repo_name FAILED [ 93%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_name_error PASSED [ 94%]
tests/integration/models_images_test.py::ImageTest::test_tag_and_remove PASSED [ 94%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_create PASSED [ 95%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_get PASSED [ 95%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_list_remove PASSED [ 95%]
tests/integration/models_networks_test.py::NetworkTest::test_connect_disconnect PASSED [ 96%]
tests/integration/models_resources_test.py::ModelTest::test_reload PASSED [ 96%]
tests/integration/models_volumes_test.py::VolumesTest::test_create_get PASSED [ 96%]
tests/integration/models_volumes_test.py::VolumesTest::test_list_remove FAILED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_443_handle_nonchunked_response_in_stream FAILED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_542_truncate_ids_client_side PASSED [ 98%]
tests/integration/regression_test.py::TestRegressions::test_647_support_doubleslash_in_image_names PASSED [ 98%]
tests/integration/regression_test.py::TestRegressions::test_649_handle_timeout_value_none PASSED [ 98%]
tests/integration/regression_test.py::TestRegressions::test_715_handle_user_param_as_int_value PASSED [ 99%]
tests/integration/regression_test.py::TestRegressions::test_792_explicit_port_protocol PASSED [ 99%]
tests/integration/credentials/utils_test.py::test_create_environment_dict PASSED [100%]

==================================== ERRORS ====================================
______________ ERROR at setup of SecretAPITest.test_create_secret ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:15: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:94: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of SecretAPITest.test_create_secret_unicode_data ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:15: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:94: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ ERROR at setup of SecretAPITest.test_inspect_secret ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:15: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:94: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of SecretAPITest.test_list_secrets _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:15: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:94: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of SecretAPITest.test_remove_secret ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:15: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:94: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
=================================== FAILURES ===================================
_________________________ BuildTest.test_build_labels __________________________
tests/integration/api_build_test.py:211: in test_build_labels
    assert info['Config']['Labels'] == labels
E   AssertionError: assert {'io.buildah.... 'test': 'OK'} == {'test': 'OK'}
E     Omitting 1 identical items, use -vv to show
E     Left contains 1 more item:
E     {'io.buildah.version': '1.22.0'}
E     Full diff:
E     - {'test': 'OK'}
E     + {'io.buildah.version': '1.22.0', 'test': 'OK'}
_________________________ BuildTest.test_build_squash __________________________
tests/integration/api_build_test.py:370: in test_build_squash
    assert len(non_squashed['RootFS']['Layers']) == 4
E   AssertionError: assert 2 == 4
E     +2
E     -4
_______________________ BuildTest.test_build_stderr_data _______________________
tests/integration/api_build_test.py:390: in test_build_stderr_data
    assert any([line == expected for line in lines])
E   AssertionError: assert False
E    +  where False = any([False, False, False, False, False, False, ...])
_____________________ BuildTest.test_build_with_cache_from _____________________
tests/integration/api_build_test.py:236: in test_build_with_cache_from
    assert counter == 3
E   AssertionError: assert 0 == 3
E     +0
E     -3
____________________ BuildTest.test_build_with_extra_hosts _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/build?t=dockerpytest_extrahost_build&q=False&nocache=False&rm=False&forcerm=False&pull=False&extrahosts=extrahost.local.test%3A127.0.0.1&extrahosts=hello.world.test%3A127.0.0.1

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:332: in test_build_with_extra_hosts
    for chunk in stream:
docker/api/client.py:386: in _stream_helper
    yield self._result(response, json=decode)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/build?t=dockerpytest_extrahost_build&q=False&nocache=False&rm=False&forcerm=False&pull=False&extrahosts=extrahost.local.test%3A127.0.0.1&extrahosts=hello.world.test%3A127.0.0.1: Bad Request ("failed to parse query parameter 'extrahosts': "hello.world.test:127.0.0.1": invalid character 'h' looking for beginning of value")
____________________ BuildTest.test_build_with_network_mode ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/images/dockerpytest_customnetbuild/json

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:297: in test_build_with_network_mode
    assert self.client.inspect_image('dockerpytest_customnetbuild')
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:251: in inspect_image
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.40/images/dockerpytest_customnetbuild/json: Not Found ("failed to find image dockerpytest_customnetbuild: dockerpytest_customnetbuild: No such image")
___________ CreateContainerTest.test_create_with_device_cgroup_rules ___________
tests/integration/api_container_test.py:470: in test_create_with_device_cgroup_rules
    assert config['HostConfig']['DeviceCgroupRules'] == [rule]
E   AssertionError: assert None == ['c 7:128 rwm']
E     +None
E     -['c 7:128 rwm']
______ CreateContainerTest.test_create_with_environment_variable_no_value ______
tests/integration/api_container_test.py:366: in test_create_with_environment_variable_no_value
    assert 'Foo' in config['Config']['Env']
E   AssertionError: assert 'Foo' in ['PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'TERM=xterm', 'container=podman', 'Other=one', 'Blank=']
________________ CreateContainerTest.test_create_with_isolation ________________
tests/integration/api_container_test.py:395: in test_create_with_isolation
    assert config['HostConfig']['Isolation'] == 'default'
E   AssertionError: assert '' == 'default'
E     - default
__________________ CreateContainerTest.test_create_with_links __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:95: in test_create_with_links
    res2 = self.client.create_container(
docker/api/container.py:428: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:439: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request ("bad parameter: Link is not supported")
_______________ CreateContainerTest.test_create_with_mac_address _______________
tests/integration/api_container_test.py:214: in test_create_with_mac_address
    assert mac_address_expected == res['NetworkSettings']['MacAddress']
E   AssertionError: assert '02:42:ac:11:00:0a' == 'ba:54:f2:68:32:a5'
E     - ba:54:f2:68:32:a5
E     + 02:42:ac:11:00:0a
_____________ CreateContainerTest.test_create_with_restart_policy ______________
tests/integration/api_container_test.py:124: in test_create_with_restart_policy
    self.client.remove_container(id)
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
__________________ CreateContainerTest.test_create_with_tmpfs __________________
tests/integration/api_container_test.py:384: in test_create_with_tmpfs
    assert config['HostConfig']['Tmpfs'] == tmpfs
E   AssertionError: assert {'/tmp1': 'si...ev,tmpcopyup'} == {'/tmp1': 'size=3M'}
E     Differing items:
E     {'/tmp1': 'size=3M,rw,rprivate,nosuid,nodev,tmpcopyup'} != {'/tmp1': 'size=3M'}
E     Full diff:
E     - {'/tmp1': 'size=3M'}
E     + {'/tmp1': 'size=3M,rw,rprivate,nosuid,nodev,tmpcopyup'}
_________ CreateContainerTest.test_invalid_log_driver_raises_exception _________
tests/integration/api_container_test.py:286: in test_invalid_log_driver_raises_exception
    assert excinfo.value.explanation in expected_msgs
E   AssertionError: assert 'container create: error running container create option: invalid log driver: invalid argument' in ["logger: no log driver named 'asdf' is registered", 'error looking up logging plugin asdf: plugin "asdf" not found']
E    +  where 'container create: error running container create option: invalid log driver: invalid argument' = APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')).explanation
E    +    where APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) = <ExceptionInfo APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) tblen=6>.value
____________ CreateContainerTest.test_valid_log_driver_and_log_opt _____________
tests/integration/api_container_test.py:265: in test_valid_log_driver_and_log_opt
    assert container_log_config['Config'] == log_config.config
E   AssertionError: assert None == {'max-file': '100'}
E     +None
E     -{'max-file': '100'}
______________ CreateContainerTest.test_valid_no_config_specified ______________
tests/integration/api_container_test.py:324: in test_valid_no_config_specified
    assert container_log_config['Config'] == {}
E   AssertionError: assert None == {}
E     +None
E     -{}
____________ CreateContainerTest.test_valid_no_log_driver_specified ____________
tests/integration/api_container_test.py:305: in test_valid_no_log_driver_specified
    assert container_log_config['Config'] == log_config.config
E   AssertionError: assert None == {'max-file': '100'}
E     +None
E     -{'max-file': '100'}
__________________ VolumeBindTest.test_create_with_mounts_ro ___________________
tests/integration/api_container_test.py:565: in test_create_with_mounts_ro
    self.check_container_data(inspect_data, False)
tests/integration/api_container_test.py:598: in check_container_data
    assert mount_data['RW'] == rw
E   AssertionError: assert True == False
E     +True
E     -False
___________________ ArchiveTest.test_copy_file_to_container ____________________
tests/integration/api_container_test.py:669: in test_copy_file_to_container
    assert logs.strip() == data
E   AssertionError: assert b'' == b'Deaf To All But The Song'
E     Full diff:
E     - b'Deaf To All But The Song'
E     + b''
______________ LogsTest.test_logs_streaming_and_follow_and_cancel ______________
tests/integration/base.py:83: in tearDown
    super().tearDown()
tests/integration/base.py:30: in tearDown
    client = docker.from_env(version=TEST_API_VERSION)
docker/client.py:96: in from_env
    return cls(
docker/client.py:45: in __init__
    self.api = APIClient(*args, **kwargs)
docker/api/client.py:197: in __init__
    self._version = self._retrieve_server_version()
docker/api/client.py:214: in _retrieve_server_version
    return self.version(api_version=False)["ApiVersion"]
docker/api/daemon.py:181: in version
    return self._result(self._get(url), json=True)
docker/utils/decorators.py:46: in inner
    return f(self, *args, **kwargs)
docker/api/client.py:251: in _get
    return self.get(url, **self._set_request_timeout(kwargs))
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/sessions.py:555: in get
    return self.request('GET', url, **kwargs)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/sessions.py:542: in request
    resp = self.send(prep, **send_kwargs)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/sessions.py:655: in send
    r = adapter.send(request, **kwargs)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/adapters.py:439: in send
    resp = conn.urlopen(
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:699: in urlopen
    httplib_response = self._make_request(
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:445: in _make_request
    six.raise_from(e, None)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:440: in _make_request
    httplib_response = conn.getresponse()
/usr/lib/python3.9/http/client.py:1345: in getresponse
    response.begin()
/usr/lib/python3.9/http/client.py:307: in begin
    version, status, reason = self._read_status()
/usr/lib/python3.9/http/client.py:268: in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
/usr/lib/python3.9/socket.py:704: in readinto
    return self._sock.recv_into(b)
E   Failed: Timeout >5.0s
__________________ AttachContainerTest.test_attach_no_stream ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a11bea4a882972387842acb3e0888e0b364e11227bbc5daaec0a43fae447f5f7/attach?logs=1&stdout=1&stderr=1&stream=0

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1229: in test_attach_no_stream
    output = self.client.attach(container, stream=False, logs=True)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:60: in attach
    output = self._read_from_socket(
docker/api/client.py:435: in _read_from_socket
    socket = self._get_raw_response_socket(response)
docker/api/client.py:346: in _get_raw_response_socket
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a11bea4a882972387842acb3e0888e0b364e11227bbc5daaec0a43fae447f5f7/attach?logs=1&stdout=1&stderr=1&stream=0: Internal Server Error ("can only attach to created or running containers - currently in state stopped: container state improper")
________________ ContainerUpdateTest.test_restart_policy_update ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/66081de2ddf0d8721e8a7659efbd50f3d940e5f8c2dcc516f394b19ba2cf47a9/update

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1416: in test_restart_policy_update
    self.client.update_container(container,
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1268: in update_container
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/66081de2ddf0d8721e8a7659efbd50f3d940e5f8c2dcc516f394b19ba2cf47a9/update: Not Found ("b'Not Found'")
__________________ ContainerUpdateTest.test_update_container ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/f63ee1cdff65acd8285e1f4b0825aa44f195ac946e463122f5a82aaa28fd7974/update

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1394: in test_update_container
    self.client.update_container(container, mem_limit=new_mem_limit)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1268: in update_container
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/f63ee1cdff65acd8285e1f4b0825aa44f195ac946e463122f5a82aaa28fd7974/update: Not Found ("b'Not Found'")
__________________ ContainerCPUTest.test_create_with_runtime ___________________
tests/integration/api_container_test.py:1461: in test_create_with_runtime
    assert config['HostConfig']['Runtime'] == 'runc'
E   AssertionError: assert 'oci' == 'runc'
E     - runc
E     + oci
____________________ ExecTest.test_detach_with_config_file _____________________
tests/integration/api_exec_test.py:227: in test_detach_with_config_file
    assert_cat_socket_detached_with_keys(sock, [ctrl_with('p')])
tests/helpers.py:137: in assert_cat_socket_detached_with_keys
    assert data == b'' or data.startswith(
E   AssertionError
______________________ ExecTest.test_exec_start_detached _______________________
tests/integration/api_exec_test.py:152: in test_exec_start_detached
    assert response == ""
E   AssertionError: assert '\n' == ''
E     Strings contain only whitespace, escaping them using repr()
E     - ''
E     + '\n'
_______________________ ExecTest.test_exec_start_socket ________________________
tests/integration/api_exec_test.py:134: in test_exec_start_socket
    assert stream == 1  # stdout (0 = stdin, 1 = stdout, 2 = stderr)
E   AssertionError: assert 121 == 1
E     +121
E     -1
_____________ ExecDemuxTest.test_exec_command_tty_no_stream_demux ______________
tests/integration/api_exec_test.py:299: in test_exec_command_tty_no_stream_demux
    exec_log = self.client.exec_start(res, demux=True)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/exec_api.py:176: in exec_start
    output = self._read_from_socket(res, stream, tty=tty, demux=demux)
docker/api/client.py:451: in _read_from_socket
    return consume_socket_output(gen, demux=demux)
docker/utils/socket.py:140: in consume_socket_output
    for frame in frames:
docker/api/client.py:441: in <genexpr>
    gen = (demux_adaptor(*frame) for frame in gen)
docker/utils/socket.py:167: in demux_adaptor
    raise ValueError(f'{stream_id} is not a valid stream')
E   ValueError: 104 is not a valid stream
____________ ExecDemuxTest.test_exec_command_tty_no_stream_no_demux ____________
tests/integration/api_exec_test.py:282: in test_exec_command_tty_no_stream_no_demux
    assert exec_log == b'hello out\r\nhello err\r\n'
E   AssertionError: assert b't\r\nhello err\r\n' == b'hello out\r\nhello err\r\n'
E     At index 0 diff: b't' != b'h'
E     Full diff:
E     - b'hello out\r\nhello err\r\n'
E     ?   --------
E     + b't\r\nhello err\r\n'
_______________ ExecDemuxTest.test_exec_command_tty_stream_demux _______________
tests/integration/api_exec_test.py:305: in test_exec_command_tty_stream_demux
    exec_log = list(self.client.exec_start(res, demux=True, stream=True))
docker/types/daemon.py:32: in __next__
    return next(self._stream)
docker/api/client.py:441: in <genexpr>
    gen = (demux_adaptor(*frame) for frame in gen)
docker/utils/socket.py:167: in demux_adaptor
    raise ValueError(f'{stream_id} is not a valid stream')
E   ValueError: 104 is not a valid stream
_____________ ExecDemuxTest.test_exec_command_tty_stream_no_demux ______________
tests/integration/api_exec_test.py:288: in test_exec_command_tty_stream_no_demux
    assert b'hello out\r\n' in exec_log
E   AssertionError: assert b'hello out\r\n' in [b't\r\n', b'hello err\r\n']
___________________ PullImageTest.test_pull_invalid_platform ___________________
tests/integration/api_image_test.py:69: in test_pull_invalid_platform
    self.client.pull('hello-world', platform='foobar')
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
____________________________ CommitTest.test_commit ____________________________
tests/integration/api_image_test.py:89: in test_commit
    assert img['Container'].startswith(id)
E   AssertionError: assert False
E    +  where False = <built-in method startswith of str object at 0x7f2237771670>('164df2a10fb66c3e2f02f5fe9eff6cb940a16a68726c9a7ec2b22d1d2e6d2b5f')
E    +    where <built-in method startswith of str object at 0x7f2237771670> = ''.startswith
_____________________ CommitTest.test_commit_with_changes ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/commit?container=833f1e771eb97c1d893f0229d0ec52a5e2914b7634e9af1f35d3a65af50139d7&changes=EXPOSE+8000&changes=CMD+%5B%22bash%22%5D

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:101: in test_commit_with_changes
    img_id = self.client.commit(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:145: in commit
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/commit?container=833f1e771eb97c1d893f0229d0ec52a5e2914b7634e9af1f35d3a65af50139d7&changes=EXPOSE+8000&changes=CMD+%5B%22bash%22%5D: Internal Server Error ("CommitFailure: invalid change "CMD" - must be formatted as KEY VALUE")
_____________________ ImportImageTest.test_get_load_image ______________________
tests/integration/api_image_test.py:266: in test_get_load_image
    assert any([
E   AssertionError: assert False
E    +  where False = any([])
______________________ PruneImagesTest.test_prune_images _______________________
tests/integration/api_image_test.py:332: in test_prune_images
    assert result['SpaceReclaimed'] > 0
E   AssertionError: assert 0 > 0
_________________ SaveLoadImagesTest.test_get_image_load_image _________________
tests/integration/api_image_test.py:360: in test_get_image_load_image
    assert success is True
E   AssertionError: assert False is True
----------------------------- Captured stdout call -----------------------------
{'stream': 'Loaded image: docker.io/library/alpine:3.10\n'}
______________ InspectDistributionTest.test_inspect_distribution _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/distribution/busybox:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:366: in test_inspect_distribution
    data = self.client.inspect_distribution('busybox:latest')
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:287: in inspect_distribution
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/distribution/busybox:latest/json: Not Found ("Path /v1.40/distribution/busybox:latest/json is not supported")
_________________ TestNetworks.test_connect_with_ipv4_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/2db695e01ead76541f0f99394e2944ebde706a0aef86d7538732c0883a32c10d/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:369: in test_connect_with_ipv4_address
    container = self.create_and_start(
tests/integration/base.py:124: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1109: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2db695e01ead76541f0f99394e2944ebde706a0aef86d7538732c0883a32c10d/start: Internal Server Error ("error configuring network namespace for container 2db695e01ead76541f0f99394e2944ebde706a0aef86d7538732c0883a32c10d: error adding pod confident_jepsen_confident_jepsen to CNI network "dockerpytest_aaf3816295ddca2b": failed to set bridge addr: "cni-podman1" already has an IP address different from 172.28.5.254/16")
_________________ TestNetworks.test_connect_with_ipv6_address __________________
tests/integration/api_network_test.py:405: in test_connect_with_ipv6_address
    assert net_data['IPAMConfig']['IPv6Address'] == '2001:389::f00d'
E   TypeError: 'NoneType' object is not subscriptable
_____________________ TestNetworks.test_connect_with_links _____________________
tests/integration/api_network_test.py:344: in test_connect_with_links
    assert net_settings['Networks'][net_name]['Links'] == [
E   AssertionError: assert None == ['docker-py-t...upstream:bar']
E     +None
E     -['docker-py-test-upstream:bar']
___________________ TestNetworks.test_create_check_duplicate ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/create

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:326: in test_create_check_duplicate
    net_id = self.client.create_network(net_name, check_duplicate=False)
docker/api/network.py:153: in create_network
    return self._result(res, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/create: Internal Server Error ("the network name dockerpytest_8bdeb8f159091d76 is already used")
________________ TestNetworks.test_create_network_ipv6_enabled _________________
tests/integration/api_network_test.py:445: in test_create_network_ipv6_enabled
    assert net['EnableIPv6'] is True
E   AssertionError: assert False is True
______________ TestNetworks.test_create_network_with_ipam_config _______________
tests/integration/api_network_test.py:62: in test_create_network_with_ipam_config
    assert ipam.pop('Options', None) is None
E   AssertionError: assert {} is None
E    +  where {} = <built-in method pop of dict object at 0x7f2234de5cc0>('Options', None)
E    +    where <built-in method pop of dict object at 0x7f2234de5cc0> = {'Config': [{'Gateway': '172.28.5.254', 'Subnet': '172.28.0.0/16'}], 'Driver': 'default'}.pop
___________________ TestNetworks.test_create_with_driveropt ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:276: in test_create_with_driveropt
    container = self.client.create_container(
docker/api/container.py:428: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:439: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("container create: unable to find network configuration for bridge: network not found")
__________________ TestNetworks.test_create_with_ipv4_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/3f7f507d92720c22e9f51911df6107231824f3a63b6dd681442fd1692924dc59/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:219: in test_create_with_ipv4_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1109: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3f7f507d92720c22e9f51911df6107231824f3a63b6dd681442fd1692924dc59/start: Internal Server Error ("error configuring network namespace for container 3f7f507d92720c22e9f51911df6107231824f3a63b6dd681442fd1692924dc59: error adding pod dreamy_tesla_dreamy_tesla to CNI network "dockerpytest_80c673c776b2760d": failed to set bridge addr: "cni-podman1" already has an IP address different from 132.124.0.1/16")
__________________ TestNetworks.test_create_with_ipv6_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/00461b37a69e9bc019d45353ec92cffd4dc4b91903615a8cc21807cb8113f7b5/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:245: in test_create_with_ipv6_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1109: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/00461b37a69e9bc019d45353ec92cffd4dc4b91903615a8cc21807cb8113f7b5/start: Internal Server Error ("error configuring network namespace for container 00461b37a69e9bc019d45353ec92cffd4dc4b91903615a8cc21807cb8113f7b5: error adding pod frosty_antonelli_frosty_antonelli to CNI network "dockerpytest_4bb1f2a20a4fae55": failed to set bridge addr: "cni-podman1" already has an IP address different from 2001:389::1/64")
_________________ TestNetworks.test_create_with_linklocal_ips __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:255: in test_create_with_linklocal_ips
    container = self.client.create_container(
docker/api/container.py:428: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:439: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("container create: unable to find network configuration for bridge: network not found")
_____________________ TestNetworks.test_create_with_links ______________________
tests/integration/api_network_test.py:311: in test_create_with_links
    assert net_settings['Networks'][net_name]['Links'] == [
E   AssertionError: assert None == ['docker-py-t...upstream:bar']
E     +None
E     -['docker-py-test-upstream:bar']
________________ TestVolumes.test_create_volume_invalid_driver _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/volumes/create

During handling of the above exception, another exception occurred:
tests/integration/api_volume_test.py:22: in test_create_volume_invalid_driver
    self.client.create_volume('perfectcherryblossom', driver_name)
docker/api/volume.py:89: in create_volume
    return self._result(self._post_json(url, data=data), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/volumes/create: Internal Server Error ("volume perfectcherryblossom uses volume plugin invalid.driver but it could not be retrieved: no volume plugin with name invalid.driver available: required plugin missing")
_______________________ TestVolumes.test_inspect_volume ________________________
tests/integration/api_volume_test.py:38: in test_inspect_volume
    assert volume_info == result
E   AssertionError: assert {'CreatedAt':...l/_data', ...} == {'CreatedAt':...l/_data', ...}
E     Omitting 6 identical items, use -vv to show
E     Differing items:
E     {'Options': None} != {'Options': {}}
E     Full diff:
E       {
E        'CreatedAt': '2021-08-23T19:10:20+02:00',
E        'Driver': 'local',...
E     
E     ...Full output truncated (10 lines hidden), use '-vv' to show
________________________ TestVolumes.test_list_volumes _________________________
tests/integration/api_volume_test.py:31: in test_list_volumes
    assert volume_info in volumes
E   AssertionError: assert {'CreatedAt': '2021-08-23T19:10:24+02:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...} in [{'CreatedAt': '2021-08-23T18:59:40+02:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage...00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...}]
____________________ ErrorsTest.test_api_error_parses_json _____________________
tests/integration/errors_test.py:13: in test_api_error_parses_json
    assert 'You cannot remove a running container' in explanation
E   AssertionError: assert 'You cannot remove a running container' in 'cannot remove container f2ea174022fa90bd6f4197df2b9170de52e1571e2a56270665e2e10804575245 as it is running - running or paused containers cannot be removed without force: container state improper'
_______________________ ContainerCollectionTest.test_get _______________________
tests/integration/models_containers_test.py:189: in test_get
    assert client.containers.get(container.id).attrs[
E   AssertionError: assert 'docker.io/li...y/alpine:3.10' == 'alpine'
E     - alpine
E     + docker.io/library/alpine:3.10
______________________ ContainerCollectionTest.test_list _______________________
tests/integration/models_containers_test.py:202: in test_list
    assert container.attrs['Config']['Image'] == 'alpine'
E   AssertionError: assert 'docker.io/li...y/alpine:3.10' == 'alpine'
E     - alpine
E     + docker.io/library/alpine:3.10
___________________ ContainerCollectionTest.test_list_sparse ___________________
tests/integration/models_containers_test.py:220: in test_list_sparse
    assert container.attrs['Image'] == 'alpine'
E   AssertionError: assert 'docker.io/li...y/alpine:3.10' == 'alpine'
E     - alpine
E     + docker.io/library/alpine:3.10
___________________ ContainerCollectionTest.test_run_detach ____________________
tests/integration/models_containers_test.py:26: in test_run_detach
    assert container.attrs['Config']['Image'] == "alpine"
E   AssertionError: assert 'docker.io/li...y/alpine:3.10' == 'alpine'
E     - alpine
E     + docker.io/library/alpine:3.10
___________ ContainerCollectionTest.test_run_with_auto_remove_error ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/6cedbafd50dbb38b92c8e3be77d6866df178f4bbff101b0348f9522a06270f84/json

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:139: in test_run_with_auto_remove_error
    client.containers.run(
docker/models/containers.py:827: in run
    out = container.logs(
docker/models/containers.py:306: in logs
    return self.client.api.logs(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:869: in logs
    output = self._get_result(container, stream, res)
docker/api/client.py:489: in _get_result
    return self._get_result_tty(stream, res, self._check_is_tty(container))
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/client.py:485: in _check_is_tty
    cont = self.inspect_container(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:771: in inspect_container
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/6cedbafd50dbb38b92c8e3be77d6866df178f4bbff101b0348f9522a06270f84/json: Not Found ("no container with name or ID "6cedbafd50dbb38b92c8e3be77d6866df178f4bbff101b0348f9522a06270f84" found: no such container")
_______ ContainerCollectionTest.test_run_with_image_that_does_not_exist ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:41: in test_run_with_image_that_does_not_exist
    client.containers.run("dockerpytest_does_not_exist")
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:428: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:439: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/create: Not Found ("dockerpytest_does_not_exist: image not known")
______________ ContainerCollectionTest.test_run_with_proxy_config ______________
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:445: in _make_request
    six.raise_from(e, None)
<string>:3: in raise_from
    ???
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:440: in _make_request
    httplib_response = conn.getresponse()
/usr/lib/python3.9/http/client.py:1345: in getresponse
    response.begin()
/usr/lib/python3.9/http/client.py:307: in begin
    version, status, reason = self._read_status()
/usr/lib/python3.9/http/client.py:268: in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
/usr/lib/python3.9/socket.py:704: in readinto
    return self._sock.recv_into(b)
E   socket.timeout: timed out

During handling of the above exception, another exception occurred:
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/adapters.py:439: in send
    resp = conn.urlopen(
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:755: in urlopen
    retries = retries.increment(
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/util/retry.py:532: in increment
    raise six.reraise(type(error), error, _stacktrace)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/packages/six.py:770: in reraise
    raise value
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:699: in urlopen
    httplib_response = self._make_request(
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:447: in _make_request
    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:336: in _raise_timeout
    raise ReadTimeoutError(
E   urllib3.exceptions.ReadTimeoutError: UnixHTTPConnectionPool(host='localhost', port=None): Read timed out. (read timeout=60)

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:180: in test_run_with_proxy_config
    out = client.containers.run('alpine', 'sh -c "env"')
docker/models/containers.py:827: in run
    out = container.logs(
docker/models/containers.py:306: in logs
    return self.client.api.logs(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:868: in logs
    res = self._get(url, params=params, stream=stream)
docker/utils/decorators.py:46: in inner
    return f(self, *args, **kwargs)
docker/api/client.py:251: in _get
    return self.get(url, **self._set_request_timeout(kwargs))
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/sessions.py:555: in get
    return self.request('GET', url, **kwargs)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/sessions.py:542: in request
    resp = self.send(prep, **send_kwargs)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/sessions.py:655: in send
    r = adapter.send(request, **kwargs)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/adapters.py:529: in send
    raise ReadTimeout(e, request=request)
E   requests.exceptions.ReadTimeout: UnixHTTPConnectionPool(host='localhost', port=None): Read timed out. (read timeout=60)
_____________ ContainerCollectionTest.test_run_with_streamed_logs ______________
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:445: in _make_request
    six.raise_from(e, None)
<string>:3: in raise_from
    ???
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:440: in _make_request
    httplib_response = conn.getresponse()
/usr/lib/python3.9/http/client.py:1345: in getresponse
    response.begin()
/usr/lib/python3.9/http/client.py:307: in begin
    version, status, reason = self._read_status()
/usr/lib/python3.9/http/client.py:268: in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
/usr/lib/python3.9/socket.py:704: in readinto
    return self._sock.recv_into(b)
E   socket.timeout: timed out

During handling of the above exception, another exception occurred:
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/adapters.py:439: in send
    resp = conn.urlopen(
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:755: in urlopen
    retries = retries.increment(
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/util/retry.py:532: in increment
    raise six.reraise(type(error), error, _stacktrace)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/packages/six.py:770: in reraise
    raise value
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:699: in urlopen
    httplib_response = self._make_request(
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:447: in _make_request
    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:336: in _raise_timeout
    raise ReadTimeoutError(
E   urllib3.exceptions.ReadTimeoutError: UnixHTTPConnectionPool(host='localhost', port=None): Read timed out. (read timeout=60)

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:150: in test_run_with_streamed_logs
    out = client.containers.run(
docker/models/containers.py:827: in run
    out = container.logs(
docker/models/containers.py:306: in logs
    return self.client.api.logs(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:868: in logs
    res = self._get(url, params=params, stream=stream)
docker/utils/decorators.py:46: in inner
    return f(self, *args, **kwargs)
docker/api/client.py:251: in _get
    return self.get(url, **self._set_request_timeout(kwargs))
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/sessions.py:555: in get
    return self.request('GET', url, **kwargs)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/sessions.py:542: in request
    resp = self.send(prep, **send_kwargs)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/sessions.py:655: in send
    r = adapter.send(request, **kwargs)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/adapters.py:529: in send
    raise ReadTimeout(e, request=request)
E   requests.exceptions.ReadTimeout: UnixHTTPConnectionPool(host='localhost', port=None): Read timed out. (read timeout=60)
________ ContainerCollectionTest.test_run_with_streamed_logs_and_cancel ________
tests/integration/models_containers_test.py:162: in test_run_with_streamed_logs_and_cancel
    out = client.containers.run(
docker/models/containers.py:827: in run
    out = container.logs(
docker/models/containers.py:306: in logs
    return self.client.api.logs(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:868: in logs
    res = self._get(url, params=params, stream=stream)
docker/utils/decorators.py:46: in inner
    return f(self, *args, **kwargs)
docker/api/client.py:251: in _get
    return self.get(url, **self._set_request_timeout(kwargs))
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/sessions.py:555: in get
    return self.request('GET', url, **kwargs)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/sessions.py:542: in request
    resp = self.send(prep, **send_kwargs)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/sessions.py:655: in send
    r = adapter.send(request, **kwargs)
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/adapters.py:439: in send
    resp = conn.urlopen(
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:699: in urlopen
    httplib_response = self._make_request(
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:445: in _make_request
    six.raise_from(e, None)
<string>:3: in raise_from
    ???
../../.virtualenvs/docker-py/lib/python3.9/site-packages/urllib3/connectionpool.py:440: in _make_request
    httplib_response = conn.getresponse()
/usr/lib/python3.9/http/client.py:1345: in getresponse
    response.begin()
/usr/lib/python3.9/http/client.py:307: in begin
    version, status, reason = self._read_status()
/usr/lib/python3.9/http/client.py:268: in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
/usr/lib/python3.9/socket.py:704: in readinto
    return self._sock.recv_into(b)
E   Failed: Timeout >5.0s
_________________ ContainerTest.test_create_with_volume_driver _________________
tests/integration/models_containers_test.py:456: in test_create_with_volume_driver
    assert container.attrs['HostConfig']['VolumeDriver'] == 'foo'
E   AssertionError: assert '' == 'foo'
E     - foo
___________________________ ContainerTest.test_diff ____________________________
tests/integration/models_containers_test.py:251: in test_diff
    assert container.diff() == [{'Path': '/test', 'Kind': 1}]
E   AssertionError: assert [{'Kind': 1, ...ath': '/etc'}] == [{'Kind': 1, 'Path': '/test'}]
E     Left contains one more item: {'Kind': 0, 'Path': '/etc'}
E     Full diff:
E     - [{'Kind': 1, 'Path': '/test'}]
E     + [{'Kind': 1, 'Path': '/test'}, {'Kind': 0, 'Path': '/etc'}]
______________________ ContainerTest.test_exec_run_failed ______________________
tests/integration/models_containers_test.py:270: in test_exec_run_failed
    assert exec_output[0] == 126
E   AssertionError: assert 127 == 126
E     +127
E     -126
____________________________ ContainerTest.test_top ____________________________
tests/integration/models_containers_test.py:425: in test_top
    assert 'sleep 60' in top['Processes'][0]
E   AssertionError: assert 'sleep 60' in ['1 root      0:00 sleep 60']
__________________________ ContainerTest.test_update ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/af336b973af1968960244c3864b76d3e1d67c1df0fad00fc921204fefe7209b1/update

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:433: in test_update
    container.update(cpu_shares=3)
docker/models/containers.py:489: in update
    return self.client.api.update_container(self.id, **kwargs)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1268: in update_container
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/af336b973af1968960244c3864b76d3e1d67c1df0fad00fc921204fefe7209b1/update: Not Found ("b'Not Found'")
__________________ ImageCollectionTest.test_build_with_error ___________________
tests/integration/models_images_test.py:30: in test_build_with_error
    assert (
E   AssertionError: assert "The command '/bin/sh -c exit 1' returned a non-zero code: 1" in 'docker.errors.BuildError: error building at STEP "RUN exit 1": error while running runtime: exit status 1'
E    +  where 'docker.errors.BuildError: error building at STEP "RUN exit 1": error while running runtime: exit status 1' = <bound method ExceptionInfo.exconly of <ExceptionInfo BuildError('error building at STEP "RUN exit 1": error while running runtime: exit status 1\n') tblen=2>>()
E    +    where <bound method ExceptionInfo.exconly of <ExceptionInfo BuildError('error building at STEP "RUN exit 1": error while running runtime: exit status 1\n') tblen=2>> = <ExceptionInfo BuildError('error building at STEP "RUN exit 1": error while running runtime: exit status 1\n') tblen=2>.exconly
_____________________ ImageCollectionTest.test_load_error ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:953: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/images/load

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:98: in test_load_error
    client.images.load('abc')
docker/models/images.py:382: in load
    for chunk in resp:
docker/api/client.py:386: in _stream_helper
    yield self._result(response, json=decode)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/images/load: Internal Server Error ("failed to load image: payload does not match any of the supported image formats (oci, oci-archive, dir, docker-archive)")
________________________ ImageCollectionTest.test_pull _________________________
tests/integration/models_images_test.py:71: in test_pull
    assert 'alpine:latest' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:latest' in ['docker.io/library/alpine:latest']
____________________ ImageCollectionTest.test_pull_multiple ____________________
tests/integration/models_images_test.py:91: in test_pull_multiple
    assert any([
E   AssertionError: assert False
E    +  where False = any([False])
____________________ ImageCollectionTest.test_pull_with_sha ____________________
tests/integration/models_images_test.py:85: in test_pull_with_sha
    assert image_ref in image.attrs['RepoDigests']
E   AssertionError: assert 'hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7' in ['docker.io/library/hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7', 'docker.io/library/hello-world@sha256:8072a54ebb3bc136150e2f2860f00a7bf45f13eeb917cca2430fcd0054c8e51b']
____________________ ImageCollectionTest.test_pull_with_tag ____________________
tests/integration/models_images_test.py:76: in test_pull_with_tag
    assert 'alpine:3.10' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:3.10' in ['docker.io/library/alpine:3.10']
_______________ ImageCollectionTest.test_save_and_load_repo_name _______________
tests/integration/models_images_test.py:122: in test_save_and_load_repo_name
    stream = image.save(named=f'{additional_tag}:latest')
docker/models/images.py:96: in save
    raise InvalidArgument(
E   docker.errors.InvalidArgument: dockerpytest_7fda2e4c99e9a345:latest is not a valid tag for this image
_________________________ VolumesTest.test_list_remove _________________________
tests/integration/models_volumes_test.py:26: in test_list_remove
    assert volume in client.volumes.list(filters={'name': 'dockerpytest_'})
E   AssertionError: assert <Volume: dockerpyte> in []
E    +  where [] = <bound method VolumeCollection.list of <docker.models.volumes.VolumeCollection object at 0x7f2234f72730>>(filters={'name': 'dockerpytest_'})
E    +    where <bound method VolumeCollection.list of <docker.models.volumes.VolumeCollection object at 0x7f2234f72730>> = <docker.models.volumes.VolumeCollection object at 0x7f2234f72730>.list
E    +      where <docker.models.volumes.VolumeCollection object at 0x7f2234f72730> = <docker.client.DockerClient object at 0x7f222fffc2e0>.volumes
________ TestRegressions.test_443_handle_nonchunked_response_in_stream _________
tests/integration/regression_test.py:15: in test_443_handle_nonchunked_response_in_stream
    pass
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
=============================== warnings summary ===============================
../../.virtualenvs/docker-py/lib/python3.9/site-packages/paramiko/hostkeys.py:23
  /home/riyad/.virtualenvs/docker-py/lib/python3.9/site-packages/paramiko/hostkeys.py:23: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working
    from collections import MutableMapping

tests/integration/api_client_test.py::ConnectionTimeoutTest::test_timeout
  /home/riyad/src/docker-py/docker/utils/utils.py:269: DeprecationWarning: urllib.parse.splitnport() is deprecated as of 3.8, use urllib.parse.urlparse() instead
    host, port = splitnport(parsed_url.netloc)

-- Docs: https://docs.pytest.org/en/stable/warnings.html
- generated xml file: /home/riyad/src/docker-py/logs/pytest_integration_4.0.0-dev_2021-08-23T10:11:10-04:00_ac5f2e1162a4a04c171c4ae6209f71d14371bf30.junit.xml -
=========================== short test summary info ============================
XFAIL tests/integration/api_build_test.py::BuildTest::test_prune_builds
  Currently fails on 18.09: https://github.com/moby/moby/issues/37920
XFAIL tests/integration/api_container_test.py::CreateContainerTest::test_create_with_storage_opt
  Not supported on most drivers
XFAIL tests/integration/api_container_test.py::ContainerTopTest::test_top
  Output of docker top depends on host distro, and is not formalized.
XFAIL tests/integration/api_container_test.py::ContainerTopTest::test_top_with_psargs
  Output of docker top depends on host distro, and is not formalized.
SKIPPED [1] tests/integration/api_image_test.py:291: Doesn't work inside a container - FIXME
= 76 failed, 179 passed, 1 skipped, 149 deselected, 4 xfailed, 1 xpassed, 2 warnings, 5 errors in 1463.02s (0:24:23) =
