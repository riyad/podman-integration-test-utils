<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="docker-py" errors="0" failures="188" skipped="5" tests="266" time="860.072" timestamp="2021-07-01T11:42:11.819830" hostname="acnologia"><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_container_with_target" time="9.690" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_from_stringio" time="3.876" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_gzip_custom_encoding" time="3.846" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_gzip_encoding" time="5.676" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_in_context_abs_dockerfile" time="6.319"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/0ff518a139ab27707ce9c3e141f72b14dc89c090f6ef40087d936c50e45a2c00/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/0ff518a139ab27707ce9c3e141f72b14dc89c090f6ef40087d936c50e45a2c00/start

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:583: in test_build_in_context_abs_dockerfile
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/0ff518a139ab27707ce9c3e141f72b14dc89c090f6ef40087d936c50e45a2c00/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_in_context_dockerfile" time="6.062"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/af935ba55ee3c1be95dcccdd7d6a20060976d0ebd081e09157a0161a3834114a/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/af935ba55ee3c1be95dcccdd7d6a20060976d0ebd081e09157a0161a3834114a/start

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:518: in test_build_in_context_dockerfile
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/af935ba55ee3c1be95dcccdd7d6a20060976d0ebd081e09157a0161a3834114a/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_in_context_nested_dockerfile" time="5.089"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/1f20f5974b0adf1dcc60420a396ffc5dbf35c2ebdb70769d7faeb07a5e180d20/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/1f20f5974b0adf1dcc60420a396ffc5dbf35c2ebdb70769d7faeb07a5e180d20/start

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:551: in test_build_in_context_nested_dockerfile
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/1f20f5974b0adf1dcc60420a396ffc5dbf35c2ebdb70769d7faeb07a5e180d20/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_invalid_platform" time="4.645" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_isolation" time="3.528" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_labels" time="3.566"><failure message="AssertionError: assert {'io.buildah.... 'test': 'OK'} == {'test': 'OK'}&#10;  Omitting 1 identical items, use -vv to show&#10;  Left contains 1 more item:&#10;  {'io.buildah.version': '1.21.0'}&#10;  Full diff:&#10;  - {'test': 'OK'}&#10;  + {'io.buildah.version': '1.21.0', 'test': 'OK'}">tests/integration/api_build_test.py:215: in test_build_labels
    assert info['Config']['Labels'] == labels
E   AssertionError: assert {'io.buildah.... 'test': 'OK'} == {'test': 'OK'}
E     Omitting 1 identical items, use -vv to show
E     Left contains 1 more item:
E     {'io.buildah.version': '1.21.0'}
E     Full diff:
E     - {'test': 'OK'}
E     + {'io.buildah.version': '1.21.0', 'test': 'OK'}</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_out_of_context_dockerfile" time="4.390"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b1b8d89f0e412188647cdb906f4211860b125a1db1888d9ebaa24ed833507519/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b1b8d89f0e412188647cdb906f4211860b125a1db1888d9ebaa24ed833507519/start

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:489: in test_build_out_of_context_dockerfile
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b1b8d89f0e412188647cdb906f4211860b125a1db1888d9ebaa24ed833507519/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_shmsize" time="3.435" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_squash" time="7.553" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_stderr_data" time="4.641"><failure message="AssertionError: assert False&#10; +  where False = any([False, False, False, False, False, False, ...])">tests/integration/api_build_test.py:395: in test_build_stderr_data
    assert any([line == expected for line in lines])
E   AssertionError: assert False
E    +  where False = any([False, False, False, False, False, False, ...])</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_streaming" time="4.942" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_buildargs" time="3.628" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_cache_from" time="5.404"><failure message="AssertionError: assert 0 == 3&#10;  +0&#10;  -3">tests/integration/api_build_test.py:240: in test_build_with_cache_from
    assert counter == 3
E   AssertionError: assert 0 == 3
E     +0
E     -3</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_dockerfile_empty_lines" time="3.393" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_dockerignore" time="4.802"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/bc7231c4f72cd1ae1417da71d6d3fd8bfe52580b7bee4ca99e85c67e1e658afe/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/bc7231c4f72cd1ae1417da71d6d3fd8bfe52580b7bee4ca99e85c67e1e658afe/start

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:134: in test_build_with_dockerignore
    self.client.start(c)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/bc7231c4f72cd1ae1417da71d6d3fd8bfe52580b7bee4ca99e85c67e1e658afe/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_extra_hosts" time="3.474"><failure message="docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/build?t=dockerpytest_extrahost_build&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;extrahosts=extrahost.local.test%3A127.0.0.1&amp;extrahosts=hello.world.test%3A127.0.0.1: Bad Request (&quot;failed to parse query parameter 'extrahosts': &quot;hello.world.test:127.0.0.1&quot;: invalid character 'h' looking for beginning of value&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/build?t=dockerpytest_extrahost_build&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;extrahosts=extrahost.local.test%3A127.0.0.1&amp;extrahosts=hello.world.test%3A127.0.0.1

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:336: in test_build_with_extra_hosts
    for chunk in stream:
docker/api/client.py:387: in _stream_helper
    yield self._result(response, json=decode)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/build?t=dockerpytest_extrahost_build&amp;q=False&amp;nocache=False&amp;rm=False&amp;forcerm=False&amp;pull=False&amp;extrahosts=extrahost.local.test%3A127.0.0.1&amp;extrahosts=hello.world.test%3A127.0.0.1: Bad Request ("failed to parse query parameter 'extrahosts': "hello.world.test:127.0.0.1": invalid character 'h' looking for beginning of value")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_network_mode" time="3.798"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6049f875b4145be07337a182e5dce9873bb897225ee23725beb63541d705084a/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6049f875b4145be07337a182e5dce9873bb897225ee23725beb63541d705084a/start

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:282: in test_build_with_network_mode
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6049f875b4145be07337a182e5dce9873bb897225ee23725beb63541d705084a/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_proxy" time="3.647" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_build_with_proxy_and_buildargs" time="3.548" /><testcase classname="tests.integration.api_build_test.BuildTest" name="test_prune_builds" time="3.508"><skipped type="pytest.xfail" message="Currently fails on 18.09: https://github.com/moby/moby/issues/37920" /></testcase><testcase classname="tests.integration.api_client_test.InformationTest" name="test_info" time="4.619" /><testcase classname="tests.integration.api_client_test.InformationTest" name="test_version" time="4.668" /><testcase classname="tests.integration.api_client_test.AutoDetectVersionTest" name="test_client_init" time="3.667" /><testcase classname="tests.integration.api_client_test.ConnectionTimeoutTest" name="test_timeout" time="0.503" /><testcase classname="tests.integration.api_client_test.UnixconnTest" name="test_resource_warnings" time="1.262" /><testcase classname="tests.integration.api_container_test.ListContainersTest" name="test_list_containers" time="3.680"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a9ffb13bdecff169aef00d492a1ca755c3d1169dd0c53b762bb0a3b160ac2e44/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a9ffb13bdecff169aef00d492a1ca755c3d1169dd0c53b762bb0a3b160ac2e44/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:29: in test_list_containers
    self.client.start(res1['Id'])
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a9ffb13bdecff169aef00d492a1ca755c3d1169dd0c53b762bb0a3b160ac2e44/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create" time="3.223" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_container_with_volumes_from" time="3.611"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b2a0f83c5154db8a9e9e123ece63a2899bf0648b908dbce8d776433f642750be/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b2a0f83c5154db8a9e9e123ece63a2899bf0648b908dbce8d776433f642750be/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:137: in test_create_container_with_volumes_from
    self.client.start(container1_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b2a0f83c5154db8a9e9e123ece63a2899bf0648b908dbce8d776433f642750be/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_auto_remove" time="3.312" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_cpu_rt_options" time="3.294" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_device_cgroup_rules" time="3.366"><failure message="AssertionError: assert None == ['c 7:128 rwm']&#10;  +None&#10;  -['c 7:128 rwm']">tests/integration/api_container_test.py:470: in test_create_with_device_cgroup_rules
    assert config['HostConfig']['DeviceCgroupRules'] == [rule]
E   AssertionError: assert None == ['c 7:128 rwm']
E     +None
E     -['c 7:128 rwm']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_environment_variable_no_value" time="3.250"><failure message="AssertionError: assert 'Foo' in ['PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'TERM=xterm', 'container=podman', 'Other=one', 'Blank=']">tests/integration/api_container_test.py:366: in test_create_with_environment_variable_no_value
    assert 'Foo' in config['Config']['Env']
E   AssertionError: assert 'Foo' in ['PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'TERM=xterm', 'container=podman', 'Other=one', 'Blank=']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_host_pid_mode" time="3.375"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4be43269f28bdc108cbdb3ee0a73d10d27a2fc20b61d5a1c764dc78b53ffb842/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/4be43269f28bdc108cbdb3ee0a73d10d27a2fc20b61d5a1c764dc78b53ffb842/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:58: in test_create_with_host_pid_mode
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4be43269f28bdc108cbdb3ee0a73d10d27a2fc20b61d5a1c764dc78b53ffb842/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_init" time="3.553" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_isolation" time="3.566"><failure message="AssertionError: assert '' == 'default'&#10;  - default">tests/integration/api_container_test.py:395: in test_create_with_isolation
    assert config['HostConfig']['Isolation'] == 'default'
E   AssertionError: assert '' == 'default'
E     - default</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_links" time="3.687"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/82a2230095176fb470a11b4516b92c4717f64cd2d670613f4154d44c27f071f1/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/82a2230095176fb470a11b4516b92c4717f64cd2d670613f4154d44c27f071f1/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:74: in test_create_with_links
    self.client.start(container1_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/82a2230095176fb470a11b4516b92c4717f64cd2d670613f4154d44c27f071f1/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_mac_address" time="3.616"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7113abe07fc054a5ebc9ec786f7c3b7e50f1648a11a234edcc7042b85e823ba1/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/7113abe07fc054a5ebc9ec786f7c3b7e50f1648a11a234edcc7042b85e823ba1/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:212: in test_create_with_mac_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7113abe07fc054a5ebc9ec786f7c3b7e50f1648a11a234edcc7042b85e823ba1/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_memory_constraints_with_int" time="3.702"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/12f77fdd24e0d19c6aa24d60740163aa6d986628ec9c62c231cc5dfea43af8e9/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/12f77fdd24e0d19c6aa24d60740163aa6d986628ec9c62c231cc5dfea43af8e9/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:351: in test_create_with_memory_constraints_with_int
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/12f77fdd24e0d19c6aa24d60740163aa6d986628ec9c62c231cc5dfea43af8e9/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_memory_constraints_with_str" time="3.712"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/697d1b8a1601260e42b7862f9ca5f71d49a6712cf77a1fd036e27f43e6a42442/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/697d1b8a1601260e42b7862f9ca5f71d49a6712cf77a1fd036e27f43e6a42442/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:336: in test_create_with_memory_constraints_with_str
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/697d1b8a1601260e42b7862f9ca5f71d49a6712cf77a1fd036e27f43e6a42442/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_restart_policy" time="3.678"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7072323deee129c257d8566f13eba77a75778aa9f69f7caf79d5eca3d03915b5/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/7072323deee129c257d8566f13eba77a75778aa9f69f7caf79d5eca3d03915b5/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:121: in test_create_with_restart_policy
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7072323deee129c257d8566f13eba77a75778aa9f69f7caf79d5eca3d03915b5/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_stop_timeout" time="3.457" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_storage_opt" time="3.546"><skipped type="pytest.xfail" message="Not supported on most drivers" /></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_tmpfs" time="3.564"><failure message="AssertionError: assert {'/tmp1': 'si...ev,tmpcopyup'} == {'/tmp1': 'size=3M'}&#10;  Differing items:&#10;  {'/tmp1': 'size=3M,rw,rprivate,nosuid,nodev,tmpcopyup'} != {'/tmp1': 'size=3M'}&#10;  Full diff:&#10;  - {'/tmp1': 'size=3M'}&#10;  + {'/tmp1': 'size=3M,rw,rprivate,nosuid,nodev,tmpcopyup'}">tests/integration/api_container_test.py:384: in test_create_with_tmpfs
    assert config['HostConfig']['Tmpfs'] == tmpfs
E   AssertionError: assert {'/tmp1': 'si...ev,tmpcopyup'} == {'/tmp1': 'size=3M'}
E     Differing items:
E     {'/tmp1': 'size=3M,rw,rprivate,nosuid,nodev,tmpcopyup'} != {'/tmp1': 'size=3M'}
E     Full diff:
E     - {'/tmp1': 'size=3M'}
E     + {'/tmp1': 'size=3M,rw,rprivate,nosuid,nodev,tmpcopyup'}</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_create_with_uts_mode" time="3.511" /><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_group_id_ints" time="3.715"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a7c843e571cea9ce2c578286ae1a3db6d6f1ceffc2e514b8c1bbef65bb5de907/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a7c843e571cea9ce2c578286ae1a3db6d6f1ceffc2e514b8c1bbef65bb5de907/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:224: in test_group_id_ints
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a7c843e571cea9ce2c578286ae1a3db6d6f1ceffc2e514b8c1bbef65bb5de907/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_group_id_strings" time="3.821"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8eb22537d17d0c19a18fc93b24aa1786fe2ef8987e7d4993e84961a10813e290/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/8eb22537d17d0c19a18fc93b24aa1786fe2ef8987e7d4993e84961a10813e290/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:239: in test_group_id_strings
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8eb22537d17d0c19a18fc93b24aa1786fe2ef8987e7d4993e84961a10813e290/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_invalid_log_driver_raises_exception" time="3.634"><failure message="AssertionError: assert 'container create: error running container create option: invalid log driver: invalid argument' in [&quot;logger: no log driver named 'asdf' is registered&quot;, 'error looking up logging plugin asdf: plugin &quot;asdf&quot; not found']&#10; +  where 'container create: error running container create option: invalid log driver: invalid argument' = APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')).explanation&#10; +    where APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) = &lt;ExceptionInfo APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) tblen=6&gt;.value">tests/integration/api_container_test.py:286: in test_invalid_log_driver_raises_exception
    assert excinfo.value.explanation in expected_msgs
E   AssertionError: assert 'container create: error running container create option: invalid log driver: invalid argument' in ["logger: no log driver named 'asdf' is registered", 'error looking up logging plugin asdf: plugin "asdf" not found']
E    +  where 'container create: error running container create option: invalid log driver: invalid argument' = APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')).explanation
E    +    where APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) = &lt;ExceptionInfo APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) tblen=6&gt;.value</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_valid_log_driver_and_log_opt" time="3.581"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/43f345c9e06558fa6f99465b91ee963ae8067ce4aa5cac026e4ba0b62aa2862a/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/43f345c9e06558fa6f99465b91ee963ae8067ce4aa5cac026e4ba0b62aa2862a/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:259: in test_valid_log_driver_and_log_opt
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/43f345c9e06558fa6f99465b91ee963ae8067ce4aa5cac026e4ba0b62aa2862a/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_valid_no_config_specified" time="3.784"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8d91527215a9ce070c416bbc1a02cfd4cf603d9a0abd416ec68a7823a96b4d71/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/8d91527215a9ce070c416bbc1a02cfd4cf603d9a0abd416ec68a7823a96b4d71/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:318: in test_valid_no_config_specified
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8d91527215a9ce070c416bbc1a02cfd4cf603d9a0abd416ec68a7823a96b4d71/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.CreateContainerTest" name="test_valid_no_log_driver_specified" time="3.678"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7b5599f0867616daee867a91fda02fa80e4a1b94ea271e961261bf6c00649567/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/7b5599f0867616daee867a91fda02fa80e4a1b94ea271e961261bf6c00649567/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:299: in test_valid_no_log_driver_specified
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7b5599f0867616daee867a91fda02fa80e4a1b94ea271e961261bf6c00649567/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_binds_ro" time="2.488"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/770899a9683946661fac92befb100edb8b8bd981f604105a3ba9cf15a848af29/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/770899a9683946661fac92befb100edb8b8bd981f604105a3ba9cf15a848af29/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:498: in setUp
    self.run_with_volume(
tests/integration/api_container_test.py:601: in run_with_volume
    return self.run_container(
tests/integration/base.py:109: in run_container
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/770899a9683946661fac92befb100edb8b8bd981f604105a3ba9cf15a848af29/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_binds_rw" time="2.478"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/50c6dc58e4160bbadf2349ea489f162b77d940d5573fbc7819211a0675bc56b4/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/50c6dc58e4160bbadf2349ea489f162b77d940d5573fbc7819211a0675bc56b4/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:498: in setUp
    self.run_with_volume(
tests/integration/api_container_test.py:601: in run_with_volume
    return self.run_container(
tests/integration/base.py:109: in run_container
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/50c6dc58e4160bbadf2349ea489f162b77d940d5573fbc7819211a0675bc56b4/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_mounts" time="2.510"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/829ddca6f970e97924a057d3865d442d52f45f131c008450d67dac8e7f5863b2/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/829ddca6f970e97924a057d3865d442d52f45f131c008450d67dac8e7f5863b2/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:498: in setUp
    self.run_with_volume(
tests/integration/api_container_test.py:601: in run_with_volume
    return self.run_container(
tests/integration/base.py:109: in run_container
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/829ddca6f970e97924a057d3865d442d52f45f131c008450d67dac8e7f5863b2/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_mounts_ro" time="2.567"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/485ffa46ea1308cb8e9ec95f89adf8bd4f87912c215df93fe5a1047d875474ef/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/485ffa46ea1308cb8e9ec95f89adf8bd4f87912c215df93fe5a1047d875474ef/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:498: in setUp
    self.run_with_volume(
tests/integration/api_container_test.py:601: in run_with_volume
    return self.run_container(
tests/integration/base.py:109: in run_container
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/485ffa46ea1308cb8e9ec95f89adf8bd4f87912c215df93fe5a1047d875474ef/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.VolumeBindTest" name="test_create_with_volume_mount" time="2.628"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c6cc46882e54f5a0911f2d46bf818de0e28fe1e0af5953dbc227a0a837c41a06/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/c6cc46882e54f5a0911f2d46bf818de0e28fe1e0af5953dbc227a0a837c41a06/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:498: in setUp
    self.run_with_volume(
tests/integration/api_container_test.py:601: in run_with_volume
    return self.run_container(
tests/integration/base.py:109: in run_container
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c6cc46882e54f5a0911f2d46bf818de0e28fe1e0af5953dbc227a0a837c41a06/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ArchiveTest" name="test_copy_directory_to_container" time="4.013"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/532e2cccffa734a5eaab12da5a5773928cbde54c87886d3da8828f74b97b9b0c/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/532e2cccffa734a5eaab12da5a5773928cbde54c87886d3da8828f74b97b9b0c/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:681: in test_copy_directory_to_container
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/532e2cccffa734a5eaab12da5a5773928cbde54c87886d3da8828f74b97b9b0c/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ArchiveTest" name="test_copy_file_to_container" time="3.903"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7f78fb44cf41e3666a4a74bed270890905aada23adcde46d84632b373d16ed1a/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/7f78fb44cf41e3666a4a74bed270890905aada23adcde46d84632b373d16ed1a/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:666: in test_copy_file_to_container
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7f78fb44cf41e3666a4a74bed270890905aada23adcde46d84632b373d16ed1a/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ArchiveTest" name="test_get_file_archive_from_container" time="3.709"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4565142ae2cdc535796c357ebf7e1e5263919a0a7f59b2402a4871fef789a66f/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/4565142ae2cdc535796c357ebf7e1e5263919a0a7f59b2402a4871fef789a66f/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:625: in test_get_file_archive_from_container
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4565142ae2cdc535796c357ebf7e1e5263919a0a7f59b2402a4871fef789a66f/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ArchiveTest" name="test_get_file_stat_from_container" time="3.648"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/10f54502f7eed919263edb65af29f03cabf679e489a29ab44680d08c10287573/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/10f54502f7eed919263edb65af29f03cabf679e489a29ab44680d08c10287573/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:643: in test_get_file_stat_from_container
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/10f54502f7eed919263edb65af29f03cabf679e489a29ab44680d08c10287573/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.RenameContainerTest" name="test_rename_container" time="4.692" /><testcase classname="tests.integration.api_container_test.StartContainerTest" name="test_run_shlex_commands" time="3.676"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/05d46784394dbbc64e5e0593dd9ab9c01b97b94c9e69cb506de3fbd8af88f38b/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/05d46784394dbbc64e5e0593dd9ab9c01b97b94c9e69cb506de3fbd8af88f38b/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:755: in test_run_shlex_commands
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/05d46784394dbbc64e5e0593dd9ab9c01b97b94c9e69cb506de3fbd8af88f38b/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.StartContainerTest" name="test_start_container" time="3.708"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/13bb1c4751420178e889f4e845485d010f1e564124c3122e7f04fadbaa3b6c1c/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/13bb1c4751420178e889f4e845485d010f1e564124c3122e7f04fadbaa3b6c1c/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:712: in test_start_container
    self.client.start(res['Id'])
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/13bb1c4751420178e889f4e845485d010f1e564124c3122e7f04fadbaa3b6c1c/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.StartContainerTest" name="test_start_container_with_dict_instead_of_id" time="3.666"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/23dd8949e378af760893906c4174552580fc4520348a3402d486f6afd8036a74/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/23dd8949e378af760893906c4174552580fc4520348a3402d486f6afd8036a74/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:728: in test_start_container_with_dict_instead_of_id
    self.client.start(res)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/23dd8949e378af760893906c4174552580fc4520348a3402d486f6afd8036a74/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.WaitTest" name="test_wait" time="4.180"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/576496c52c080f5dd2a151368b9c3a5ac3dc62bf13a13b7772e013b7bb71a663/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/576496c52c080f5dd2a151368b9c3a5ac3dc62bf13a13b7772e013b7bb71a663/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:766: in test_wait
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/576496c52c080f5dd2a151368b9c3a5ac3dc62bf13a13b7772e013b7bb71a663/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.WaitTest" name="test_wait_with_condition" time="4.977"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/50b98375f843a66acda88733ea560aa8b842ef267f04a13c7e02bfd1417c445b/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/50b98375f843a66acda88733ea560aa8b842ef267f04a13c7e02bfd1417c445b/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:800: in test_wait_with_condition
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/50b98375f843a66acda88733ea560aa8b842ef267f04a13c7e02bfd1417c445b/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.WaitTest" name="test_wait_with_dict_instead_of_id" time="3.745"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2874684f5a14c808da8617f6f4c4c2d2e7c52e5aa5aed90bf03a5f49cd580270/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/2874684f5a14c808da8617f6f4c4c2d2e7c52e5aa5aed90bf03a5f49cd580270/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:779: in test_wait_with_dict_instead_of_id
    self.client.start(res)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2874684f5a14c808da8617f6f4c4c2d2e7c52e5aa5aed90bf03a5f49cd580270/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs" time="3.791"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b7ca036ca434eff6e9e627601fe90b235a4d7e5ca21005d6afa5c7c874da1158/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b7ca036ca434eff6e9e627601fe90b235a4d7e5ca21005d6afa5c7c874da1158/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:814: in test_logs
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b7ca036ca434eff6e9e627601fe90b235a4d7e5ca21005d6afa5c7c874da1158/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_streaming_and_follow" time="3.800"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/fb8be8b9126daccd9ed8aebb0b3cbfbe4a45242863ed9b99bfff116ffde17dd4/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/fb8be8b9126daccd9ed8aebb0b3cbfbe4a45242863ed9b99bfff116ffde17dd4/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:841: in test_logs_streaming_and_follow
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/fb8be8b9126daccd9ed8aebb0b3cbfbe4a45242863ed9b99bfff116ffde17dd4/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_streaming_and_follow_and_cancel" time="3.529"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/9d46ddf02f8c538e6c2aa5246717348dd5fdba36144cc16a1da2b38c2cb73b3f/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/9d46ddf02f8c538e6c2aa5246717348dd5fdba36144cc16a1da2b38c2cb73b3f/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:861: in test_logs_streaming_and_follow_and_cancel
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/9d46ddf02f8c538e6c2aa5246717348dd5fdba36144cc16a1da2b38c2cb73b3f/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_tail_option" time="3.507"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/06c453df2e34b52f37b6e15f6c34c51233047ac5b498a8baaeb3a0017fbff8ed/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/06c453df2e34b52f37b6e15f6c34c51233047ac5b498a8baaeb3a0017fbff8ed/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:828: in test_logs_tail_option
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/06c453df2e34b52f37b6e15f6c34c51233047ac5b498a8baaeb3a0017fbff8ed/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_with_dict_instead_of_id" time="3.369"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6ed08394868bde999086f0b40312382b06bd35e419dc8164653127e5bace2aa9/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6ed08394868bde999086f0b40312382b06bd35e419dc8164653127e5bace2aa9/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:879: in test_logs_with_dict_instead_of_id
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6ed08394868bde999086f0b40312382b06bd35e419dc8164653127e5bace2aa9/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_with_tail_0" time="3.431"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c67d56711272d46fb5857e39c293e60b67c1e03900683f9637bde0a603e3674b/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/c67d56711272d46fb5857e39c293e60b67c1e03900683f9637bde0a603e3674b/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:892: in test_logs_with_tail_0
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c67d56711272d46fb5857e39c293e60b67c1e03900683f9637bde0a603e3674b/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.LogsTest" name="test_logs_with_until" time="3.522"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/614b50185749f60bab033707fe275fd386bbb4ce83bd7cac123679f0c5353fcb/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/614b50185749f60bab033707fe275fd386bbb4ce83bd7cac123679f0c5353fcb/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:906: in test_logs_with_until
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/614b50185749f60bab033707fe275fd386bbb4ce83bd7cac123679f0c5353fcb/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.DiffTest" name="test_diff" time="3.444"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2da6f504b70165a4c0fdcf07968a11f59a8c8df5e525f102207c60f5dc8e84d3/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/2da6f504b70165a4c0fdcf07968a11f59a8c8df5e525f102207c60f5dc8e84d3/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:919: in test_diff
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2da6f504b70165a4c0fdcf07968a11f59a8c8df5e525f102207c60f5dc8e84d3/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.DiffTest" name="test_diff_with_dict_instead_of_id" time="3.497"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/cc366afb10fcb2567c24e5d3309091b0fbc47595aa9932348fa4345d28c577a6/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/cc366afb10fcb2567c24e5d3309091b0fbc47595aa9932348fa4345d28c577a6/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:932: in test_diff_with_dict_instead_of_id
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/cc366afb10fcb2567c24e5d3309091b0fbc47595aa9932348fa4345d28c577a6/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.StopTest" name="test_stop" time="3.445"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/5e70619877fef4478b39db18953748538cffc16b5a03db839c1e3163f99c2935/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/5e70619877fef4478b39db18953748538cffc16b5a03db839c1e3163f99c2935/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:947: in test_stop
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/5e70619877fef4478b39db18953748538cffc16b5a03db839c1e3163f99c2935/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.StopTest" name="test_stop_with_dict_instead_of_id" time="3.353"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/71a5e0f3bcc4acca2c3f9605c40b47094f4e2ba555d500f3c6ae6b3b1bf0b7cd/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/71a5e0f3bcc4acca2c3f9605c40b47094f4e2ba555d500f3c6ae6b3b1bf0b7cd/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:960: in test_stop_with_dict_instead_of_id
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/71a5e0f3bcc4acca2c3f9605c40b47094f4e2ba555d500f3c6ae6b3b1bf0b7cd/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill" time="3.449"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/365acb9b6377c246a0f3a893b249b13075c8814a7380105a9c8551b36e127e9c/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/365acb9b6377c246a0f3a893b249b13075c8814a7380105a9c8551b36e127e9c/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:974: in test_kill
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/365acb9b6377c246a0f3a893b249b13075c8814a7380105a9c8551b36e127e9c/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill_with_dict_instead_of_id" time="3.476"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b5da33b76957aa705b75e9270645186866185869c260643b6901e9af819e6a55/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b5da33b76957aa705b75e9270645186866185869c260643b6901e9af819e6a55/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:988: in test_kill_with_dict_instead_of_id
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b5da33b76957aa705b75e9270645186866185869c260643b6901e9af819e6a55/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill_with_signal" time="3.722"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a8173d9b0c713e8e4f90e8c6c2b17444a41388812b213e89c92d6a2b82b49a66/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a8173d9b0c713e8e4f90e8c6c2b17444a41388812b213e89c92d6a2b82b49a66/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1002: in test_kill_with_signal
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a8173d9b0c713e8e4f90e8c6c2b17444a41388812b213e89c92d6a2b82b49a66/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill_with_signal_integer" time="3.514"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/31823347155cf5d893261e1c3e80efe723c3a02c6f3909f9fc954776c387812b/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/31823347155cf5d893261e1c3e80efe723c3a02c6f3909f9fc954776c387812b/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1033: in test_kill_with_signal_integer
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/31823347155cf5d893261e1c3e80efe723c3a02c6f3909f9fc954776c387812b/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.KillTest" name="test_kill_with_signal_name" time="3.704"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2c472f7e58100477a6d95d86ddac3229c87c74d6ecb1d913b3a5cf04c1abbe04/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/2c472f7e58100477a6d95d86ddac3229c87c74d6ecb1d913b3a5cf04c1abbe04/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1018: in test_kill_with_signal_name
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2c472f7e58100477a6d95d86ddac3229c87c74d6ecb1d913b3a5cf04c1abbe04/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.PortTest" name="test_port" time="3.097"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error (&quot;container create: unable to find network configuration for bridge: network not found&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1060: in test_port
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("container create: unable to find network configuration for bridge: network not found")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ContainerTopTest" name="test_top" time="3.457"><skipped type="pytest.xfail" message="Output of docker top depends on host distro, and is not formalized." /></testcase><testcase classname="tests.integration.api_container_test.ContainerTopTest" name="test_top_with_psargs" time="3.314"><skipped type="pytest.xfail" message="Output of docker top depends on host distro, and is not formalized." /></testcase><testcase classname="tests.integration.api_container_test.RestartContainerTest" name="test_restart" time="3.433"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/31f865b9f31590b6ddf967cfed531328c3d54e3c93b9a38c9fa2b0ba451d3790/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/31f865b9f31590b6ddf967cfed531328c3d54e3c93b9a38c9fa2b0ba451d3790/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1125: in test_restart
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/31f865b9f31590b6ddf967cfed531328c3d54e3c93b9a38c9fa2b0ba451d3790/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.RestartContainerTest" name="test_restart_with_dict_instead_of_id" time="3.292"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c6c6f07ed489af3a6c328b42b64e9e6c7f5a273d4d40edd677a62a0c5d7545f7/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/c6c6f07ed489af3a6c328b42b64e9e6c7f5a273d4d40edd677a62a0c5d7545f7/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1154: in test_restart_with_dict_instead_of_id
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c6c6f07ed489af3a6c328b42b64e9e6c7f5a273d4d40edd677a62a0c5d7545f7/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.RestartContainerTest" name="test_restart_with_low_timeout" time="3.479"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/68065e39d71193047623f45c31aefe5bb02574ef364d32ddbdb9f673409c3a69/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/68065e39d71193047623f45c31aefe5bb02574ef364d32ddbdb9f673409c3a69/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1143: in test_restart_with_low_timeout
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/68065e39d71193047623f45c31aefe5bb02574ef364d32ddbdb9f673409c3a69/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.RemoveContainerTest" name="test_remove" time="3.311"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b4047527c5cab7fe5631116618b1ce0b32a3751b751c0d288cba29434bdaacf5/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b4047527c5cab7fe5631116618b1ce0b32a3751b751c0d288cba29434bdaacf5/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1175: in test_remove
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b4047527c5cab7fe5631116618b1ce0b32a3751b751c0d288cba29434bdaacf5/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.RemoveContainerTest" name="test_remove_with_dict_instead_of_id" time="3.513"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/257c86b0a3ab29a4026cb2a435c2eb0560923c08e6ae0c080a65593f2f1de8c8/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/257c86b0a3ab29a4026cb2a435c2eb0560923c08e6ae0c080a65593f2f1de8c8/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1185: in test_remove_with_dict_instead_of_id
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/257c86b0a3ab29a4026cb2a435c2eb0560923c08e6ae0c080a65593f2f1de8c8/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_attach_no_stream" time="3.515"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e84a7eb2a4917b3bc75790445405f25a52a54e1e20761280f3a53b4339498f11/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e84a7eb2a4917b3bc75790445405f25a52a54e1e20761280f3a53b4339498f11/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1228: in test_attach_no_stream
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e84a7eb2a4917b3bc75790445405f25a52a54e1e20761280f3a53b4339498f11/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_attach_stream_and_cancel" time="4.147"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/00952326f0150b4e6b2d74f1d96cdb5c3445a8c7d8ab1afb386ad01ae6f263c5/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/00952326f0150b4e6b2d74f1d96cdb5c3445a8c7d8ab1afb386ad01ae6f263c5/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1244: in test_attach_stream_and_cancel
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/00952326f0150b4e6b2d74f1d96cdb5c3445a8c7d8ab1afb386ad01ae6f263c5/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_detach_with_arg" time="3.496"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c22af69c706223492cf5ed9b5f42171f7fcc417a89963ed6d021c40703f41ac6/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/c22af69c706223492cf5ed9b5f42171f7fcc417a89963ed6d021c40703f41ac6/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1298: in test_detach_with_arg
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c22af69c706223492cf5ed9b5f42171f7fcc417a89963ed6d021c40703f41ac6/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_detach_with_config_file" time="3.659"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/9244c87fd216c1d9ba870448a805243c37731d34d5d7778d7f058bd8c612afb1/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/9244c87fd216c1d9ba870448a805243c37731d34d5d7778d7f058bd8c612afb1/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1281: in test_detach_with_config_file
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/9244c87fd216c1d9ba870448a805243c37731d34d5d7778d7f058bd8c612afb1/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_detach_with_default" time="3.802"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2da7ffa871a8491f2b3fafe9364e9e3689252187f8576846d08d89591e234f7c/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/2da7ffa871a8491f2b3fafe9364e9e3689252187f8576846d08d89591e234f7c/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1262: in test_detach_with_default
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2da7ffa871a8491f2b3fafe9364e9e3689252187f8576846d08d89591e234f7c/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_run_container_reading_socket" time="4.374"><failure message="docker.errors.APIError: 409 Client Error for http+docker://localhost/v1.40/containers/e67ecf0f4e5b8b8d6983b9955037e9e2e4032e65d9d57295af95021f09c17d4c/attach?stdout=1&amp;stream=1&amp;logs=1: Conflict (&quot;error preparing container e67ecf0f4e5b8b8d6983b9955037e9e2e4032e65d9d57295af95021f09c17d4c for attach: container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 409 Client Error: Conflict for url: http+docker://localhost/v1.40/containers/e67ecf0f4e5b8b8d6983b9955037e9e2e4032e65d9d57295af95021f09c17d4c/attach?stdout=1&amp;stream=1&amp;logs=1

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1212: in test_run_container_reading_socket
    pty_stdout = self.client.attach_socket(container, opts)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:108: in attach_socket
    return self._get_raw_response_socket(
docker/api/client.py:346: in _get_raw_response_socket
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 409 Client Error for http+docker://localhost/v1.40/containers/e67ecf0f4e5b8b8d6983b9955037e9e2e4032e65d9d57295af95021f09c17d4c/attach?stdout=1&amp;stream=1&amp;logs=1: Conflict ("error preparing container e67ecf0f4e5b8b8d6983b9955037e9e2e4032e65d9d57295af95021f09c17d4c for attach: container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.AttachContainerTest" name="test_run_container_streaming" time="3.716"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4df1be8e9f486a0e3da029f5661ce20a9c821f1edaad5606d0a2206a1f75c397/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/4df1be8e9f486a0e3da029f5661ce20a9c821f1edaad5606d0a2206a1f75c397/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1199: in test_run_container_streaming
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4df1be8e9f486a0e3da029f5661ce20a9c821f1edaad5606d0a2206a1f75c397/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.PauseTest" name="test_pause_unpause" time="3.935"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/cc0f32e52543f10e5ffee5df94f52aa0f9345c03b7d2ddd0ed6e83e9802df447/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/cc0f32e52543f10e5ffee5df94f52aa0f9345c03b7d2ddd0ed6e83e9802df447/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1313: in test_pause_unpause
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/cc0f32e52543f10e5ffee5df94f52aa0f9345c03b7d2ddd0ed6e83e9802df447/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.PruneTest" name="test_prune_containers" time="3.502"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/734b814fff0317a102caed976160ff16dda4b7a288430320e0e72033029616f0/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/734b814fff0317a102caed976160ff16dda4b7a288430320e0e72033029616f0/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1344: in test_prune_containers
    self.client.start(container1)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/734b814fff0317a102caed976160ff16dda4b7a288430320e0e72033029616f0/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.GetContainerStatsTest" name="test_get_container_stats_no_stream" time="3.033"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/701bc035d92c3fb2b15f14b287ea96bd56e7b0eca2436ce24160c3f53f54b0ca/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/701bc035d92c3fb2b15f14b287ea96bd56e7b0eca2436ce24160c3f53f54b0ca/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1359: in test_get_container_stats_no_stream
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/701bc035d92c3fb2b15f14b287ea96bd56e7b0eca2436ce24160c3f53f54b0ca/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ContainerUpdateTest" name="test_restart_policy_update" time="3.250"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/ae291b6f6f774c3b857c77de0b845bde7a3f44e800c180677595ac339b117046/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/ae291b6f6f774c3b857c77de0b845bde7a3f44e800c180677595ac339b117046/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1415: in test_restart_policy_update
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/ae291b6f6f774c3b857c77de0b845bde7a3f44e800c180677595ac339b117046/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ContainerUpdateTest" name="test_update_container" time="3.141"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/5baa271b006d04dadaac8a9ceb8bd06af1e08f006cca5f125ab1ddf2ac4ae9c4/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/5baa271b006d04dadaac8a9ceb8bd06af1e08f006cca5f125ab1ddf2ac4ae9c4/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1393: in test_update_container
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/5baa271b006d04dadaac8a9ceb8bd06af1e08f006cca5f125ab1ddf2ac4ae9c4/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ContainerCPUTest" name="test_container_cpu_shares" time="3.231"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7f773df8044117fb861f7839562e7001bccbcdedde33759e275f74ba3d9233d1/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/7f773df8044117fb861f7839562e7001bccbcdedde33759e275f74ba3d9233d1/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1438: in test_container_cpu_shares
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7f773df8044117fb861f7839562e7001bccbcdedde33759e275f74ba3d9233d1/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ContainerCPUTest" name="test_container_cpuset" time="3.053"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/471164768a8f8cc571c682c62a20fe7d843fb5959a0148b65e532435e54f417d/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/471164768a8f8cc571c682c62a20fe7d843fb5959a0148b65e532435e54f417d/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1450: in test_container_cpuset
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/471164768a8f8cc571c682c62a20fe7d843fb5959a0148b65e532435e54f417d/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_container_test.ContainerCPUTest" name="test_create_with_runtime" time="2.896"><failure message="AssertionError: assert 'oci' == 'runc'&#10;  - runc&#10;  + oci">tests/integration/api_container_test.py:1461: in test_create_with_runtime
    assert config['HostConfig']['Runtime'] == 'runc'
E   AssertionError: assert 'oci' == 'runc'
E     - runc
E     + oci</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_detach_with_config_file" time="3.070"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/1039dd2396f7d1c97ef126990bee0d0987e1c7d2cb85c3574fab5db137f316de/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/1039dd2396f7d1c97ef126990bee0d0987e1c7d2cb85c3574fab5db137f316de/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:218: in test_detach_with_config_file
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/1039dd2396f7d1c97ef126990bee0d0987e1c7d2cb85c3574fab5db137f316de/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_detach_with_default" time="3.000"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/efe3d428607d709eb1e91019c4d29025b48b4e1e0f49787f590e40728cf0145b/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/efe3d428607d709eb1e91019c4d29025b48b4e1e0f49787f590e40728cf0145b/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:199: in test_detach_with_default
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/efe3d428607d709eb1e91019c4d29025b48b4e1e0f49787f590e40728cf0145b/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_as_root" time="2.940"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/63c6e51c2da886b38491f242bc3ae3add922e0df296f6e204d142d22653a4667/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/63c6e51c2da886b38491f242bc3ae3add922e0df296f6e204d142d22653a4667/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:93: in test_exec_command_as_root
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/63c6e51c2da886b38491f242bc3ae3add922e0df296f6e204d142d22653a4667/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_as_user" time="2.952"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/875d091516ef96ebbef9d87fcc6f8fdf418f59e35c622eadfc11be245bf44322/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/875d091516ef96ebbef9d87fcc6f8fdf418f59e35c622eadfc11be245bf44322/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:80: in test_exec_command_as_user
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/875d091516ef96ebbef9d87fcc6f8fdf418f59e35c622eadfc11be245bf44322/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_streaming" time="2.943"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/84c3cabb3e9f4b45d7f41db0ce5f56756c2bdcb0e74e0b8a4fa6d1c51452ef36/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/84c3cabb3e9f4b45d7f41db0ce5f56756c2bdcb0e74e0b8a4fa6d1c51452ef36/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:107: in test_exec_command_streaming
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/84c3cabb3e9f4b45d7f41db0ce5f56756c2bdcb0e74e0b8a4fa6d1c51452ef36/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_string" time="2.908"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/efac526cd9ca4cd232e4bcfffe16ed55faa2807f1b066e773f34a1637113c5c0/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/efac526cd9ca4cd232e4bcfffe16ed55faa2807f1b066e773f34a1637113c5c0/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:67: in test_exec_command_string
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/efac526cd9ca4cd232e4bcfffe16ed55faa2807f1b066e773f34a1637113c5c0/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_with_env" time="3.026"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/374b293f8d3762ad44c22f67a811d96235facc0c3f501dffd80e83f1b30a009d/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/374b293f8d3762ad44c22f67a811d96235facc0c3f501dffd80e83f1b30a009d/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:173: in test_exec_command_with_env
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/374b293f8d3762ad44c22f67a811d96235facc0c3f501dffd80e83f1b30a009d/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_command_with_workdir" time="2.997"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7faf8844b8e0f8700ac858523997c41821be770c4f94b7799459c1042db229eb/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/7faf8844b8e0f8700ac858523997c41821be770c4f94b7799459c1042db229eb/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:188: in test_exec_command_with_workdir
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7faf8844b8e0f8700ac858523997c41821be770c4f94b7799459c1042db229eb/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_inspect" time="2.987"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/83fe2f06cd882c671d30bb660a0c14d10b74490a4df402017c20b8cff99defa1/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/83fe2f06cd882c671d30bb660a0c14d10b74490a4df402017c20b8cff99defa1/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:158: in test_exec_inspect
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/83fe2f06cd882c671d30bb660a0c14d10b74490a4df402017c20b8cff99defa1/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_start_detached" time="3.024"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a16bad73b9f6364039e58b074bbe92f64f29477a08dfb9de8d55316bf345d462/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a16bad73b9f6364039e58b074bbe92f64f29477a08dfb9de8d55316bf345d462/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:143: in test_exec_start_detached
    self.client.start(container_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a16bad73b9f6364039e58b074bbe92f64f29477a08dfb9de8d55316bf345d462/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_exec_start_socket" time="3.038"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/9bcf578d6c6e9afefead656eb6509e1b126155d839481eb6e3963d7ebda4a6a1/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/9bcf578d6c6e9afefead656eb6509e1b126155d839481eb6e3963d7ebda4a6a1/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:121: in test_exec_start_socket
    self.client.start(container_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/9bcf578d6c6e9afefead656eb6509e1b126155d839481eb6e3963d7ebda4a6a1/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_execute_command" time="3.075"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6662b01e58f95e98112a396ca55552ddbca32357ce2876844964777baae3b02d/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6662b01e58f95e98112a396ca55552ddbca32357ce2876844964777baae3b02d/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:54: in test_execute_command
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6662b01e58f95e98112a396ca55552ddbca32357ce2876844964777baae3b02d/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecTest" name="test_execute_command_with_proxy_env" time="3.064"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7f5a716a1ee566358f4eaf9e79b5aab617c5189ba6e392d8e136ec4da85cb607/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/7f5a716a1ee566358f4eaf9e79b5aab617c5189ba6e392d8e136ec4da85cb607/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:21: in test_execute_command_with_proxy_env
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7f5a716a1ee566358f4eaf9e79b5aab617c5189ba6e392d8e136ec4da85cb607/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_no_stream_demux" time="2.040"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f051cd39978ceb2215ee52977c0a68013db80a1c3a1a784ad05cd70a7f162245/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/f051cd39978ceb2215ee52977c0a68013db80a1c3a1a784ad05cd70a7f162245/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:246: in setUp
    self.client.start(self.container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f051cd39978ceb2215ee52977c0a68013db80a1c3a1a784ad05cd70a7f162245/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_no_stream_no_demux" time="2.048"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8d9eb1987c090fd6143d8f17ede043da9370bfd2491d245f48465b1ef16e8a88/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/8d9eb1987c090fd6143d8f17ede043da9370bfd2491d245f48465b1ef16e8a88/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:246: in setUp
    self.client.start(self.container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8d9eb1987c090fd6143d8f17ede043da9370bfd2491d245f48465b1ef16e8a88/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_stream_demux" time="2.119"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4f2cbc65ad747bb1fce8a9ce061dad1a9a55eb1d198d276c74582472f36b5e2f/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/4f2cbc65ad747bb1fce8a9ce061dad1a9a55eb1d198d276c74582472f36b5e2f/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:246: in setUp
    self.client.start(self.container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4f2cbc65ad747bb1fce8a9ce061dad1a9a55eb1d198d276c74582472f36b5e2f/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_stream_no_demux" time="2.110"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8edf98dc3457049222f678ff35b633fd8898f0c3575193a91881165d8e4ea885/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/8edf98dc3457049222f678ff35b633fd8898f0c3575193a91881165d8e4ea885/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:246: in setUp
    self.client.start(self.container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8edf98dc3457049222f678ff35b633fd8898f0c3575193a91881165d8e4ea885/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_tty_no_stream_demux" time="2.037"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2f7c658c6323ef63639d2485db09c31b99c5e46ddf02dac1e632c2c8a59da714/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/2f7c658c6323ef63639d2485db09c31b99c5e46ddf02dac1e632c2c8a59da714/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:246: in setUp
    self.client.start(self.container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2f7c658c6323ef63639d2485db09c31b99c5e46ddf02dac1e632c2c8a59da714/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_tty_no_stream_no_demux" time="2.044"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/44843cf1902372b415a61b8b297e07f83bf8aa3c0274fc54b2e10da30554ff09/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/44843cf1902372b415a61b8b297e07f83bf8aa3c0274fc54b2e10da30554ff09/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:246: in setUp
    self.client.start(self.container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/44843cf1902372b415a61b8b297e07f83bf8aa3c0274fc54b2e10da30554ff09/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_tty_stream_demux" time="2.086"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/83600c581a09c9e690b639ccbf0698c66c25e05efae97af270300cee2b15a5df/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/83600c581a09c9e690b639ccbf0698c66c25e05efae97af270300cee2b15a5df/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:246: in setUp
    self.client.start(self.container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/83600c581a09c9e690b639ccbf0698c66c25e05efae97af270300cee2b15a5df/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_exec_test.ExecDemuxTest" name="test_exec_command_tty_stream_no_demux" time="2.061"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/ce7eace8e1625026bebb2d202ca7317a9059bc1931f46ca7e2021babe1dfb2f2/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/ce7eace8e1625026bebb2d202ca7317a9059bc1931f46ca7e2021babe1dfb2f2/start

During handling of the above exception, another exception occurred:
tests/integration/api_exec_test.py:246: in setUp
    self.client.start(self.container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/ce7eace8e1625026bebb2d202ca7317a9059bc1931f46ca7e2021babe1dfb2f2/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_healthcheck_test.HealthcheckTest" name="test_healthcheck_fails" time="3.008"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/780fc6aa8513704925b60de2500780fa974d82883fd128cdd097fe147d1801ce/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/780fc6aa8513704925b60de2500780fa974d82883fd128cdd097fe147d1801ce/start

During handling of the above exception, another exception occurred:
tests/integration/api_healthcheck_test.py:50: in test_healthcheck_fails
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/780fc6aa8513704925b60de2500780fa974d82883fd128cdd097fe147d1801ce/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_healthcheck_test.HealthcheckTest" name="test_healthcheck_passes" time="2.928"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/0aa3140b869cc56b178bab1621953a1f3997939e141d4394c5043ee8e2cdb10f/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/0aa3140b869cc56b178bab1621953a1f3997939e141d4394c5043ee8e2cdb10f/start

During handling of the above exception, another exception occurred:
tests/integration/api_healthcheck_test.py:37: in test_healthcheck_passes
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/0aa3140b869cc56b178bab1621953a1f3997939e141d4394c5043ee8e2cdb10f/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_healthcheck_test.HealthcheckTest" name="test_healthcheck_shell_command" time="2.701"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error (&quot;fill out specgen: healthcheck-retries must be greater than 0&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_healthcheck_test.py:18: in test_healthcheck_shell_command
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("fill out specgen: healthcheck-retries must be greater than 0")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_healthcheck_test.HealthcheckTest" name="test_healthcheck_start_period" time="2.950"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b4ef4ed89a09acddf2fbe1a0fce15d9e1f3dc3275ff6f8f0ad7cc9eca37e101a/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b4ef4ed89a09acddf2fbe1a0fce15d9e1f3dc3275ff6f8f0ad7cc9eca37e101a/start

During handling of the above exception, another exception occurred:
tests/integration/api_healthcheck_test.py:67: in test_healthcheck_start_period
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b4ef4ed89a09acddf2fbe1a0fce15d9e1f3dc3275ff6f8f0ad7cc9eca37e101a/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.ListImagesTest" name="test_images" time="3.762" /><testcase classname="tests.integration.api_image_test.ListImagesTest" name="test_images_quiet" time="2.876" /><testcase classname="tests.integration.api_image_test.PullImageTest" name="test_pull" time="5.817" /><testcase classname="tests.integration.api_image_test.PullImageTest" name="test_pull_invalid_platform" time="6.637"><failure message="Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;">tests/integration/api_image_test.py:69: in test_pull_invalid_platform
    self.client.pull('hello-world', platform='foobar')
E   Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.PullImageTest" name="test_pull_streaming" time="5.760" /><testcase classname="tests.integration.api_image_test.CommitTest" name="test_commit" time="3.014"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c9499505ac8bd54a959c40b2e1f4f69618ac92f49b01e8712ec9ecf4ea77dff0/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/c9499505ac8bd54a959c40b2e1f4f69618ac92f49b01e8712ec9ecf4ea77dff0/start

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:81: in test_commit
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c9499505ac8bd54a959c40b2e1f4f69618ac92f49b01e8712ec9ecf4ea77dff0/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.CommitTest" name="test_commit_with_changes" time="3.002"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f9e494dafeb3dc93dae9ad61d6d6b85a448d9706073d56c8f5369eef316a325b/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/f9e494dafeb3dc93dae9ad61d6d6b85a448d9706073d56c8f5369eef316a325b/start

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:100: in test_commit_with_changes
    self.client.start(cid)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f9e494dafeb3dc93dae9ad61d6d6b85a448d9706073d56c8f5369eef316a325b/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.RemoveImageTest" name="test_remove" time="2.921"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/9b86da7067efb353fe7a49a40c0d26e63a930f4b32f53c6324f2b52f8e8089b5/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/9b86da7067efb353fe7a49a40c0d26e63a930f4b32f53c6324f2b52f8e8089b5/start

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:116: in test_remove
    self.client.start(id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/9b86da7067efb353fe7a49a40c0d26e63a930f4b32f53c6324f2b52f8e8089b5/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_get_load_image" time="5.930"><failure message="AssertionError: assert False&#10; +  where False = any([])">tests/integration/api_image_test.py:266: in test_get_load_image
    assert any([
E   AssertionError: assert False
E    +  where False = any([])</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_from_bytes" time="2.797" /><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_from_file" time="2.838" /><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_from_stream" time="2.837" /><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_from_url" time="0.000"><skipped type="pytest.skip" message="Doesn't work inside a container - FIXME">/home/riyad/src/docker-py/tests/integration/api_image_test.py:291: Doesn't work inside a container - FIXME</skipped><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_image_from_data_with_changes" time="2.804" /><testcase classname="tests.integration.api_image_test.ImportImageTest" name="test_import_image_with_changes" time="2.849" /><testcase classname="tests.integration.api_image_test.PruneImagesTest" name="test_prune_images" time="5.776"><failure message="AssertionError: assert 0 &gt; 0">tests/integration/api_image_test.py:332: in test_prune_images
    assert result['SpaceReclaimed'] &gt; 0
E   AssertionError: assert 0 &gt; 0</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.SaveLoadImagesTest" name="test_get_image_load_image" time="2.839"><failure message="AssertionError: assert False is True">tests/integration/api_image_test.py:360: in test_get_image_load_image
    assert success is True
E   AssertionError: assert False is True</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------
{'stream': 'Loaded image: docker.io/library/alpine:3.10\n'}

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_image_test.InspectDistributionTest" name="test_inspect_distribution" time="2.679"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/distribution/busybox:latest/json: Not Found (&quot;Path /v1.40/distribution/busybox:latest/json is not supported&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/distribution/busybox:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:366: in test_inspect_distribution
    data = self.client.inspect_distribution('busybox:latest')
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:289: in inspect_distribution
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/distribution/busybox:latest/json: Not Found ("Path /v1.40/distribution/busybox:latest/json is not supported")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_and_disconnect_container" time="3.049"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/01eeb043819c967f5f6478b87b99fdde2fa43e981b17c9553a3c61c40f684e0a/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/01eeb043819c967f5f6478b87b99fdde2fa43e981b17c9553a3c61c40f684e0a/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:93: in test_connect_and_disconnect_container
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/01eeb043819c967f5f6478b87b99fdde2fa43e981b17c9553a3c61c40f684e0a/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_and_force_disconnect_container" time="2.941"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6da3d165e9b008059adcc189c8c26d9eba2ea89c843b9b41aa12ec650142c090/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6da3d165e9b008059adcc189c8c26d9eba2ea89c843b9b41aa12ec650142c090/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:120: in test_connect_and_force_disconnect_container
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6da3d165e9b008059adcc189c8c26d9eba2ea89c843b9b41aa12ec650142c090/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_on_container_create" time="3.248"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/09ec404027d0b4af11e5b6ce854bf4f86fa0a4d73306f92cf25e9cefba73e792/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/09ec404027d0b4af11e5b6ce854bf4f86fa0a4d73306f92cf25e9cefba73e792/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:165: in test_connect_on_container_create
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/09ec404027d0b4af11e5b6ce854bf4f86fa0a4d73306f92cf25e9cefba73e792/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_with_aliases" time="2.993"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3a5ef0ea1d6ddb23c34c211d8c8f3f9597512d37b09d7bde6010623ae43839f1/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/3a5ef0ea1d6ddb23c34c211d8c8f3f9597512d37b09d7bde6010623ae43839f1/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:145: in test_connect_with_aliases
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3a5ef0ea1d6ddb23c34c211d8c8f3f9597512d37b09d7bde6010623ae43839f1/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_with_ipv4_address" time="3.271"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/846ce0be299bfb1c15f33fdb594d79976e25d2fc79ecf45bc16dd35cd4981c9f/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/846ce0be299bfb1c15f33fdb594d79976e25d2fc79ecf45bc16dd35cd4981c9f/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:369: in test_connect_with_ipv4_address
    container = self.create_and_start(
tests/integration/base.py:124: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/846ce0be299bfb1c15f33fdb594d79976e25d2fc79ecf45bc16dd35cd4981c9f/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_with_ipv6_address" time="4.911"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3c89db1d1a16a87c3e0223b09f26c37bce73af7aa050e5d7ab2275d115dc5cfb/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/3c89db1d1a16a87c3e0223b09f26c37bce73af7aa050e5d7ab2275d115dc5cfb/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:395: in test_connect_with_ipv6_address
    container = self.create_and_start(
tests/integration/base.py:124: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3c89db1d1a16a87c3e0223b09f26c37bce73af7aa050e5d7ab2275d115dc5cfb/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_connect_with_links" time="3.216"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/590edabf0b6a1d4a352d1bfe91b69befd8edc605ee32a2adc96a5e3b71058b50/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/590edabf0b6a1d4a352d1bfe91b69befd8edc605ee32a2adc96a5e3b71058b50/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:333: in test_connect_with_links
    container = self.create_and_start(
tests/integration/base.py:124: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/590edabf0b6a1d4a352d1bfe91b69befd8edc605ee32a2adc96a5e3b71058b50/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_check_duplicate" time="2.745"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/create: Internal Server Error (&quot;the network name dockerpytest_82b4a12829fc5452 is already used&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/create

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:326: in test_create_check_duplicate
    net_id = self.client.create_network(net_name, check_duplicate=False)
docker/api/network.py:153: in create_network
    return self._result(res, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/create: Internal Server Error ("the network name dockerpytest_82b4a12829fc5452 is already used")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_internal_networks" time="2.760" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_ipv6_enabled" time="2.741"><failure message="AssertionError: assert False is True">tests/integration/api_network_test.py:445: in test_create_network_ipv6_enabled
    assert net['EnableIPv6'] is True
E   AssertionError: assert False is True</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_with_host_driver_fails" time="2.687" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_with_ipam_config" time="2.776"><failure message="AssertionError: assert {} is None&#10; +  where {} = &lt;built-in method pop of dict object at 0x7f3e6fb70600&gt;('Options', None)&#10; +    where &lt;built-in method pop of dict object at 0x7f3e6fb70600&gt; = {'Config': [{'Gateway': '172.28.5.254', 'Subnet': '172.28.0.0/16'}], 'Driver': 'default'}.pop">tests/integration/api_network_test.py:62: in test_create_network_with_ipam_config
    assert ipam.pop('Options', None) is None
E   AssertionError: assert {} is None
E    +  where {} = &lt;built-in method pop of dict object at 0x7f3e6fb70600&gt;('Options', None)
E    +    where &lt;built-in method pop of dict object at 0x7f3e6fb70600&gt; = {'Config': [{'Gateway': '172.28.5.254', 'Subnet': '172.28.0.0/16'}], 'Driver': 'default'}.pop</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_with_labels" time="2.752" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_network_with_labels_wrong_type" time="2.704" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_remove_network_with_space_in_name" time="2.794" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_aliases" time="3.261"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b953188042f227b4e16ab5c20f2049f52cb9eb92c3f9d2f2d783d5d945cb1a1c/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b953188042f227b4e16ab5c20f2049f52cb9eb92c3f9d2f2d783d5d945cb1a1c/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:192: in test_create_with_aliases
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b953188042f227b4e16ab5c20f2049f52cb9eb92c3f9d2f2d783d5d945cb1a1c/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_driveropt" time="2.685"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error (&quot;container create: unable to find network configuration for bridge: network not found&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:276: in test_create_with_driveropt
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("container create: unable to find network configuration for bridge: network not found")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_ipv4_address" time="3.237"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7646bc38a90ba8c181400c8b702f15760707b5d9795a93fd263e3a09fcaf65c3/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/7646bc38a90ba8c181400c8b702f15760707b5d9795a93fd263e3a09fcaf65c3/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:219: in test_create_with_ipv4_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7646bc38a90ba8c181400c8b702f15760707b5d9795a93fd263e3a09fcaf65c3/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_ipv6_address" time="4.909"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3f584679f3febac088d3cd29cc6b7294b7445defcc07a25c570c810a6dc1dd70/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/3f584679f3febac088d3cd29cc6b7294b7445defcc07a25c570c810a6dc1dd70/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:245: in test_create_with_ipv6_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3f584679f3febac088d3cd29cc6b7294b7445defcc07a25c570c810a6dc1dd70/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_linklocal_ips" time="2.698"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error (&quot;container create: unable to find network configuration for bridge: network not found&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:255: in test_create_with_linklocal_ips
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("container create: unable to find network configuration for bridge: network not found")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_create_with_links" time="3.233"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/140b6a66ba0cd07293937085d45b07552ded109fded0ee0d49ba3f7525f58343/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/140b6a66ba0cd07293937085d45b07552ded109fded0ee0d49ba3f7525f58343/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:299: in test_create_with_links
    container = self.create_and_start(
tests/integration/base.py:124: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/140b6a66ba0cd07293937085d45b07552ded109fded0ee0d49ba3f7525f58343/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_inspect_network" time="2.778" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_list_networks" time="2.856" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_prune_networks" time="2.728" /><testcase classname="tests.integration.api_network_test.TestNetworks" name="test_remove_network" time="2.779" /><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_create_secret" time="4.477" /><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_create_secret_unicode_data" time="2.750" /><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_inspect_secret" time="2.684" /><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_list_secrets" time="2.690" /><testcase classname="tests.integration.api_secret_test.SecretAPITest" name="test_remove_secret" time="5.459" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_create_volume" time="4.431" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_create_volume_invalid_driver" time="3.533"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/volumes/create: Internal Server Error (&quot;volume perfectcherryblossom uses volume plugin invalid.driver but it could not be retrieved: no volume plugin with name invalid.driver available: required plugin missing&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/volumes/create

During handling of the above exception, another exception occurred:
tests/integration/api_volume_test.py:22: in test_create_volume_invalid_driver
    self.client.create_volume('perfectcherryblossom', driver_name)
docker/api/volume.py:89: in create_volume
    return self._result(self._post_json(url, data=data), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/volumes/create: Internal Server Error ("volume perfectcherryblossom uses volume plugin invalid.driver but it could not be retrieved: no volume plugin with name invalid.driver available: required plugin missing")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_force_remove_volume" time="3.335" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_inspect_nonexistent_volume" time="2.916" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_inspect_volume" time="2.933"><failure message="AssertionError: assert {'CreatedAt':...l/_data', ...} == {'CreatedAt':...l/_data', ...}&#10;  Omitting 6 identical items, use -vv to show&#10;  Differing items:&#10;  {'Options': None} != {'Options': {}}&#10;  Full diff:&#10;    {&#10;     'CreatedAt': '2021-07-01T11:53:15+02:00',&#10;     'Driver': 'local',...&#10;  &#10;  ...Full output truncated (10 lines hidden), use '-vv' to show">tests/integration/api_volume_test.py:38: in test_inspect_volume
    assert volume_info == result
E   AssertionError: assert {'CreatedAt':...l/_data', ...} == {'CreatedAt':...l/_data', ...}
E     Omitting 6 identical items, use -vv to show
E     Differing items:
E     {'Options': None} != {'Options': {}}
E     Full diff:
E       {
E        'CreatedAt': '2021-07-01T11:53:15+02:00',
E        'Driver': 'local',...
E     
E     ...Full output truncated (10 lines hidden), use '-vv' to show</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_list_volumes" time="2.919"><failure message="AssertionError: assert {'CreatedAt': '2021-07-01T11:53:18+02:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...} in [{'CreatedAt': '2021-07-01T11:53:18+02:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...}]">tests/integration/api_volume_test.py:31: in test_list_volumes
    assert volume_info in volumes
E   AssertionError: assert {'CreatedAt': '2021-07-01T11:53:18+02:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...} in [{'CreatedAt': '2021-07-01T11:53:18+02:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...}]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_prune_volumes" time="2.929" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_remove_nonexistent_volume" time="2.911" /><testcase classname="tests.integration.api_volume_test.TestVolumes" name="test_remove_volume" time="2.964" /><testcase classname="tests.integration.client_test.ClientTest" name="test_df" time="9.564" /><testcase classname="tests.integration.client_test.ClientTest" name="test_info" time="0.978" /><testcase classname="tests.integration.client_test.ClientTest" name="test_ping" time="0.004" /><testcase classname="tests.integration.client_test.ClientTest" name="test_version" time="0.981" /><testcase classname="tests.integration.client_test.CancellableEventsTest" name="test_cancel_events" time="2.005" /><testcase classname="tests.integration.context_api_test.ContextLifecycleTest" name="test_context_remove" time="2.789" /><testcase classname="tests.integration.context_api_test.ContextLifecycleTest" name="test_lifecycle" time="2.755" /><testcase classname="tests.integration.context_api_test.ContextLifecycleTest" name="test_load_context_without_orchestrator" time="2.788" /><testcase classname="tests.integration.errors_test.ErrorsTest" name="test_api_error_parses_json" time="3.006"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a7f394f00b2a7a19ae2106214a534473be7e5c87f257a1e04fa2ed2c701d6ef4/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a7f394f00b2a7a19ae2106214a534473be7e5c87f257a1e04fa2ed2c701d6ef4/start

During handling of the above exception, another exception occurred:
tests/integration/errors_test.py:9: in test_api_error_parses_json
    self.client.start(container['Id'])
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a7f394f00b2a7a19ae2106214a534473be7e5c87f257a1e04fa2ed2c701d6ef4/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_get" time="2.074"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/00ed49c8770f15e311550d1d6458d79b596dfdc886fc25425236108bdf78b3da/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/00ed49c8770f15e311550d1d6458d79b596dfdc886fc25425236108bdf78b3da/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:187: in test_get
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/00ed49c8770f15e311550d1d6458d79b596dfdc886fc25425236108bdf78b3da/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_list" time="2.023"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/d371beb94ba10f262109f36f2fe0a25c1aeb8502f5dbce0505e536d82606d74e/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/d371beb94ba10f262109f36f2fe0a25c1aeb8502f5dbce0505e536d82606d74e/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:194: in test_list
    container_id = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/d371beb94ba10f262109f36f2fe0a25c1aeb8502f5dbce0505e536d82606d74e/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_list_sparse" time="2.085"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8013bbc5c778077d959575c526844144c5d2c1c0ac6344a173f8401a4e54fa61/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/8013bbc5c778077d959575c526844144c5d2c1c0ac6344a173f8401a4e54fa61/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:212: in test_list_sparse
    container_id = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8013bbc5c778077d959575c526844144c5d2c1c0ac6344a173f8401a4e54fa61/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run" time="2.159"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a208400d5053759dfb1e2fb77be70cd423765f611ba6ddc2f94ce6c7f01aab2d/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a208400d5053759dfb1e2fb77be70cd423765f611ba6ddc2f94ce6c7f01aab2d/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:18: in test_run
    assert client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a208400d5053759dfb1e2fb77be70cd423765f611ba6ddc2f94ce6c7f01aab2d/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_detach" time="2.063"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7a78f402a989ee7a56f618d5a568299ccb97b5eb7773ec53cb85b32a1dc9f66e/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/7a78f402a989ee7a56f618d5a568299ccb97b5eb7773ec53cb85b32a1dc9f66e/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:24: in test_run_detach
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7a78f402a989ee7a56f618d5a568299ccb97b5eb7773ec53cb85b32a1dc9f66e/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_auto_remove" time="2.075"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/75f55402a88d4331391036b464b1d5153128d8a9cd28d1c55c590eaaf2f64c01/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/75f55402a88d4331391036b464b1d5153128d8a9cd28d1c55c590eaaf2f64c01/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:128: in test_run_with_auto_remove
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/75f55402a88d4331391036b464b1d5153128d8a9cd28d1c55c590eaaf2f64c01/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_auto_remove_error" time="2.097"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2ad65c31d1128772207d7cb06f948252655aa19909b12872166b6a27bfa05b19/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/2ad65c31d1128772207d7cb06f948252655aa19909b12872166b6a27bfa05b19/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:139: in test_run_with_auto_remove_error
    client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2ad65c31d1128772207d7cb06f948252655aa19909b12872166b6a27bfa05b19/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_error" time="1.984"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/261fef339cfc1a067c12f1e22c97b096dcc5e19e971438b99a44890d5e37e0ff/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/261fef339cfc1a067c12f1e22c97b096dcc5e19e971438b99a44890d5e37e0ff/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:32: in test_run_with_error
    client.containers.run("alpine", "cat /test", remove=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/261fef339cfc1a067c12f1e22c97b096dcc5e19e971438b99a44890d5e37e0ff/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_image_that_does_not_exist" time="1.822"><failure message="docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/create: Not Found (&quot;dockerpytest_does_not_exist: image not known&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:41: in test_run_with_image_that_does_not_exist
    client.containers.run("dockerpytest_does_not_exist")
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/create: Not Found ("dockerpytest_does_not_exist: image not known")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_json_file_driver" time="2.089"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c3e4034340da4bd0d1c7c0198cafb960d34623e644854acd68fdb530ff5b1fd2/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/c3e4034340da4bd0d1c7c0198cafb960d34623e644854acd68fdb530ff5b1fd2/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:119: in test_run_with_json_file_driver
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c3e4034340da4bd0d1c7c0198cafb960d34623e644854acd68fdb530ff5b1fd2/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_named_volume" time="2.142"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/35ad5a23d765a2dd1d065e4f3b44f67507b7e5db736dc1a2ba90aa7a23f3b9e4/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/35ad5a23d765a2dd1d065e4f3b44f67507b7e5db736dc1a2ba90aa7a23f3b9e4/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:72: in test_run_with_named_volume
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/35ad5a23d765a2dd1d065e4f3b44f67507b7e5db736dc1a2ba90aa7a23f3b9e4/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_network" time="2.394"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e96a11c39d996842d8bd4ba2107b9075cf2b070f305763c20b10b79929393bf0/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e96a11c39d996842d8bd4ba2107b9075cf2b070f305763c20b10b79929393bf0/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:95: in test_run_with_network
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e96a11c39d996842d8bd4ba2107b9075cf2b070f305763c20b10b79929393bf0/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_none_driver" time="2.085"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2d3b25a662e981807d305ae5b63da18a0aef2f51b82d29aa3c3e4e75d0c360b5/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/2d3b25a662e981807d305ae5b63da18a0aef2f51b82d29aa3c3e4e75d0c360b5/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:110: in test_run_with_none_driver
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2d3b25a662e981807d305ae5b63da18a0aef2f51b82d29aa3c3e4e75d0c360b5/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_proxy_config" time="2.074"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c4da44a0369bf5ea678b710a26e98206d2b2573e5dfa6af9ba16c5cde4df4210/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/c4da44a0369bf5ea678b710a26e98206d2b2573e5dfa6af9ba16c5cde4df4210/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:180: in test_run_with_proxy_config
    out = client.containers.run('alpine', 'sh -c "env"')
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c4da44a0369bf5ea678b710a26e98206d2b2573e5dfa6af9ba16c5cde4df4210/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_streamed_logs" time="2.064"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/23696fcba38182e84a1ecbd1156e1fd0cce2943ed6607d9b014586224aba4abd/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/23696fcba38182e84a1ecbd1156e1fd0cce2943ed6607d9b014586224aba4abd/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:150: in test_run_with_streamed_logs
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/23696fcba38182e84a1ecbd1156e1fd0cce2943ed6607d9b014586224aba4abd/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_streamed_logs_and_cancel" time="2.021"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6e8456354352b80aabd28c8e22c8f50b0041c7136996e13fd7f3c8f6561f86e3/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6e8456354352b80aabd28c8e22c8f50b0041c7136996e13fd7f3c8f6561f86e3/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:162: in test_run_with_streamed_logs_and_cancel
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6e8456354352b80aabd28c8e22c8f50b0041c7136996e13fd7f3c8f6561f86e3/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerCollectionTest" name="test_run_with_volume" time="2.116"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/55e9e6df2fa6c07d5dbdc8725d14eb51f910ef8b9a76b7e6c5b6875e49348463/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/55e9e6df2fa6c07d5dbdc8725d14eb51f910ef8b9a76b7e6c5b6875e49348463/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:50: in test_run_with_volume
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/55e9e6df2fa6c07d5dbdc8725d14eb51f910ef8b9a76b7e6c5b6875e49348463/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_commit" time="2.115"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/72bf60f7c7ffb0f220b6ba656ca65024f5d5ddcba0a846c9a6fdd1ac392e5246/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/72bf60f7c7ffb0f220b6ba656ca65024f5d5ddcba0a846c9a6fdd1ac392e5246/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:235: in test_commit
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/72bf60f7c7ffb0f220b6ba656ca65024f5d5ddcba0a846c9a6fdd1ac392e5246/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_create_with_volume_driver" time="1.910"><failure message="AssertionError: assert '' == 'foo'&#10;  - foo">tests/integration/models_containers_test.py:456: in test_create_with_volume_driver
    assert container.attrs['HostConfig']['VolumeDriver'] == 'foo'
E   AssertionError: assert '' == 'foo'
E     - foo</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_diff" time="2.105"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e866f37e9e9dee444e389a284a34383e6f90ddd78656b24bf8a652b9130865c9/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e866f37e9e9dee444e389a284a34383e6f90ddd78656b24bf8a652b9130865c9/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:248: in test_diff
    container = client.containers.run("alpine", "touch /test", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e866f37e9e9dee444e389a284a34383e6f90ddd78656b24bf8a652b9130865c9/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_exec_run_failed" time="2.065"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6c775e5f451b312d7708eda27b29f1859be6a4daabb99f89a21f834627017355/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6c775e5f451b312d7708eda27b29f1859be6a4daabb99f89a21f834627017355/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:265: in test_exec_run_failed
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6c775e5f451b312d7708eda27b29f1859be6a4daabb99f89a21f834627017355/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_exec_run_success" time="2.039"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7d4fb55a17154e3c22dd845c045b6533dfded10a130d31c3bdcbaf4c8062a9d5/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/7d4fb55a17154e3c22dd845c045b6533dfded10a130d31c3bdcbaf4c8062a9d5/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:255: in test_exec_run_success
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7d4fb55a17154e3c22dd845c045b6533dfded10a130d31c3bdcbaf4c8062a9d5/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_kill" time="2.000"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/86f6243ba3920c2b18ae243008afd76f71a6eed3a2cc6ec9b41084ccbf9819ec/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/86f6243ba3920c2b18ae243008afd76f71a6eed3a2cc6ec9b41084ccbf9819ec/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:274: in test_kill
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/86f6243ba3920c2b18ae243008afd76f71a6eed3a2cc6ec9b41084ccbf9819ec/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_logs" time="2.123"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f7641e05e098939d5dce503e362a2d8718af1b9539b3a84e395abcc40dc6d7d4/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/f7641e05e098939d5dce503e362a2d8718af1b9539b3a84e395abcc40dc6d7d4/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:285: in test_logs
    container = client.containers.run("alpine", "echo hello world",
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f7641e05e098939d5dce503e362a2d8718af1b9539b3a84e395abcc40dc6d7d4/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_pause" time="2.068"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a41a1f2a866a187d40d6cf38927994598040444fb609de570fbdd504e6e4f98a/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a41a1f2a866a187d40d6cf38927994598040444fb609de570fbdd504e6e4f98a/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:293: in test_pause
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a41a1f2a866a187d40d6cf38927994598040444fb609de570fbdd504e6e4f98a/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_ports_target_list" time="2.143"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4394ff3075f82056361491d4a864acb5a64fc7ddadb7c6f3dad1b85a56123222/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/4394ff3075f82056361491d4a864acb5a64fc7ddadb7c6f3dad1b85a56123222/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:394: in test_ports_target_list
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4394ff3075f82056361491d4a864acb5a64fc7ddadb7c6f3dad1b85a56123222/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_ports_target_none" time="2.057"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/285ce02cf9d9683b850c7de08f9bbaa70f1524c8d7d4ba050b190598850e4355/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/285ce02cf9d9683b850c7de08f9bbaa70f1524c8d7d4ba050b190598850e4355/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:354: in test_ports_target_none
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/285ce02cf9d9683b850c7de08f9bbaa70f1524c8d7d4ba050b190598850e4355/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_ports_target_tuple" time="2.098"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/927923307f06c9f8971b828629eb7328fe8cbb799042a7485ad9cf2c6c0ff857/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/927923307f06c9f8971b828629eb7328fe8cbb799042a7485ad9cf2c6c0ff857/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:374: in test_ports_target_tuple
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/927923307f06c9f8971b828629eb7328fe8cbb799042a7485ad9cf2c6c0ff857/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_remove" time="2.021"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/454fe5080c174deae9232ede417a8fd41b5b49fa78c518b4ca909aab742cdfc8/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/454fe5080c174deae9232ede417a8fd41b5b49fa78c518b4ca909aab742cdfc8/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:304: in test_remove
    container = client.containers.run("alpine", "echo hello", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/454fe5080c174deae9232ede417a8fd41b5b49fa78c518b4ca909aab742cdfc8/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_rename" time="1.996"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/70ba88784f312f4b93a0bf641e6355487332c7768870a598cb1443d0a35a2ed8/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/70ba88784f312f4b93a0bf641e6355487332c7768870a598cb1443d0a35a2ed8/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:314: in test_rename
    container = client.containers.run("alpine", "echo hello", name="test1",
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/70ba88784f312f4b93a0bf641e6355487332c7768870a598cb1443d0a35a2ed8/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_restart" time="2.065"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/bdeb2a92cdd19bc46757f90aedbc03a5f42998c35bc4d6fd7da2965b7a8c6441/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/bdeb2a92cdd19bc46757f90aedbc03a5f42998c35bc4d6fd7da2965b7a8c6441/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:324: in test_restart
    container = client.containers.run("alpine", "sleep 100", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/bdeb2a92cdd19bc46757f90aedbc03a5f42998c35bc4d6fd7da2965b7a8c6441/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_start" time="2.021"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2c094f8a76b2b5dcedf0187c5ffc03ba2ace10745fb0ecddc0dda2d804ffc496/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/2c094f8a76b2b5dcedf0187c5ffc03ba2ace10745fb0ecddc0dda2d804ffc496/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:337: in test_start
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2c094f8a76b2b5dcedf0187c5ffc03ba2ace10745fb0ecddc0dda2d804ffc496/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_stats" time="2.022"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f7190f34109f546c0c887bbfa235e1ba1f829b5a3927aa1a16abdac2a121c2d8/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/f7190f34109f546c0c887bbfa235e1ba1f829b5a3927aa1a16abdac2a121c2d8/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:343: in test_stats
    container = client.containers.run("alpine", "sleep 100", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f7190f34109f546c0c887bbfa235e1ba1f829b5a3927aa1a16abdac2a121c2d8/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_stop" time="1.964"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f979b561b93cc92d8c472d988f51ac8a1f660b94e011dc7ced9378416bf4a214/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/f979b561b93cc92d8c472d988f51ac8a1f660b94e011dc7ced9378416bf4a214/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:412: in test_stop
    container = client.containers.run("alpine", "top", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f979b561b93cc92d8c472d988f51ac8a1f660b94e011dc7ced9378416bf4a214/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_top" time="2.059"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/1c917912770509404ed9a9c96935e06e9b74b2f8f2544ab7fa8d452d1cbc8c05/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/1c917912770509404ed9a9c96935e06e9b74b2f8f2544ab7fa8d452d1cbc8c05/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:421: in test_top
    container = client.containers.run("alpine", "sleep 60", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/1c917912770509404ed9a9c96935e06e9b74b2f8f2544ab7fa8d452d1cbc8c05/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_update" time="2.099"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/ffc1c65f10b526a327e571e19c9504c3d4ed874fd7a0b50109412ac7c9d7bb4b/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/ffc1c65f10b526a327e571e19c9504c3d4ed874fd7a0b50109412ac7c9d7bb4b/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:429: in test_update
    container = client.containers.run("alpine", "sleep 60", detach=True,
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/ffc1c65f10b526a327e571e19c9504c3d4ed874fd7a0b50109412ac7c9d7bb4b/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_containers_test.ContainerTest" name="test_wait" time="2.065"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6c73980989b6f162a3be98c8fd703d932f12efb64251376a15cb028f783dd910/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6c73980989b6f162a3be98c8fd703d932f12efb64251376a15cb028f783dd910/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:439: in test_wait
    container = client.containers.run("alpine", "sh -c 'exit 0'",
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6c73980989b6f162a3be98c8fd703d932f12efb64251376a15cb028f783dd910/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_build" time="3.144"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e081f36b82c1255ffa314d56f70b6d63a98cd33423a5d191d232a53fa71e7f0a/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e081f36b82c1255ffa314d56f70b6d63a98cd33423a5d191d232a53fa71e7f0a/start

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:20: in test_build
    assert client.containers.run(image) == b"hello world\n"
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e081f36b82c1255ffa314d56f70b6d63a98cd33423a5d191d232a53fa71e7f0a/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_build_with_error" time="2.223"><failure message="AssertionError: assert &quot;The command '/bin/sh -c exit 1' returned a non-zero code: 1&quot; in 'docker.errors.BuildError: error building at STEP &quot;RUN exit 1&quot;: error while running runtime: exit status 1'&#10; +  where 'docker.errors.BuildError: error building at STEP &quot;RUN exit 1&quot;: error while running runtime: exit status 1' = &lt;bound method ExceptionInfo.exconly of &lt;ExceptionInfo BuildError('error building at STEP &quot;RUN exit 1&quot;: error while running runtime: exit status 1\n') tblen=2&gt;&gt;()&#10; +    where &lt;bound method ExceptionInfo.exconly of &lt;ExceptionInfo BuildError('error building at STEP &quot;RUN exit 1&quot;: error while running runtime: exit status 1\n') tblen=2&gt;&gt; = &lt;ExceptionInfo BuildError('error building at STEP &quot;RUN exit 1&quot;: error while running runtime: exit status 1\n') tblen=2&gt;.exconly">tests/integration/models_images_test.py:30: in test_build_with_error
    assert (
E   AssertionError: assert "The command '/bin/sh -c exit 1' returned a non-zero code: 1" in 'docker.errors.BuildError: error building at STEP "RUN exit 1": error while running runtime: exit status 1'
E    +  where 'docker.errors.BuildError: error building at STEP "RUN exit 1": error while running runtime: exit status 1' = &lt;bound method ExceptionInfo.exconly of &lt;ExceptionInfo BuildError('error building at STEP "RUN exit 1": error while running runtime: exit status 1\n') tblen=2&gt;&gt;()
E    +    where &lt;bound method ExceptionInfo.exconly of &lt;ExceptionInfo BuildError('error building at STEP "RUN exit 1": error while running runtime: exit status 1\n') tblen=2&gt;&gt; = &lt;ExceptionInfo BuildError('error building at STEP "RUN exit 1": error while running runtime: exit status 1\n') tblen=2&gt;.exconly</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_build_with_multiple_success" time="2.682"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a001e7aaeffff6e070224090a8be16786035930eebec4a8fb13383ff08abe63b/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a001e7aaeffff6e070224090a8be16786035930eebec4a8fb13383ff08abe63b/start

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:44: in test_build_with_multiple_success
    assert client.containers.run(image) == b"hello world\n"
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a001e7aaeffff6e070224090a8be16786035930eebec4a8fb13383ff08abe63b/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_build_with_success_build_output" time="2.911"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/708fa949e9a11995ea67a267d90f906c3c71bd2e72300a1aa0b0c040886fe85e/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/708fa949e9a11995ea67a267d90f906c3c71bd2e72300a1aa0b0c040886fe85e/start

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:55: in test_build_with_success_build_output
    assert client.containers.run(image) == b"Successfully built abcd1234\n"
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/708fa949e9a11995ea67a267d90f906c3c71bd2e72300a1aa0b0c040886fe85e/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_list" time="4.388" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_list_with_repository" time="4.162" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_load_error" time="1.821"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/images/load: Internal Server Error (&quot;failed to load image: payload does not match any of the supported image formats (oci, oci-archive, dir, docker-archive)&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/images/load

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:98: in test_load_error
    client.images.load('abc')
docker/models/images.py:384: in load
    for chunk in resp:
docker/api/client.py:387: in _stream_helper
    yield self._result(response, json=decode)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/images/load: Internal Server Error ("failed to load image: payload does not match any of the supported image formats (oci, oci-archive, dir, docker-archive)")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_pull" time="4.101"><failure message="AssertionError: assert 'alpine:latest' in ['docker.io/library/alpine:latest']">tests/integration/models_images_test.py:71: in test_pull
    assert 'alpine:latest' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:latest' in ['docker.io/library/alpine:latest']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_pull_multiple" time="4.772"><failure message="AssertionError: assert False&#10; +  where False = any([False])">tests/integration/models_images_test.py:91: in test_pull_multiple
    assert any([
E   AssertionError: assert False
E    +  where False = any([False])</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_pull_with_sha" time="4.899"><failure message="AssertionError: assert 'hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7' in ['docker.io/library/hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7', 'docker.io/library/hello-world@sha256:8072a54ebb3bc136150e2f2860f00a7bf45f13eeb917cca2430fcd0054c8e51b']">tests/integration/models_images_test.py:85: in test_pull_with_sha
    assert image_ref in image.attrs['RepoDigests']
E   AssertionError: assert 'hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7' in ['docker.io/library/hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7', 'docker.io/library/hello-world@sha256:8072a54ebb3bc136150e2f2860f00a7bf45f13eeb917cca2430fcd0054c8e51b']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_pull_with_tag" time="4.125"><failure message="AssertionError: assert 'alpine:3.10' in ['docker.io/library/alpine:3.10']">tests/integration/models_images_test.py:76: in test_pull_with_tag
    assert 'alpine:3.10' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:3.10' in ['docker.io/library/alpine:3.10']</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_save_and_load" time="1.916" /><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_save_and_load_repo_name" time="1.809"><failure message="docker.errors.InvalidArgument: dockerpytest_a4a9d5bf10d075fc:latest is not a valid tag for this image">tests/integration/models_images_test.py:122: in test_save_and_load_repo_name
    stream = image.save(named='{}:latest'.format(additional_tag))
docker/models/images.py:98: in save
    raise InvalidArgument(
E   docker.errors.InvalidArgument: dockerpytest_a4a9d5bf10d075fc:latest is not a valid tag for this image</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_images_test.ImageCollectionTest" name="test_save_name_error" time="1.787" /><testcase classname="tests.integration.models_images_test.ImageTest" name="test_tag_and_remove" time="4.174" /><testcase classname="tests.integration.models_networks_test.NetworkCollectionTest" name="test_create" time="1.920" /><testcase classname="tests.integration.models_networks_test.NetworkCollectionTest" name="test_get" time="1.973" /><testcase classname="tests.integration.models_networks_test.NetworkCollectionTest" name="test_list_remove" time="2.308" /><testcase classname="tests.integration.models_networks_test.NetworkTest" name="test_connect_disconnect" time="1.974"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/443dbe66b5dcb523adaf5ab10458cb45d19982d4951996d4f010f786f0a35cf0/connect: Internal Server Error (&quot;&quot;slirp4netns&quot; is not supported: invalid network mode&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/443dbe66b5dcb523adaf5ab10458cb45d19982d4951996d4f010f786f0a35cf0/connect

During handling of the above exception, another exception occurred:
tests/integration/models_networks_test.py:59: in test_connect_disconnect
    network.connect(container)
docker/models/networks.py:58: in connect
    return self.client.api.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/443dbe66b5dcb523adaf5ab10458cb45d19982d4951996d4f010f786f0a35cf0/connect: Internal Server Error (""slirp4netns" is not supported: invalid network mode")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_resources_test.ModelTest" name="test_reload" time="2.065"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/59201d70a5de0fc12223f5101a149efaa461f3284bc03d7588b6c1c642260795/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/59201d70a5de0fc12223f5101a149efaa461f3284bc03d7588b6c1c642260795/start

During handling of the above exception, another exception occurred:
tests/integration/models_resources_test.py:9: in test_reload
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/59201d70a5de0fc12223f5101a149efaa461f3284bc03d7588b6c1c642260795/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.models_volumes_test.VolumesTest" name="test_create_get" time="1.886" /><testcase classname="tests.integration.models_volumes_test.VolumesTest" name="test_list_remove" time="1.822"><failure message="AssertionError: assert &lt;Volume: dockerpyte&gt; in []&#10; +  where [] = &lt;bound method VolumeCollection.list of &lt;docker.models.volumes.VolumeCollection object at 0x7f3e6febc670&gt;&gt;(filters={'name': 'dockerpytest_'})&#10; +    where &lt;bound method VolumeCollection.list of &lt;docker.models.volumes.VolumeCollection object at 0x7f3e6febc670&gt;&gt; = &lt;docker.models.volumes.VolumeCollection object at 0x7f3e6febc670&gt;.list&#10; +      where &lt;docker.models.volumes.VolumeCollection object at 0x7f3e6febc670&gt; = &lt;docker.client.DockerClient object at 0x7f3e6febc4f0&gt;.volumes">tests/integration/models_volumes_test.py:26: in test_list_remove
    assert volume in client.volumes.list(filters={'name': 'dockerpytest_'})
E   AssertionError: assert &lt;Volume: dockerpyte&gt; in []
E    +  where [] = &lt;bound method VolumeCollection.list of &lt;docker.models.volumes.VolumeCollection object at 0x7f3e6febc670&gt;&gt;(filters={'name': 'dockerpytest_'})
E    +    where &lt;bound method VolumeCollection.list of &lt;docker.models.volumes.VolumeCollection object at 0x7f3e6febc670&gt;&gt; = &lt;docker.models.volumes.VolumeCollection object at 0x7f3e6febc670&gt;.list
E    +      where &lt;docker.models.volumes.VolumeCollection object at 0x7f3e6febc670&gt; = &lt;docker.client.DockerClient object at 0x7f3e6febc4f0&gt;.volumes</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.regression_test.TestRegressions" name="test_443_handle_nonchunked_response_in_stream" time="2.748"><failure message="Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;">tests/integration/regression_test.py:16: in test_443_handle_nonchunked_response_in_stream
    pass
E   Failed: DID NOT RAISE &lt;class 'docker.errors.APIError'&gt;</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.regression_test.TestRegressions" name="test_542_truncate_ids_client_side" time="2.964"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2b50df8f436204a264a9d44b7d993037d869af50edeee02d3198dc94a298e7fe/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/2b50df8f436204a264a9d44b7d993037d869af50edeee02d3198dc94a298e7fe/start

During handling of the above exception, another exception occurred:
tests/integration/regression_test.py:21: in test_542_truncate_ids_client_side
    self.client.start(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2b50df8f436204a264a9d44b7d993037d869af50edeee02d3198dc94a298e7fe/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.regression_test.TestRegressions" name="test_647_support_doubleslash_in_image_names" time="2.750" /><testcase classname="tests.integration.regression_test.TestRegressions" name="test_649_handle_timeout_value_none" time="2.986"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f38abe964c32f9a72ebbd892608081e2acbbae38475bc7f232cc52e229203260/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/f38abe964c32f9a72ebbd892608081e2acbbae38475bc7f232cc52e229203260/start

During handling of the above exception, another exception occurred:
tests/integration/regression_test.py:34: in test_649_handle_timeout_value_none
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f38abe964c32f9a72ebbd892608081e2acbbae38475bc7f232cc52e229203260/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.regression_test.TestRegressions" name="test_715_handle_user_param_as_int_value" time="2.958"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/51f7ee32255525c7287a6253a10947304f85636c5833be6b4f988ffbbc735885/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/51f7ee32255525c7287a6253a10947304f85636c5833be6b4f988ffbbc735885/start

During handling of the above exception, another exception occurred:
tests/integration/regression_test.py:39: in test_715_handle_user_param_as_int_value
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/51f7ee32255525c7287a6253a10947304f85636c5833be6b4f988ffbbc735885/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.regression_test.TestRegressions" name="test_792_explicit_port_protocol" time="3.050"><failure message="docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e5eb5924ecf23edeeec3884083d356d53454761fc0ce6a7e92354f6041d9bc43/start: Internal Server Error (&quot;container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied&quot;)">docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.9/site-packages/requests/models.py:943: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e5eb5924ecf23edeeec3884083d356d53454761fc0ce6a7e92354f6041d9bc43/start

During handling of the above exception, another exception occurred:
tests/integration/regression_test.py:56: in test_792_explicit_port_protocol
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e5eb5924ecf23edeeec3884083d356d53454761fc0ce6a7e92354f6041d9bc43/start: Internal Server Error ("container_linux.go:380: starting container process caused: error adding seccomp filter rule for syscall bdflush: permission denied: OCI permission denied")</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.integration.credentials.utils_test" name="test_create_environment_dict" time="0.004" /></testsuite></testsuites>