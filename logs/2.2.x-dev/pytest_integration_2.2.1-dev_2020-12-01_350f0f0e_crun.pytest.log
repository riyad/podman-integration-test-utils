============================= test session starts ==============================
collecting ... collected 389 items / 106 deselected / 283 selected

tests/integration/api_build_test.py::BuildTest::test_build_container_with_target FAILED [  0%]
tests/integration/api_build_test.py::BuildTest::test_build_from_stringio PASSED [  0%]
tests/integration/api_build_test.py::BuildTest::test_build_gzip_custom_encoding PASSED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_gzip_encoding PASSED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_abs_dockerfile FAILED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_dockerfile FAILED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_nested_dockerfile FAILED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_invalid_platform FAILED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_isolation PASSED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_labels FAILED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_out_of_context_dockerfile FAILED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_shmsize PASSED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_squash FAILED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_stderr_data FAILED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_streaming PASSED [  5%]
tests/integration/api_build_test.py::BuildTest::test_build_with_buildargs PASSED [  5%]
tests/integration/api_build_test.py::BuildTest::test_build_with_cache_from FAILED [  6%]
tests/integration/api_build_test.py::BuildTest::test_build_with_dockerfile_empty_lines PASSED [  6%]
tests/integration/api_build_test.py::BuildTest::test_build_with_dockerignore PASSED [  6%]
tests/integration/api_build_test.py::BuildTest::test_build_with_extra_hosts FAILED [  7%]
tests/integration/api_build_test.py::BuildTest::test_build_with_network_mode FAILED [  7%]
tests/integration/api_build_test.py::BuildTest::test_build_with_proxy PASSED [  7%]
tests/integration/api_build_test.py::BuildTest::test_build_with_proxy_and_buildargs PASSED [  8%]
tests/integration/api_build_test.py::BuildTest::test_prune_builds XFAIL  [  8%]
tests/integration/api_client_test.py::InformationTest::test_info PASSED  [  8%]
tests/integration/api_client_test.py::InformationTest::test_version PASSED [  9%]
tests/integration/api_client_test.py::AutoDetectVersionTest::test_client_init PASSED [  9%]
tests/integration/api_client_test.py::ConnectionTimeoutTest::test_timeout PASSED [  9%]
tests/integration/api_client_test.py::UnixconnTest::test_resource_warnings PASSED [ 10%]
tests/integration/api_container_test.py::ListContainersTest::test_list_containers FAILED [ 10%]
tests/integration/api_container_test.py::CreateContainerTest::test_create PASSED [ 10%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_container_with_volumes_from FAILED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_auto_remove PASSED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_cpu_rt_options XPASS [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_device_cgroup_rules FAILED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_environment_variable_no_value FAILED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_host_pid_mode PASSED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_init PASSED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_isolation FAILED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_links FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_mac_address FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_memory_constraints_with_int FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_memory_constraints_with_str FAILED [ 15%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_restart_policy FAILED [ 15%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_stop_timeout PASSED [ 15%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_storage_opt XFAIL [ 16%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_tmpfs FAILED [ 16%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_uts_mode PASSED [ 16%]
tests/integration/api_container_test.py::CreateContainerTest::test_group_id_ints FAILED [ 17%]
tests/integration/api_container_test.py::CreateContainerTest::test_group_id_strings FAILED [ 17%]
tests/integration/api_container_test.py::CreateContainerTest::test_invalid_log_driver_raises_exception FAILED [ 18%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_log_driver_and_log_opt FAILED [ 18%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_no_config_specified FAILED [ 18%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_no_log_driver_specified FAILED [ 19%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_binds_ro FAILED [ 19%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_binds_rw FAILED [ 19%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_mounts FAILED [ 20%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_mounts_ro FAILED [ 20%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_volume_mount FAILED [ 20%]
tests/integration/api_container_test.py::ArchiveTest::test_copy_directory_to_container FAILED [ 21%]
tests/integration/api_container_test.py::ArchiveTest::test_copy_file_to_container FAILED [ 21%]
tests/integration/api_container_test.py::ArchiveTest::test_get_file_archive_from_container FAILED [ 21%]
tests/integration/api_container_test.py::ArchiveTest::test_get_file_stat_from_container FAILED [ 22%]
tests/integration/api_container_test.py::RenameContainerTest::test_rename_container FAILED [ 22%]
tests/integration/api_container_test.py::StartContainerTest::test_run_shlex_commands PASSED [ 22%]
tests/integration/api_container_test.py::StartContainerTest::test_start_container PASSED [ 23%]
tests/integration/api_container_test.py::StartContainerTest::test_start_container_with_dict_instead_of_id PASSED [ 23%]
tests/integration/api_container_test.py::WaitTest::test_wait PASSED      [ 24%]
tests/integration/api_container_test.py::WaitTest::test_wait_with_condition FAILED [ 24%]
tests/integration/api_container_test.py::WaitTest::test_wait_with_dict_instead_of_id PASSED [ 24%]
tests/integration/api_container_test.py::LogsTest::test_logs PASSED      [ 25%]
tests/integration/api_container_test.py::LogsTest::test_logs_streaming_and_follow PASSED [ 25%]
tests/integration/api_container_test.py::LogsTest::test_logs_streaming_and_follow_and_cancel PASSED [ 25%]
tests/integration/api_container_test.py::LogsTest::test_logs_tail_option PASSED [ 26%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_dict_instead_of_id PASSED [ 26%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_tail_0 PASSED [ 26%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_until FAILED [ 27%]
tests/integration/api_container_test.py::DiffTest::test_diff PASSED      [ 27%]
tests/integration/api_container_test.py::DiffTest::test_diff_with_dict_instead_of_id PASSED [ 27%]
tests/integration/api_container_test.py::StopTest::test_stop PASSED      [ 28%]
tests/integration/api_container_test.py::StopTest::test_stop_with_dict_instead_of_id PASSED [ 28%]
tests/integration/api_container_test.py::KillTest::test_kill PASSED      [ 28%]
tests/integration/api_container_test.py::KillTest::test_kill_with_dict_instead_of_id PASSED [ 29%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal PASSED [ 29%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal_integer PASSED [ 30%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal_name PASSED [ 30%]
tests/integration/api_container_test.py::PortTest::test_port FAILED      [ 30%]
tests/integration/api_container_test.py::ContainerTopTest::test_top XFAIL [ 31%]
tests/integration/api_container_test.py::ContainerTopTest::test_top_with_psargs XFAIL [ 31%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart PASSED [ 31%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart_with_dict_instead_of_id PASSED [ 32%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart_with_low_timeout PASSED [ 32%]
tests/integration/api_container_test.py::RemoveContainerTest::test_remove PASSED [ 32%]
tests/integration/api_container_test.py::RemoveContainerTest::test_remove_with_dict_instead_of_id PASSED [ 33%]
tests/integration/api_container_test.py::AttachContainerTest::test_attach_no_stream FAILED [ 33%]
tests/integration/api_container_test.py::AttachContainerTest::test_attach_stream_and_cancel PASSED [ 33%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_arg PASSED [ 34%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_config_file PASSED [ 34%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_default PASSED [ 34%]
tests/integration/api_container_test.py::AttachContainerTest::test_run_container_reading_socket PASSED [ 35%]
tests/integration/api_container_test.py::AttachContainerTest::test_run_container_streaming PASSED [ 35%]
tests/integration/api_container_test.py::PauseTest::test_pause_unpause PASSED [ 36%]
tests/integration/api_container_test.py::PruneTest::test_prune_containers PASSED [ 36%]
tests/integration/api_container_test.py::GetContainerStatsTest::test_get_container_stats_no_stream PASSED [ 36%]
tests/integration/api_container_test.py::ContainerUpdateTest::test_restart_policy_update FAILED [ 37%]
tests/integration/api_container_test.py::ContainerUpdateTest::test_update_container FAILED [ 37%]
tests/integration/api_container_test.py::ContainerCPUTest::test_container_cpu_shares FAILED [ 37%]
tests/integration/api_container_test.py::ContainerCPUTest::test_container_cpuset FAILED [ 38%]
tests/integration/api_container_test.py::ContainerCPUTest::test_create_with_runtime FAILED [ 38%]
tests/integration/api_container_test.py::LinkTest::test_remove_link FAILED [ 38%]
tests/integration/api_exec_test.py::ExecTest::test_detach_with_config_file FAILED [ 39%]
tests/integration/api_exec_test.py::ExecTest::test_detach_with_default PASSED [ 39%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_as_root PASSED [ 39%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_as_user PASSED [ 40%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_streaming PASSED [ 40%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_string PASSED [ 40%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_with_env PASSED [ 41%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_with_workdir PASSED [ 41%]
tests/integration/api_exec_test.py::ExecTest::test_exec_inspect PASSED   [ 42%]
tests/integration/api_exec_test.py::ExecTest::test_exec_start_detached FAILED [ 42%]
tests/integration/api_exec_test.py::ExecTest::test_exec_start_socket FAILED [ 42%]
tests/integration/api_exec_test.py::ExecTest::test_execute_command PASSED [ 43%]
tests/integration/api_exec_test.py::ExecTest::test_execute_command_with_proxy_env PASSED [ 43%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_no_stream_demux PASSED [ 43%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_no_stream_no_demux PASSED [ 44%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_stream_demux PASSED [ 44%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_stream_no_demux PASSED [ 44%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_no_stream_demux FAILED [ 45%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_no_stream_no_demux FAILED [ 45%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_stream_demux FAILED [ 45%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_stream_no_demux FAILED [ 46%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_fails FAILED [ 46%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_passes FAILED [ 46%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_shell_command FAILED [ 47%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_start_period FAILED [ 47%]
tests/integration/api_image_test.py::ListImagesTest::test_images PASSED  [ 48%]
tests/integration/api_image_test.py::ListImagesTest::test_images_quiet PASSED [ 48%]
tests/integration/api_image_test.py::PullImageTest::test_pull PASSED     [ 48%]
tests/integration/api_image_test.py::PullImageTest::test_pull_invalid_platform FAILED [ 49%]
tests/integration/api_image_test.py::PullImageTest::test_pull_streaming PASSED [ 49%]
tests/integration/api_image_test.py::CommitTest::test_commit FAILED      [ 49%]
tests/integration/api_image_test.py::CommitTest::test_commit_with_changes FAILED [ 50%]
tests/integration/api_image_test.py::RemoveImageTest::test_remove PASSED [ 50%]
tests/integration/api_image_test.py::ImportImageTest::test_get_load_image FAILED [ 50%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_bytes PASSED [ 51%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_file PASSED [ 51%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_stream PASSED [ 51%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_url SKIPPED [ 52%]
tests/integration/api_image_test.py::ImportImageTest::test_import_image_from_data_with_changes PASSED [ 52%]
tests/integration/api_image_test.py::ImportImageTest::test_import_image_with_changes PASSED [ 53%]
tests/integration/api_image_test.py::PruneImagesTest::test_prune_images FAILED [ 53%]
tests/integration/api_image_test.py::SaveLoadImagesTest::test_get_image_load_image FAILED [ 53%]
tests/integration/api_image_test.py::InspectDistributionTest::test_inspect_distribution FAILED [ 54%]
tests/integration/api_network_test.py::TestNetworks::test_connect_and_disconnect_container FAILED [ 54%]
tests/integration/api_network_test.py::TestNetworks::test_connect_and_force_disconnect_container FAILED [ 54%]
tests/integration/api_network_test.py::TestNetworks::test_connect_on_container_create FAILED [ 55%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_aliases FAILED [ 55%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_ipv4_address FAILED [ 55%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_ipv6_address FAILED [ 56%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_links FAILED [ 56%]
tests/integration/api_network_test.py::TestNetworks::test_create_check_duplicate FAILED [ 56%]
tests/integration/api_network_test.py::TestNetworks::test_create_inspect_network_with_scope FAILED [ 57%]
tests/integration/api_network_test.py::TestNetworks::test_create_internal_networks FAILED [ 57%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_attachable FAILED [ 57%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_ingress FAILED [ 58%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_ipv6_enabled FAILED [ 58%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_host_driver_fails PASSED [ 59%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_ipam_config FAILED [ 59%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_labels FAILED [ 59%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_labels_wrong_type PASSED [ 60%]
tests/integration/api_network_test.py::TestNetworks::test_create_remove_network_with_space_in_name PASSED [ 60%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_aliases PASSED [ 60%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_driveropt FAILED [ 61%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_ipv4_address FAILED [ 61%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_ipv6_address FAILED [ 61%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_linklocal_ips FAILED [ 62%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_links FAILED [ 62%]
tests/integration/api_network_test.py::TestNetworks::test_inspect_network FAILED [ 62%]
tests/integration/api_network_test.py::TestNetworks::test_list_networks FAILED [ 63%]
tests/integration/api_network_test.py::TestNetworks::test_prune_networks FAILED [ 63%]
tests/integration/api_network_test.py::TestNetworks::test_remove_network PASSED [ 63%]
tests/integration/api_plugin_test.py::PluginTest::test_configure_plugin FAILED [ 64%]
tests/integration/api_plugin_test.py::PluginTest::test_create_plugin FAILED [ 64%]
tests/integration/api_plugin_test.py::PluginTest::test_disable_plugin FAILED [ 65%]
tests/integration/api_plugin_test.py::PluginTest::test_enable_plugin FAILED [ 65%]
tests/integration/api_plugin_test.py::PluginTest::test_force_remove_plugin FAILED [ 65%]
tests/integration/api_plugin_test.py::PluginTest::test_inspect_plugin FAILED [ 66%]
tests/integration/api_plugin_test.py::PluginTest::test_install_plugin FAILED [ 66%]
tests/integration/api_plugin_test.py::PluginTest::test_list_plugins FAILED [ 66%]
tests/integration/api_plugin_test.py::PluginTest::test_plugin_privileges FAILED [ 67%]
tests/integration/api_plugin_test.py::PluginTest::test_remove_plugin FAILED [ 67%]
tests/integration/api_plugin_test.py::PluginTest::test_upgrade_plugin FAILED [ 67%]
tests/integration/api_volume_test.py::TestVolumes::test_create_volume PASSED [ 68%]
tests/integration/api_volume_test.py::TestVolumes::test_create_volume_invalid_driver FAILED [ 68%]
tests/integration/api_volume_test.py::TestVolumes::test_force_remove_volume PASSED [ 68%]
tests/integration/api_volume_test.py::TestVolumes::test_inspect_nonexistent_volume PASSED [ 69%]
tests/integration/api_volume_test.py::TestVolumes::test_inspect_volume FAILED [ 69%]
tests/integration/api_volume_test.py::TestVolumes::test_list_volumes FAILED [ 69%]
tests/integration/api_volume_test.py::TestVolumes::test_prune_volumes PASSED [ 70%]
tests/integration/api_volume_test.py::TestVolumes::test_remove_nonexistent_volume PASSED [ 70%]
tests/integration/api_volume_test.py::TestVolumes::test_remove_volume PASSED [ 71%]
tests/integration/client_test.py::ClientTest::test_df PASSED             [ 71%]
tests/integration/client_test.py::ClientTest::test_info PASSED           [ 71%]
tests/integration/client_test.py::ClientTest::test_ping PASSED           [ 72%]
tests/integration/client_test.py::ClientTest::test_version PASSED        [ 72%]
tests/integration/client_test.py::CancellableEventsTest::test_cancel_events PASSED [ 72%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_context_remove FAILED [ 73%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_lifecycle FAILED [ 73%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_load_context_without_orchestrator FAILED [ 73%]
tests/integration/errors_test.py::ErrorsTest::test_api_error_parses_json FAILED [ 74%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_get FAILED [ 74%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_list FAILED [ 74%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_list_sparse FAILED [ 75%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run FAILED [ 75%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_detach FAILED [ 75%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_auto_remove FAILED [ 76%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_auto_remove_error FAILED [ 76%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_error FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_image_that_does_not_exist FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_json_file_driver FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_named_volume FAILED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_network PASSED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_none_driver FAILED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_proxy_config FAILED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_streamed_logs FAILED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_streamed_logs_and_cancel FAILED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_volume FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerTest::test_commit FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerTest::test_create_with_volume_driver FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerTest::test_diff FAILED [ 81%]
tests/integration/models_containers_test.py::ContainerTest::test_exec_run_failed FAILED [ 81%]
tests/integration/models_containers_test.py::ContainerTest::test_exec_run_success FAILED [ 81%]
tests/integration/models_containers_test.py::ContainerTest::test_kill FAILED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_logs FAILED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_pause FAILED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_list FAILED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_none FAILED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_tuple FAILED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_remove FAILED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_rename FAILED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_restart FAILED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_start FAILED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_stats FAILED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_stop FAILED [ 86%]
tests/integration/models_containers_test.py::ContainerTest::test_top FAILED [ 86%]
tests/integration/models_containers_test.py::ContainerTest::test_update FAILED [ 86%]
tests/integration/models_containers_test.py::ContainerTest::test_wait FAILED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build FAILED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_error FAILED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_multiple_success FAILED [ 88%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_success_build_output FAILED [ 88%]
tests/integration/models_images_test.py::ImageCollectionTest::test_list PASSED [ 89%]
tests/integration/models_images_test.py::ImageCollectionTest::test_list_with_repository PASSED [ 89%]
tests/integration/models_images_test.py::ImageCollectionTest::test_load_error FAILED [ 89%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull FAILED [ 90%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_multiple FAILED [ 90%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_with_sha FAILED [ 90%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_with_tag FAILED [ 91%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_and_load PASSED [ 91%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_and_load_repo_name FAILED [ 91%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_name_error PASSED [ 92%]
tests/integration/models_images_test.py::ImageTest::test_tag_and_remove PASSED [ 92%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_create FAILED [ 92%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_get PASSED [ 93%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_list_remove FAILED [ 93%]
tests/integration/models_networks_test.py::NetworkTest::test_connect_disconnect FAILED [ 93%]
tests/integration/models_nodes_test.py::NodesTest::test_list_get_update FAILED [ 94%]
tests/integration/models_resources_test.py::ModelTest::test_reload FAILED [ 94%]
tests/integration/models_volumes_test.py::VolumesTest::test_create_get PASSED [ 95%]
tests/integration/models_volumes_test.py::VolumesTest::test_list_remove FAILED [ 95%]
tests/integration/regression_test.py::TestRegressions::test_443_handle_nonchunked_response_in_stream FAILED [ 95%]
tests/integration/regression_test.py::TestRegressions::test_542_truncate_ids_client_side PASSED [ 96%]
tests/integration/regression_test.py::TestRegressions::test_647_support_doubleslash_in_image_names PASSED [ 96%]
tests/integration/regression_test.py::TestRegressions::test_649_handle_timeout_value_none PASSED [ 96%]
tests/integration/regression_test.py::TestRegressions::test_715_handle_user_param_as_int_value PASSED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_792_explicit_port_protocol FAILED [ 97%]
tests/integration/credentials/store_test.py::TestStore::test_store_and_get ERROR [ 97%]
tests/integration/credentials/store_test.py::TestStore::test_get_nonexistent ERROR [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_store_and_erase ERROR [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_unicode_strings ERROR [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_list ERROR  [ 99%]
tests/integration/credentials/store_test.py::TestStore::test_execute_with_env_override ERROR [ 99%]
tests/integration/credentials/utils_test.py::test_create_environment_dict PASSED [100%]

==================================== ERRORS ====================================
________________ ERROR at setup of TestStore.test_store_and_get ________________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
_______________ ERROR at setup of TestStore.test_get_nonexistent _______________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
_______________ ERROR at setup of TestStore.test_store_and_erase _______________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
_______________ ERROR at setup of TestStore.test_unicode_strings _______________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
____________________ ERROR at setup of TestStore.test_list _____________________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
__________ ERROR at setup of TestStore.test_execute_with_env_override __________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
=================================== FAILURES ===================================
__________________ BuildTest.test_build_container_with_target __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/images/build1/json

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:272: in test_build_container_with_target
    info = self.client.inspect_image('build1')
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:253: in inspect_image
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.40/images/build1/json: Not Found ("failed to find image build1: unable to find a name and tag match for build1 in repotags: No such image")
________________ BuildTest.test_build_in_context_abs_dockerfile ________________
tests/integration/api_build_test.py:575: in test_build_in_context_abs_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built 0ce52eb227b4\n'
__________________ BuildTest.test_build_in_context_dockerfile __________________
tests/integration/api_build_test.py:510: in test_build_in_context_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built eecb36fa8cd6\n'
______________ BuildTest.test_build_in_context_nested_dockerfile _______________
tests/integration/api_build_test.py:543: in test_build_in_context_nested_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built 8b4333a0edd8\n'
____________________ BuildTest.test_build_invalid_platform _____________________
tests/integration/api_build_test.py:448: in test_build_invalid_platform
    pass
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
_________________________ BuildTest.test_build_labels __________________________
tests/integration/api_build_test.py:215: in test_build_labels
    assert info['Config']['Labels'] == labels
E   AssertionError: assert {'io.buildah.... 'test': 'OK'} == {'test': 'OK'}
E     Omitting 1 identical items, use -vv to show
E     Left contains 1 more item:
E     {'io.buildah.version': '1.18.0'}
E     Full diff:
E     - {'test': 'OK'}
E     + {'io.buildah.version': '1.18.0', 'test': 'OK'}
________________ BuildTest.test_build_out_of_context_dockerfile ________________
tests/integration/api_build_test.py:481: in test_build_out_of_context_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   KeyError: 'stream'
_________________________ BuildTest.test_build_squash __________________________
tests/integration/api_build_test.py:371: in test_build_squash
    assert len(non_squashed['RootFS']['Layers']) == 4
E   AssertionError: assert 2 == 4
E     +2
E     -4
_______________________ BuildTest.test_build_stderr_data _______________________
tests/integration/api_build_test.py:391: in test_build_stderr_data
    assert any([line == expected for line in lines])
E   AssertionError: assert False
E    +  where False = any([False, False, False, False, False, False, ...])
_____________________ BuildTest.test_build_with_cache_from _____________________
tests/integration/api_build_test.py:240: in test_build_with_cache_from
    assert counter == 3
E   AssertionError: assert 0 == 3
E     +0
E     -3
____________________ BuildTest.test_build_with_extra_hosts _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/images/dockerpytest_extrahost_build/json

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:340: in test_build_with_extra_hosts
    assert self.client.inspect_image(img_name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:253: in inspect_image
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.40/images/dockerpytest_extrahost_build/json: Not Found ("failed to find image dockerpytest_extrahost_build: unable to find a name and tag match for dockerpytest_extrahost_build in repotags: No such image")
____________________ BuildTest.test_build_with_network_mode ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_774e29aecf3c5393/connect

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:283: in test_build_with_network_mode
    self.client.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_774e29aecf3c5393/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
___________________ ListContainersTest.test_list_containers ____________________
tests/integration/api_container_test.py:40: in test_list_containers
    assert re.search(r'alpine:.*', retrieved['Image']) is not None
E   AssertionError: assert None is not None
E    +  where None = <function search at 0x7efd223075e0>('alpine:.*', 'docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c')
E    +    where <function search at 0x7efd223075e0> = re.search
_________ CreateContainerTest.test_create_container_with_volumes_from __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:149: in test_create_container_with_volumes_from
    res = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("container create: error looking up container "foobar_vol0" for volumes-from: no container with name or ID foobar_vol0 found: no such container")
___________ CreateContainerTest.test_create_with_device_cgroup_rules ___________
tests/integration/api_container_test.py:477: in test_create_with_device_cgroup_rules
    assert config['HostConfig']['DeviceCgroupRules'] == [rule]
E   AssertionError: assert None == ['c 7:128 rwm']
E     +None
E     -['c 7:128 rwm']
______ CreateContainerTest.test_create_with_environment_variable_no_value ______
tests/integration/api_container_test.py:373: in test_create_with_environment_variable_no_value
    assert 'Foo' in config['Config']['Env']
E   AssertionError: assert 'Foo' in ['PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'TERM=xterm', 'container=podman', 'Other=one', 'Blank=', 'HOSTNAME=']
________________ CreateContainerTest.test_create_with_isolation ________________
tests/integration/api_container_test.py:402: in test_create_with_isolation
    assert config['HostConfig']['Isolation'] == 'default'
E   AssertionError: assert '' == 'default'
E     - default
__________________ CreateContainerTest.test_create_with_links __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:96: in test_create_with_links
    res2 = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request ("bad parameter: Link is not supported")
_______________ CreateContainerTest.test_create_with_mac_address _______________
tests/integration/api_container_test.py:217: in test_create_with_mac_address
    assert mac_address_expected == res['NetworkSettings']['MacAddress']
E   AssertionError: assert '02:42:ac:11:00:0a' == ''
E     + 02:42:ac:11:00:0a
_______ CreateContainerTest.test_create_with_memory_constraints_with_int _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/441ace066cf11dd1646547469530a2c336848dea72df6b821fb7c91db68bf5ba/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:358: in test_create_with_memory_constraints_with_int
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/441ace066cf11dd1646547469530a2c336848dea72df6b821fb7c91db68bf5ba/start: Internal Server Error ("command rootless-cni-infra [alloc 441ace066cf11dd1646547469530a2c336848dea72df6b821fb7c91db68bf5ba default eloquent_torvalds] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_______ CreateContainerTest.test_create_with_memory_constraints_with_str _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/88029d57e7ae52a964ecf78b0c623dc1e50000e5ac158d57564b1507a91358f2/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:343: in test_create_with_memory_constraints_with_str
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/88029d57e7ae52a964ecf78b0c623dc1e50000e5ac158d57564b1507a91358f2/start: Internal Server Error ("command rootless-cni-infra [alloc 88029d57e7ae52a964ecf78b0c623dc1e50000e5ac158d57564b1507a91358f2 default quirky_gagarin] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_____________ CreateContainerTest.test_create_with_restart_policy ______________
tests/integration/api_container_test.py:127: in test_create_with_restart_policy
    self.client.remove_container(id)
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
__________________ CreateContainerTest.test_create_with_tmpfs __________________
tests/integration/api_container_test.py:391: in test_create_with_tmpfs
    assert config['HostConfig']['Tmpfs'] == tmpfs
E   AssertionError: assert {'/tmp1=size=...ev,tmpcopyup'} == {'/tmp1': 'size=3M'}
E     Left contains 1 more item:
E     {'/tmp1=size=3M': 'rw,rprivate,nosuid,nodev,tmpcopyup'}
E     Right contains 1 more item:
E     {'/tmp1': 'size=3M'}
E     Full diff:
E     - {'/tmp1': 'size=3M'}
E     + {'/tmp1=size=3M': 'rw,rprivate,nosuid,nodev,tmpcopyup'}
____________________ CreateContainerTest.test_group_id_ints ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/77b05ddb50ff777bdb344829fb7faab8e9d0d76e5acd221ef61019081460abd6/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:227: in test_group_id_ints
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/77b05ddb50ff777bdb344829fb7faab8e9d0d76e5acd221ef61019081460abd6/start: Internal Server Error ("command rootless-cni-infra [alloc 77b05ddb50ff777bdb344829fb7faab8e9d0d76e5acd221ef61019081460abd6 default condescending_lalande] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________ CreateContainerTest.test_group_id_strings ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/d09f3a0cfa143471b62ce0e22314b811537dc834eec494a968f38af45455e80a/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:244: in test_group_id_strings
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/d09f3a0cfa143471b62ce0e22314b811537dc834eec494a968f38af45455e80a/start: Internal Server Error ("command rootless-cni-infra [alloc d09f3a0cfa143471b62ce0e22314b811537dc834eec494a968f38af45455e80a default romantic_clarke] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_________ CreateContainerTest.test_invalid_log_driver_raises_exception _________
tests/integration/api_container_test.py:293: in test_invalid_log_driver_raises_exception
    assert excinfo.value.explanation in expected_msgs
E   AssertionError: assert 'container create: error running container create option: invalid log driver: invalid argument' in ["logger: no log driver named 'asdf' is registered", 'error looking up logging plugin asdf: plugin "asdf" not found']
E    +  where 'container create: error running container create option: invalid log driver: invalid argument' = APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')).explanation
E    +    where APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) = <ExceptionInfo APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) tblen=6>.value
____________ CreateContainerTest.test_valid_log_driver_and_log_opt _____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e297a8a1e6a26f6542e402ba7ab8fd38b6577ee5af859a4930df8d0f5782abd7/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:266: in test_valid_log_driver_and_log_opt
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e297a8a1e6a26f6542e402ba7ab8fd38b6577ee5af859a4930df8d0f5782abd7/start: Internal Server Error ("command rootless-cni-infra [alloc e297a8a1e6a26f6542e402ba7ab8fd38b6577ee5af859a4930df8d0f5782abd7 default tender_chatterjee] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
______________ CreateContainerTest.test_valid_no_config_specified ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6467cab54e55873944b12dbd172a58decc87cd325cdb8e6af897d8dba0bafad0/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:325: in test_valid_no_config_specified
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6467cab54e55873944b12dbd172a58decc87cd325cdb8e6af897d8dba0bafad0/start: Internal Server Error ("command rootless-cni-infra [alloc 6467cab54e55873944b12dbd172a58decc87cd325cdb8e6af897d8dba0bafad0 default keen_turing] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
____________ CreateContainerTest.test_valid_no_log_driver_specified ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/cc40252f67e4795d895835e462a8036046ba1aa0fec320dc396d05688d82cd4f/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:306: in test_valid_no_log_driver_specified
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/cc40252f67e4795d895835e462a8036046ba1aa0fec320dc396d05688d82cd4f/start: Internal Server Error ("command rootless-cni-infra [alloc cc40252f67e4795d895835e462a8036046ba1aa0fec320dc396d05688d82cd4f default sharp_easley] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________ VolumeBindTest.test_create_with_binds_ro ___________________
tests/integration/api_container_test.py:541: in test_create_with_binds_ro
    assert self.filename in logs
E   AssertionError: assert 'shared.txt' in ''
E    +  where 'shared.txt' = <tests.integration.api_container_test.VolumeBindTest testMethod=test_create_with_binds_ro>.filename
___________________ VolumeBindTest.test_create_with_binds_rw ___________________
tests/integration/api_container_test.py:522: in test_create_with_binds_rw
    assert self.filename in logs
E   AssertionError: assert 'shared.txt' in ''
E    +  where 'shared.txt' = <tests.integration.api_container_test.VolumeBindTest testMethod=test_create_with_binds_rw>.filename
____________________ VolumeBindTest.test_create_with_mounts ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:552: in test_create_with_mounts
    container = self.run_container(
tests/integration/base.py:98: in run_container
    container = self.client.create_container(*args, **kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("fill out specgen: incorrect mount format: should be --mount type=<bind|tmpfs|volume>,[src=<host-dir|volume-name>,]target=<ctr-dir>[,options]")
__________________ VolumeBindTest.test_create_with_mounts_ro ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:571: in test_create_with_mounts_ro
    container = self.run_container(
tests/integration/base.py:98: in run_container
    container = self.client.create_container(*args, **kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("fill out specgen: incorrect mount format: should be --mount type=<bind|tmpfs|volume>,[src=<host-dir|volume-name>,]target=<ctr-dir>[,options]")
_________________ VolumeBindTest.test_create_with_volume_mount _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:590: in test_create_with_volume_mount
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("fill out specgen: incorrect mount format: should be --mount type=<bind|tmpfs|volume>,[src=<host-dir|volume-name>,]target=<ctr-dir>[,options]")
_________________ ArchiveTest.test_copy_directory_to_container _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 501 Server Error: Not Implemented for url: http+docker://localhost/v1.40/containers/38e00ea466f14dc1adedf5d5d138e2eb09e741e0ff3b50fb5fb49b18c1bf84b7/archive?path=%2Fvol1

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:700: in test_copy_directory_to_container
    self.client.put_archive(ctnr, '/vol1', test_tar)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:966: in put_archive
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 501 Server Error for http+docker://localhost/v1.40/containers/38e00ea466f14dc1adedf5d5d138e2eb09e741e0ff3b50fb5fb49b18c1bf84b7/archive?path=%2Fvol1: Not Implemented ("not implemented")
___________________ ArchiveTest.test_copy_file_to_container ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 501 Server Error: Not Implemented for url: http+docker://localhost/v1.40/containers/2850cad8f02c0a72181278d519a577eacf0b8117b5d0361d9677f85b10a8afdc/archive?path=%2Fvol1

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:682: in test_copy_file_to_container
    self.client.put_archive(ctnr, '/vol1', test_tar)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:966: in put_archive
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 501 Server Error for http+docker://localhost/v1.40/containers/2850cad8f02c0a72181278d519a577eacf0b8117b5d0361d9677f85b10a8afdc/archive?path=%2Fvol1: Not Implemented ("not implemented")
_______________ ArchiveTest.test_get_file_archive_from_container _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 501 Server Error: Not Implemented for url: http+docker://localhost/v1.40/containers/94d27f77a93aaa017ab40fe5f4656b9be7873f1191e0549957729a946e950d50/archive?path=%2Fvol1%2Fdata.txt

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:644: in test_get_file_archive_from_container
    strm, stat = self.client.get_archive(ctnr, '/vol1/data.txt')
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:750: in get_archive
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 501 Server Error for http+docker://localhost/v1.40/containers/94d27f77a93aaa017ab40fe5f4656b9be7873f1191e0549957729a946e950d50/archive?path=%2Fvol1%2Fdata.txt: Not Implemented ("not implemented")
________________ ArchiveTest.test_get_file_stat_from_container _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 501 Server Error: Not Implemented for url: http+docker://localhost/v1.40/containers/a631115c0b8b5cf7620120b52f2976d8d75b58ce08f444e9003d8f0b507adadc/archive?path=%2Fvol1%2Fdata.txt

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:662: in test_get_file_stat_from_container
    strm, stat = self.client.get_archive(ctnr, '/vol1/data.txt')
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:750: in get_archive
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 501 Server Error for http+docker://localhost/v1.40/containers/a631115c0b8b5cf7620120b52f2976d8d75b58ce08f444e9003d8f0b507adadc/archive?path=%2Fvol1%2Fdata.txt: Not Implemented ("not implemented")
__________________ RenameContainerTest.test_rename_container ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/e8097b264d46bbbda66580043383ef2e042025629855cddc7be85e364911e2fc/rename?name=hong_meiling

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:720: in test_rename_container
    self.client.rename(res, name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1030: in rename
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/e8097b264d46bbbda66580043383ef2e042025629855cddc7be85e364911e2fc/rename?name=hong_meiling: Not Found ("Path /v1.40/containers/e8097b264d46bbbda66580043383ef2e042025629855cddc7be85e364911e2fc/rename is not supported")
______________________ WaitTest.test_wait_with_condition _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/817819f108a03dfc5da3bf2929ef4a20ef8d580302d42ebc4f7d34c88bcbd552/wait?condition=removed

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:815: in test_wait_with_condition
    self.client.wait(ctnr, condition='removed', timeout=1)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1306: in wait
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/817819f108a03dfc5da3bf2929ef4a20ef8d580302d42ebc4f7d34c88bcbd552/wait?condition=removed: Internal Server Error ("unknown container state: removed: invalid argument")
________________________ LogsTest.test_logs_with_until _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/e3d31c58a97aa93f3febb74f189a91eeef6720fc8dbeb01edf45c9aba2bb068c/logs?stderr=1&stdout=1&timestamps=0&follow=0&tail=all&until=1

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:931: in test_logs_with_until
    logs_until_1 = self.client.logs(container, until=1)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:871: in logs
    output = self._get_result(container, stream, res)
docker/api/client.py:486: in _get_result
    return self._get_result_tty(stream, res, self._check_is_tty(container))
docker/api/client.py:495: in _get_result_tty
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/e3d31c58a97aa93f3febb74f189a91eeef6720fc8dbeb01edf45c9aba2bb068c/logs?stderr=1&stdout=1&timestamps=0&follow=0&tail=all&until=1: Bad Request ("failed to parse query parameter 'until': "1": unable to interpret time value")
______________________________ PortTest.test_port ______________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/c8d66c87920baac7414f75ba18333711d4d32c602f5ae73d8b069ee737185129/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1090: in test_port
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c8d66c87920baac7414f75ba18333711d4d32c602f5ae73d8b069ee737185129/start: Internal Server Error ("command rootless-cni-infra [alloc c8d66c87920baac7414f75ba18333711d4d32c602f5ae73d8b069ee737185129 bridge laughing_germain] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"bridge\" in /etc/cni/net.d\n"")
__________________ AttachContainerTest.test_attach_no_stream ___________________
tests/integration/api_container_test.py:1252: in test_attach_no_stream
    assert output == 'hello\n'.encode(encoding='ascii')
E   AssertionError: assert b'hello' == b'hello\n'
E     Full diff:
E     - b'hello\n'
E     ?        --
E     + b'hello'
________________ ContainerUpdateTest.test_restart_policy_update ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/d99167c1dac2c22269bbac7e0ac5a20a4db20fb04cc05167a78277abb468c1e1/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1437: in test_restart_policy_update
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/d99167c1dac2c22269bbac7e0ac5a20a4db20fb04cc05167a78277abb468c1e1/start: Internal Server Error ("command rootless-cni-infra [alloc d99167c1dac2c22269bbac7e0ac5a20a4db20fb04cc05167a78277abb468c1e1 default happy_euclid] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________ ContainerUpdateTest.test_update_container ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/28325c2254f4d5adb3d4b2c6fb96fecc4bcde9e54aabcaf69efb6c721cecdb5c/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1415: in test_update_container
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/28325c2254f4d5adb3d4b2c6fb96fecc4bcde9e54aabcaf69efb6c721cecdb5c/start: Internal Server Error ("command rootless-cni-infra [alloc 28325c2254f4d5adb3d4b2c6fb96fecc4bcde9e54aabcaf69efb6c721cecdb5c default blissful_keller] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________ ContainerCPUTest.test_container_cpu_shares __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/ec0250698ed98ecbdb24ca0d2bc9d337d950d3a256e8c1bdaa47bdd7980a9127/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1460: in test_container_cpu_shares
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/ec0250698ed98ecbdb24ca0d2bc9d337d950d3a256e8c1bdaa47bdd7980a9127/start: Internal Server Error ("command rootless-cni-infra [alloc ec0250698ed98ecbdb24ca0d2bc9d337d950d3a256e8c1bdaa47bdd7980a9127 default hardcore_elgamal] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
____________________ ContainerCPUTest.test_container_cpuset ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/14ea2dbdf34468b7bb2b0e4edc02ac48bc84f8c85c99787c10373cb593bffeca/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1472: in test_container_cpuset
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/14ea2dbdf34468b7bb2b0e4edc02ac48bc84f8c85c99787c10373cb593bffeca/start: Internal Server Error ("command rootless-cni-infra [alloc 14ea2dbdf34468b7bb2b0e4edc02ac48bc84f8c85c99787c10373cb593bffeca default eloquent_pare] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________ ContainerCPUTest.test_create_with_runtime ___________________
tests/integration/api_container_test.py:1483: in test_create_with_runtime
    assert config['HostConfig']['Runtime'] == 'runc'
E   AssertionError: assert 'oci' == 'runc'
E     - runc
E     + oci
__________________________ LinkTest.test_remove_link ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1501: in test_remove_link
    container2 = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request ("bad parameter: Link is not supported")
____________________ ExecTest.test_detach_with_config_file _____________________
tests/integration/api_exec_test.py:227: in test_detach_with_config_file
    assert_cat_socket_detached_with_keys(sock, [ctrl_with('p')])
tests/helpers.py:138: in assert_cat_socket_detached_with_keys
    assert data == b'' or data.startswith(
E   AssertionError
______________________ ExecTest.test_exec_start_detached _______________________
tests/integration/api_exec_test.py:152: in test_exec_start_detached
    assert response == ""
E   AssertionError: assert '\n' == ''
E     Strings contain only whitespace, escaping them using repr()
E     - ''
E     + '\n'
_______________________ ExecTest.test_exec_start_socket ________________________
tests/integration/api_exec_test.py:134: in test_exec_start_socket
    assert stream == 1  # stdout (0 = stdin, 1 = stdout, 2 = stderr)
E   AssertionError: assert 121 == 1
E     +121
E     -1
_____________ ExecDemuxTest.test_exec_command_tty_no_stream_demux ______________
tests/integration/api_exec_test.py:299: in test_exec_command_tty_no_stream_demux
    exec_log = self.client.exec_start(res, demux=True)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/exec_api.py:169: in exec_start
    return self._read_from_socket(res, stream, tty=tty, demux=demux)
docker/api/client.py:450: in _read_from_socket
    return consume_socket_output(gen, demux=demux)
docker/utils/socket.py:142: in consume_socket_output
    for frame in frames:
docker/api/client.py:441: in <genexpr>
    gen = (demux_adaptor(*frame) for frame in gen)
docker/utils/socket.py:169: in demux_adaptor
    raise ValueError('{0} is not a valid stream'.format(stream_id))
E   ValueError: 104 is not a valid stream
____________ ExecDemuxTest.test_exec_command_tty_no_stream_no_demux ____________
tests/integration/api_exec_test.py:282: in test_exec_command_tty_no_stream_no_demux
    assert exec_log == b'hello out\r\nhello err\r\n'
E   AssertionError: assert b't\r\nhello err\r\n' == b'hello out\r\nhello err\r\n'
E     At index 0 diff: b't' != b'h'
E     Full diff:
E     - b'hello out\r\nhello err\r\n'
E     ?   --------
E     + b't\r\nhello err\r\n'
_______________ ExecDemuxTest.test_exec_command_tty_stream_demux _______________
tests/integration/api_exec_test.py:305: in test_exec_command_tty_stream_demux
    exec_log = list(self.client.exec_start(res, demux=True, stream=True))
docker/api/client.py:441: in <genexpr>
    gen = (demux_adaptor(*frame) for frame in gen)
docker/utils/socket.py:169: in demux_adaptor
    raise ValueError('{0} is not a valid stream'.format(stream_id))
E   ValueError: 104 is not a valid stream
_____________ ExecDemuxTest.test_exec_command_tty_stream_no_demux ______________
tests/integration/api_exec_test.py:288: in test_exec_command_tty_stream_no_demux
    assert b'hello out\r\n' in exec_log
E   AssertionError: assert b'hello out\r\n' in [b't\r\n', b'hello err\r\n']
____________________ HealthcheckTest.test_healthcheck_fails ____________________
tests/integration/api_healthcheck_test.py:51: in test_healthcheck_fails
    wait_on_health_status(self.client, container, "unhealthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'
___________________ HealthcheckTest.test_healthcheck_passes ____________________
tests/integration/api_healthcheck_test.py:38: in test_healthcheck_passes
    wait_on_health_status(self.client, container, "healthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'
________________ HealthcheckTest.test_healthcheck_shell_command ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_healthcheck_test.py:18: in test_healthcheck_shell_command
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("fill out specgen: healthcheck-retries must be greater than 0")
________________ HealthcheckTest.test_healthcheck_start_period _________________
tests/integration/api_healthcheck_test.py:68: in test_healthcheck_start_period
    wait_on_health_status(self.client, container, "healthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'
___________________ PullImageTest.test_pull_invalid_platform ___________________
tests/integration/api_image_test.py:70: in test_pull_invalid_platform
    self.client.pull('hello-world', platform='foobar')
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
____________________________ CommitTest.test_commit ____________________________
tests/integration/api_image_test.py:93: in test_commit
    assert TEST_IMG == img['ContainerConfig']['Image']
E   AssertionError: assert 'alpine:3.10' == 'docker.io/li...cb41504e8a27c'
E     - docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c
E     + alpine:3.10
_____________________ CommitTest.test_commit_with_changes ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/commit?container=5f238b533c81564d72b4803c389fc28f97dbdfd7cd731a318897922e0aac513e&changes=EXPOSE+8000&changes=CMD+%5B%22bash%22%5D

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:102: in test_commit_with_changes
    img_id = self.client.commit(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:147: in commit
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/commit?container=5f238b533c81564d72b4803c389fc28f97dbdfd7cd731a318897922e0aac513e&changes=EXPOSE+8000&changes=CMD+%5B%22bash%22%5D: Internal Server Error ("CommitFailure: invalid change "CMD" - must be formatted as KEY VALUE")
_____________________ ImportImageTest.test_get_load_image ______________________
tests/integration/api_image_test.py:267: in test_get_load_image
    assert any([
E   AssertionError: assert False
E    +  where False = any([])
______________________ PruneImagesTest.test_prune_images _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/images/prune?filters=%7B%22dangling%22%3A+%5B%22false%22%5D%7D

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:332: in test_prune_images
    result = self.client.prune_images({'dangling': False})
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/image.py:351: in prune_images
    return self._result(self._post(url, params=params), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/images/prune?filters=%7B%22dangling%22%3A+%5B%22false%22%5D%7D: Internal Server Error ("runtime error: invalid memory address or nil pointer dereference")
_________________ SaveLoadImagesTest.test_get_image_load_image _________________
tests/integration/api_image_test.py:361: in test_get_image_load_image
    assert success is True
E   AssertionError: assert False is True
----------------------------- Captured stdout call -----------------------------
{'stream': 'Loaded image: docker.io/library/alpine:3.10\n'}
______________ InspectDistributionTest.test_inspect_distribution _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/distribution/busybox:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:367: in test_inspect_distribution
    data = self.client.inspect_distribution('busybox:latest')
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:289: in inspect_distribution
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/distribution/busybox:latest/json: Not Found ("Path /v1.40/distribution/busybox:latest/json is not supported")
______________ TestNetworks.test_connect_and_disconnect_container ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_a46651012c600cc0/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:102: in test_connect_and_disconnect_container
    self.client.connect_container_to_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_a46651012c600cc0/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
___________ TestNetworks.test_connect_and_force_disconnect_container ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_100fe6d9005b47cb/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:129: in test_connect_and_force_disconnect_container
    self.client.connect_container_to_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_100fe6d9005b47cb/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
________________ TestNetworks.test_connect_on_container_create _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_4be2670ff17c9b75/disconnect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:175: in test_connect_on_container_create
    self.client.disconnect_container_from_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:274: in disconnect_container_from_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_4be2670ff17c9b75/disconnect: Internal Server Error ("network connect is not enabled for rootless containers")
____________________ TestNetworks.test_connect_with_aliases ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_5c3ea623a3717960/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:151: in test_connect_with_aliases
    self.client.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_5c3ea623a3717960/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
_________________ TestNetworks.test_connect_with_ipv4_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b088b5b29e4cccac18952b3af2c4e2c587a876de30b983e46745db6bc79dac77/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:373: in test_connect_with_ipv4_address
    container = self.create_and_start(
tests/integration/base.py:115: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b088b5b29e4cccac18952b3af2c4e2c587a876de30b983e46745db6bc79dac77/start: Internal Server Error ("command rootless-cni-infra [alloc b088b5b29e4cccac18952b3af2c4e2c587a876de30b983e46745db6bc79dac77 dockerpytest_d785ef7691929e43 adoring_liskov] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="failed to set bridge addr: \"cni-podman21\" already has an IP address different from 172.28.5.254/16\n"")
_________________ TestNetworks.test_connect_with_ipv6_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_d52e39f85830dba2/disconnect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:402: in test_connect_with_ipv6_address
    self.client.disconnect_container_from_network(container, net_name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:274: in disconnect_container_from_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_d52e39f85830dba2/disconnect: Internal Server Error ("network connect is not enabled for rootless containers")
_____________________ TestNetworks.test_connect_with_links _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_7c33a557d9ea0216/disconnect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:340: in test_connect_with_links
    self.client.disconnect_container_from_network(container, net_name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:274: in disconnect_container_from_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_7c33a557d9ea0216/disconnect: Internal Server Error ("network connect is not enabled for rootless containers")
___________________ TestNetworks.test_create_check_duplicate ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/create

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:330: in test_create_check_duplicate
    net_id = self.client.create_network(net_name, check_duplicate=False)
docker/api/network.py:153: in create_network
    return self._result(res, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/create: Internal Server Error ("the network name dockerpytest_f373e95d5f45e0d9 is already used")
_____________ TestNetworks.test_create_inspect_network_with_scope ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:474: in test_create_inspect_network_with_scope
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________ TestNetworks.test_create_internal_networks __________________
tests/integration/api_network_test.py:415: in test_create_internal_networks
    assert net['Internal'] is True
E   AssertionError: assert False is True
_________________ TestNetworks.test_create_network_attachable __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:453: in test_create_network_attachable
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________________ TestNetworks.test_create_network_ingress ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:460: in test_create_network_ingress
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________________ TestNetworks.test_create_network_ipv6_enabled _________________
tests/integration/api_network_test.py:449: in test_create_network_ipv6_enabled
    assert net['EnableIPv6'] is True
E   AssertionError: assert False is True
______________ TestNetworks.test_create_network_with_ipam_config _______________
tests/integration/api_network_test.py:70: in test_create_network_with_ipam_config
    assert ipam['Config'] == [{
E   AssertionError: assert [{'Gateway': ...2.28.0.0/16'}] == [{'AuxiliaryA...2.28.0.0/16'}]
E     At index 0 diff: {'Subnet': '172.28.0.0/16', 'Gateway': '172.28.5.254'} != {'Subnet': '172.28.0.0/16', 'IPRange': '172.28.5.0/24', 'Gateway': '172.28.5.254', 'AuxiliaryAddresses': {'a': '172.28.1.5', 'b': '172.28.1.6', 'c': '172.28.1.7'}}
E     Full diff:
E       [
E     -  {'AuxiliaryAddresses': {'a': '172.28.1.5',
E     -                          'b': '172.28.1.6',
E     -                          'c': '172.28.1.7'},
E     -   'Gateway': '172.28.5.254',...
E     
E     ...Full output truncated (7 lines hidden), use '-vv' to show
_________________ TestNetworks.test_create_network_with_labels _________________
tests/integration/api_network_test.py:425: in test_create_network_with_labels
    assert len(net['Labels']) == 1
E   TypeError: object of type 'NoneType' has no len()
___________________ TestNetworks.test_create_with_driveropt ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/0dd542f56b157a1f6241fbd5abc2d88576f86933e6a0bd2ef7b32484298e4e5b/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:292: in test_create_with_driveropt
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/0dd542f56b157a1f6241fbd5abc2d88576f86933e6a0bd2ef7b32484298e4e5b/start: Internal Server Error ("command rootless-cni-infra [alloc 0dd542f56b157a1f6241fbd5abc2d88576f86933e6a0bd2ef7b32484298e4e5b bridge frosty_carver] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"bridge\" in /etc/cni/net.d\n"")
__________________ TestNetworks.test_create_with_ipv4_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b53c768bb7aad6ea10a7f969e5486f449d57331f868a099051db97b928f19964/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:223: in test_create_with_ipv4_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b53c768bb7aad6ea10a7f969e5486f449d57331f868a099051db97b928f19964/start: Internal Server Error ("command rootless-cni-infra [alloc b53c768bb7aad6ea10a7f969e5486f449d57331f868a099051db97b928f19964 dockerpytest_ab35f41f733f7187 eloquent_lichterman] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="failed to set bridge addr: \"cni-podman21\" already has an IP address different from 132.124.0.1/16\n"")
__________________ TestNetworks.test_create_with_ipv6_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/299bd9b9fb621832b4a6b49f94917cefd100eb8f6feefdc6cd833e9cc98ffa97/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:249: in test_create_with_ipv6_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/299bd9b9fb621832b4a6b49f94917cefd100eb8f6feefdc6cd833e9cc98ffa97/start: Internal Server Error ("command rootless-cni-infra [alloc 299bd9b9fb621832b4a6b49f94917cefd100eb8f6feefdc6cd833e9cc98ffa97 dockerpytest_976dffedb8cf5f81 zealous_roentgen] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="failed to set bridge addr: \"cni-podman21\" already has an IP address different from 2001:389::1/64\n"")
_________________ TestNetworks.test_create_with_linklocal_ips __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/67df79a420e816668175da6f3cedafb33827c89bd9edba05f1500056f2460011/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:271: in test_create_with_linklocal_ips
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/67df79a420e816668175da6f3cedafb33827c89bd9edba05f1500056f2460011/start: Internal Server Error ("command rootless-cni-infra [alloc 67df79a420e816668175da6f3cedafb33827c89bd9edba05f1500056f2460011 bridge interesting_grothendieck] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"bridge\" in /etc/cni/net.d\n"")
_____________________ TestNetworks.test_create_with_links ______________________
tests/integration/api_network_test.py:315: in test_create_with_links
    assert net_settings['Networks'][net_name]['Links'] == [
E   AssertionError: assert None == ['docker-py-t...upstream:bar']
E     +None
E     -['docker-py-test-upstream:bar']
______________________ TestNetworks.test_inspect_network _______________________
tests/integration/api_network_test.py:41: in test_inspect_network
    assert net['Scope'] == 'local'
E   AssertionError: assert '' == 'local'
E     - local
_______________________ TestNetworks.test_list_networks ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks?filters=%7B%22id%22%3A+%5B%22dockerpy%22%5D%7D

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:31: in test_list_networks
    networks_by_partial_id = self.client.networks(ids=[net_id[:8]])
docker/api/network.py:39: in networks
    return self._result(res, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks?filters=%7B%22id%22%3A+%5B%22dockerpy%22%5D%7D: Internal Server Error ("only the name filter for listing networks is implemented")
_______________________ TestNetworks.test_prune_networks _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 405 Client Error: Method Not Allowed for url: http+docker://localhost/v1.40/networks/prune

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:469: in test_prune_networks
    result = self.client.prune_networks()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/network.py:175: in prune_networks
    return self._result(self._post(url, params=params), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 405 Client Error for http+docker://localhost/v1.40/networks/prune: Method Not Allowed ("b'Method Not Allowed'")
_______________________ PluginTest.test_configure_plugin _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:90: in test_configure_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_create_plugin _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/create?name=docker-sdk-py%2Fdummy

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:140: in test_create_plugin
    assert self.client.create_plugin(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:52: in create_plugin
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/create?name=docker-sdk-py%2Fdummy: Not Found ("b'Not Found'")
________________________ PluginTest.test_disable_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:56: in test_disable_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_enable_plugin _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:47: in test_enable_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
_____________________ PluginTest.test_force_remove_plugin ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:109: in test_force_remove_plugin
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_inspect_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:68: in test_inspect_plugin
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_install_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:120: in test_install_plugin
    prv = self.client.plugin_privileges(SSHFS)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
_________________________ PluginTest.test_list_plugins _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:83: in test_list_plugins
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
______________________ PluginTest.test_plugin_privileges _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:75: in test_plugin_privileges
    prv = self.client.plugin_privileges(SSHFS)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_remove_plugin _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:104: in test_remove_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_upgrade_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:128: in test_upgrade_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________ TestVolumes.test_create_volume_invalid_driver _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/volumes/create

During handling of the above exception, another exception occurred:
tests/integration/api_volume_test.py:22: in test_create_volume_invalid_driver
    self.client.create_volume('perfectcherryblossom', driver_name)
docker/api/volume.py:89: in create_volume
    return self._result(self._post_json(url, data=data), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/volumes/create: Internal Server Error ("error running volume create option: not yet implemented")
_______________________ TestVolumes.test_inspect_volume ________________________
tests/integration/api_volume_test.py:38: in test_inspect_volume
    assert volume_info == result
E   AssertionError: assert {'CreatedAt':...l/_data', ...} == {'CreatedAt':...l/_data', ...}
E     Omitting 6 identical items, use -vv to show
E     Differing items:
E     {'Options': None} != {'Options': {}}
E     Full diff:
E       {
E        'CreatedAt': '2021-01-02T16:38:36+01:00',
E        'Driver': 'local',...
E     
E     ...Full output truncated (10 lines hidden), use '-vv' to show
________________________ TestVolumes.test_list_volumes _________________________
tests/integration/api_volume_test.py:31: in test_list_volumes
    assert volume_info in volumes
E   AssertionError: assert {'CreatedAt': '2021-01-02T16:38:40+01:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...} in [{'CreatedAt': '2021-01-02T15:57:56+01:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage...00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...}]
___________________ ContextLifecycleTest.test_context_remove ___________________
tests/integration/context_api_test.py:47: in test_context_remove
    ContextAPI.create_context("test")
docker/context/api.py:57: in create_context
    raise errors.ContextAlreadyExists(name)
E   docker.errors.ContextAlreadyExists: context test already exists
_____________________ ContextLifecycleTest.test_lifecycle ______________________
tests/integration/context_api_test.py:13: in test_lifecycle
    assert not ContextAPI.get_context("test")
E   AssertionError: assert not <Context: 'test'>
E    +  where <Context: 'test'> = <bound method ContextAPI.get_context of <class 'docker.context.api.ContextAPI'>>('test')
E    +    where <bound method ContextAPI.get_context of <class 'docker.context.api.ContextAPI'>> = ContextAPI.get_context
_________ ContextLifecycleTest.test_load_context_without_orchestrator __________
tests/integration/context_api_test.py:55: in test_load_context_without_orchestrator
    ContextAPI.create_context("test")
docker/context/api.py:57: in create_context
    raise errors.ContextAlreadyExists(name)
E   docker.errors.ContextAlreadyExists: context test already exists
____________________ ErrorsTest.test_api_error_parses_json _____________________
tests/integration/errors_test.py:13: in test_api_error_parses_json
    assert 'You cannot remove a running container' in explanation
E   AssertionError: assert 'You cannot remove a running container' in 'cannot remove container e653b7ddf61e1ec32e3e62d484ae95018e2a18abeb915539440a4c55337dd0b7 as it is running - running or paused containers cannot be removed without force: container state improper'
_______________________ ContainerCollectionTest.test_get _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/737cda6f592d46c7c002a68d88c4d847c23e17f12a1ad62d083b408c31146af3/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:187: in test_get
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/737cda6f592d46c7c002a68d88c4d847c23e17f12a1ad62d083b408c31146af3/start: Internal Server Error ("command rootless-cni-infra [alloc 737cda6f592d46c7c002a68d88c4d847c23e17f12a1ad62d083b408c31146af3 default unruffled_yonath] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
______________________ ContainerCollectionTest.test_list _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b8d1eddf8746693f3bcf174e74fbd48ef28f8db11ed434284ca0b49cdc7ac2a1/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:194: in test_list
    container_id = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b8d1eddf8746693f3bcf174e74fbd48ef28f8db11ed434284ca0b49cdc7ac2a1/start: Internal Server Error ("command rootless-cni-infra [alloc b8d1eddf8746693f3bcf174e74fbd48ef28f8db11ed434284ca0b49cdc7ac2a1 default quizzical_kare] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________ ContainerCollectionTest.test_list_sparse ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/133b3513dbed139e2814ae7c6a9a1201657d7e0e939fc84abef971f6826d76ee/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:212: in test_list_sparse
    container_id = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/133b3513dbed139e2814ae7c6a9a1201657d7e0e939fc84abef971f6826d76ee/start: Internal Server Error ("command rootless-cni-infra [alloc 133b3513dbed139e2814ae7c6a9a1201657d7e0e939fc84abef971f6826d76ee default epic_lovelace] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_______________________ ContainerCollectionTest.test_run _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/9f8f176e6dbcb451dbe0179ea3bb53bbfd388bc091eafd1c463a4af8c07d8b58/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:18: in test_run
    assert client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/9f8f176e6dbcb451dbe0179ea3bb53bbfd388bc091eafd1c463a4af8c07d8b58/start: Internal Server Error ("command rootless-cni-infra [alloc 9f8f176e6dbcb451dbe0179ea3bb53bbfd388bc091eafd1c463a4af8c07d8b58 default determined_wiles] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________ ContainerCollectionTest.test_run_detach ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e13d894d7fbf151c3adee68a2ded285e129f4aa63da5090d6808f7354333dc74/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:24: in test_run_detach
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e13d894d7fbf151c3adee68a2ded285e129f4aa63da5090d6808f7354333dc74/start: Internal Server Error ("command rootless-cni-infra [alloc e13d894d7fbf151c3adee68a2ded285e129f4aa63da5090d6808f7354333dc74 default sleepy_dirac] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
______________ ContainerCollectionTest.test_run_with_auto_remove _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/670662e627d0201efc118dee341be045b718fc9c4ec2b216ecd71fec101c5add/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:128: in test_run_with_auto_remove
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/670662e627d0201efc118dee341be045b718fc9c4ec2b216ecd71fec101c5add/start: Internal Server Error ("command rootless-cni-infra [alloc 670662e627d0201efc118dee341be045b718fc9c4ec2b216ecd71fec101c5add default interesting_wing] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________ ContainerCollectionTest.test_run_with_auto_remove_error ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/c2a60f9027f53f44f67e229492119eb7477603c7449791f441059095c537284d/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:139: in test_run_with_auto_remove_error
    client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c2a60f9027f53f44f67e229492119eb7477603c7449791f441059095c537284d/start: Internal Server Error ("command rootless-cni-infra [alloc c2a60f9027f53f44f67e229492119eb7477603c7449791f441059095c537284d default laughing_khayyam] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_________________ ContainerCollectionTest.test_run_with_error __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/85c3f9fe8430f380380f7b1f6bf85d8a019b8789cd066325feb3c06c03662803/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:32: in test_run_with_error
    client.containers.run("alpine", "cat /test", remove=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/85c3f9fe8430f380380f7b1f6bf85d8a019b8789cd066325feb3c06c03662803/start: Internal Server Error ("command rootless-cni-infra [alloc 85c3f9fe8430f380380f7b1f6bf85d8a019b8789cd066325feb3c06c03662803 default epic_hermann] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_______ ContainerCollectionTest.test_run_with_image_that_does_not_exist ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:41: in test_run_with_image_that_does_not_exist
    client.containers.run("dockerpytest_does_not_exist")
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/create: Not Found ("unable to find a name and tag match for dockerpytest_does_not_exist in repotags: no such image")
____________ ContainerCollectionTest.test_run_with_json_file_driver ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/bb1976012613a0eceaee4da862eb7c1dd13c856d60323fc0d0876d2b993e2995/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:119: in test_run_with_json_file_driver
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/bb1976012613a0eceaee4da862eb7c1dd13c856d60323fc0d0876d2b993e2995/start: Internal Server Error ("command rootless-cni-infra [alloc bb1976012613a0eceaee4da862eb7c1dd13c856d60323fc0d0876d2b993e2995 default blissful_darwin] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
______________ ContainerCollectionTest.test_run_with_named_volume ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/821bf739f84dcdfe625d5fa6fbc89d6f048d3e49154fc5118c77fa63b239f049/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:72: in test_run_with_named_volume
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/821bf739f84dcdfe625d5fa6fbc89d6f048d3e49154fc5118c77fa63b239f049/start: Internal Server Error ("command rootless-cni-infra [alloc 821bf739f84dcdfe625d5fa6fbc89d6f048d3e49154fc5118c77fa63b239f049 default nervous_chandrasekhar] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
______________ ContainerCollectionTest.test_run_with_none_driver _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a363ed3a32ab7f053afe1c8aee4968d8fa290ca81a67c158a0d2775001e981ac/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:110: in test_run_with_none_driver
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a363ed3a32ab7f053afe1c8aee4968d8fa290ca81a67c158a0d2775001e981ac/start: Internal Server Error ("command rootless-cni-infra [alloc a363ed3a32ab7f053afe1c8aee4968d8fa290ca81a67c158a0d2775001e981ac default gallant_poincare] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
______________ ContainerCollectionTest.test_run_with_proxy_config ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/de3e87b3a45ca0f54eb3f653973843b87aba7abbc0793c3408e9eb4f9a410513/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:180: in test_run_with_proxy_config
    out = client.containers.run('alpine', 'sh -c "env"')
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/de3e87b3a45ca0f54eb3f653973843b87aba7abbc0793c3408e9eb4f9a410513/start: Internal Server Error ("command rootless-cni-infra [alloc de3e87b3a45ca0f54eb3f653973843b87aba7abbc0793c3408e9eb4f9a410513 default modest_cerf] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_____________ ContainerCollectionTest.test_run_with_streamed_logs ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/fdebdfc47ec063f4b184828d7d7585997e24a371fc1e68e234cbe55659ab1a7b/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:150: in test_run_with_streamed_logs
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/fdebdfc47ec063f4b184828d7d7585997e24a371fc1e68e234cbe55659ab1a7b/start: Internal Server Error ("command rootless-cni-infra [alloc fdebdfc47ec063f4b184828d7d7585997e24a371fc1e68e234cbe55659ab1a7b default elastic_diffie] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
________ ContainerCollectionTest.test_run_with_streamed_logs_and_cancel ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/71ba83b0ba140046dc014d2eaaa336bae2212f5fe1591382faac85cfd6c65eeb/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:162: in test_run_with_streamed_logs_and_cancel
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/71ba83b0ba140046dc014d2eaaa336bae2212f5fe1591382faac85cfd6c65eeb/start: Internal Server Error ("command rootless-cni-infra [alloc 71ba83b0ba140046dc014d2eaaa336bae2212f5fe1591382faac85cfd6c65eeb default ecstatic_chatterjee] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_________________ ContainerCollectionTest.test_run_with_volume _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/324402c91ffcf856d278bfdb6df61d6f6e3ec2a3b1f6331e745f6e28d98a619c/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:50: in test_run_with_volume
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/324402c91ffcf856d278bfdb6df61d6f6e3ec2a3b1f6331e745f6e28d98a619c/start: Internal Server Error ("command rootless-cni-infra [alloc 324402c91ffcf856d278bfdb6df61d6f6e3ec2a3b1f6331e745f6e28d98a619c default frosty_kapitsa] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_commit ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/72fbfa2e50608aff0175f5e6dec13b324c883ed034cc5defc82f44a4d5bd0ac6/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:235: in test_commit
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/72fbfa2e50608aff0175f5e6dec13b324c883ed034cc5defc82f44a4d5bd0ac6/start: Internal Server Error ("command rootless-cni-infra [alloc 72fbfa2e50608aff0175f5e6dec13b324c883ed034cc5defc82f44a4d5bd0ac6 default youthful_visvesvaraya] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_________________ ContainerTest.test_create_with_volume_driver _________________
tests/integration/models_containers_test.py:456: in test_create_with_volume_driver
    assert container.attrs['HostConfig']['VolumeDriver'] == 'foo'
E   AssertionError: assert '' == 'foo'
E     - foo
___________________________ ContainerTest.test_diff ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/5a9bbbeddeb6b6ff4d4a133a301d5886731934f676d3fffbbac245e33e33a7c9/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:248: in test_diff
    container = client.containers.run("alpine", "touch /test", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/5a9bbbeddeb6b6ff4d4a133a301d5886731934f676d3fffbbac245e33e33a7c9/start: Internal Server Error ("command rootless-cni-infra [alloc 5a9bbbeddeb6b6ff4d4a133a301d5886731934f676d3fffbbac245e33e33a7c9 default naughty_dubinsky] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
______________________ ContainerTest.test_exec_run_failed ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/d23520cd0ccb9ecc91e10caf62ad7b25533dab6458875edb1ddacc2e7f4bcebf/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:265: in test_exec_run_failed
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/d23520cd0ccb9ecc91e10caf62ad7b25533dab6458875edb1ddacc2e7f4bcebf/start: Internal Server Error ("command rootless-cni-infra [alloc d23520cd0ccb9ecc91e10caf62ad7b25533dab6458875edb1ddacc2e7f4bcebf default nostalgic_swanson] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_____________________ ContainerTest.test_exec_run_success ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e9750a8c4b008a4d99ca1fc207714fda121df6f1ebb40d0f6b6c8a9d729a6716/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:255: in test_exec_run_success
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e9750a8c4b008a4d99ca1fc207714fda121df6f1ebb40d0f6b6c8a9d729a6716/start: Internal Server Error ("command rootless-cni-infra [alloc e9750a8c4b008a4d99ca1fc207714fda121df6f1ebb40d0f6b6c8a9d729a6716 default vibrant_liskov] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_kill ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/b01ee1c2ee34597eecb9ce11ac93976ac0bb786f4d7ca6bce430838fedd4e07b/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:274: in test_kill
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/b01ee1c2ee34597eecb9ce11ac93976ac0bb786f4d7ca6bce430838fedd4e07b/start: Internal Server Error ("command rootless-cni-infra [alloc b01ee1c2ee34597eecb9ce11ac93976ac0bb786f4d7ca6bce430838fedd4e07b default jovial_bose] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_logs ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/979b88293085434538e60001e15ad7772b979a57fe3c48f99715590f2329c382/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:285: in test_logs
    container = client.containers.run("alpine", "echo hello world",
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/979b88293085434538e60001e15ad7772b979a57fe3c48f99715590f2329c382/start: Internal Server Error ("command rootless-cni-infra [alloc 979b88293085434538e60001e15ad7772b979a57fe3c48f99715590f2329c382 default clever_hamilton] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_pause ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/7415c5753f3f1a7da5c88a10c82dc008345615de29bdcf8d7f638a2e2a48818b/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:293: in test_pause
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7415c5753f3f1a7da5c88a10c82dc008345615de29bdcf8d7f638a2e2a48818b/start: Internal Server Error ("command rootless-cni-infra [alloc 7415c5753f3f1a7da5c88a10c82dc008345615de29bdcf8d7f638a2e2a48818b default distracted_ptolemy] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_____________________ ContainerTest.test_ports_target_list _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/1f879d91e7c7e78fbbdd0bb5267950c371a73b82dab905ceea081ef87f95fc7e/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:394: in test_ports_target_list
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/1f879d91e7c7e78fbbdd0bb5267950c371a73b82dab905ceea081ef87f95fc7e/start: Internal Server Error ("command rootless-cni-infra [alloc 1f879d91e7c7e78fbbdd0bb5267950c371a73b82dab905ceea081ef87f95fc7e default interesting_bouman] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_____________________ ContainerTest.test_ports_target_none _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:354: in test_ports_target_none
    container = client.containers.run(
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("make cli opts(): strconv.Atoi: parsing "": invalid syntax")
____________________ ContainerTest.test_ports_target_tuple _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/d41b672675ea6d8553a8e9486519f105afa542fa3d98f8663bdc8e774ed4be4b/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:374: in test_ports_target_tuple
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/d41b672675ea6d8553a8e9486519f105afa542fa3d98f8663bdc8e774ed4be4b/start: Internal Server Error ("command rootless-cni-infra [alloc d41b672675ea6d8553a8e9486519f105afa542fa3d98f8663bdc8e774ed4be4b default busy_colden] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_remove ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/62c8d651b386e82912258cfae3e469c665cbc712757443863d22c6eea1cd4de7/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:304: in test_remove
    container = client.containers.run("alpine", "echo hello", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/62c8d651b386e82912258cfae3e469c665cbc712757443863d22c6eea1cd4de7/start: Internal Server Error ("command rootless-cni-infra [alloc 62c8d651b386e82912258cfae3e469c665cbc712757443863d22c6eea1cd4de7 default sleepy_goodall] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_rename ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/34f21fd11a807310d098201f3a425a0381b511220b90b781903e52c94561d23a/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:314: in test_rename
    container = client.containers.run("alpine", "echo hello", name="test1",
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/34f21fd11a807310d098201f3a425a0381b511220b90b781903e52c94561d23a/start: Internal Server Error ("command rootless-cni-infra [alloc 34f21fd11a807310d098201f3a425a0381b511220b90b781903e52c94561d23a default practical_wu] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_restart __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/d13e2bbd3ea8ee5e5f64068b05dec3c3ac741eb753b49d27b554b9b9bcd0a766/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:324: in test_restart
    container = client.containers.run("alpine", "sleep 100", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/d13e2bbd3ea8ee5e5f64068b05dec3c3ac741eb753b49d27b554b9b9bcd0a766/start: Internal Server Error ("command rootless-cni-infra [alloc d13e2bbd3ea8ee5e5f64068b05dec3c3ac741eb753b49d27b554b9b9bcd0a766 default frosty_brahmagupta] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_start ___________________________
tests/integration/models_containers_test.py:336: in test_start
    assert container.status == "created"
E   AssertionError: assert 'configured' == 'created'
E     - created
E     + configured
___________________________ ContainerTest.test_stats ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e19e31a928fbcf0293c1a894bfa507e2602229fec0d11d9965d55e6ff2f985b6/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:343: in test_stats
    container = client.containers.run("alpine", "sleep 100", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e19e31a928fbcf0293c1a894bfa507e2602229fec0d11d9965d55e6ff2f985b6/start: Internal Server Error ("command rootless-cni-infra [alloc e19e31a928fbcf0293c1a894bfa507e2602229fec0d11d9965d55e6ff2f985b6 default nifty_panini] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_stop ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/bd3a5bf9b900bb19a1ac279366a6afc6420a1e4d4f7cc2186b24b02dcd2c3d98/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:412: in test_stop
    container = client.containers.run("alpine", "top", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/bd3a5bf9b900bb19a1ac279366a6afc6420a1e4d4f7cc2186b24b02dcd2c3d98/start: Internal Server Error ("command rootless-cni-infra [alloc bd3a5bf9b900bb19a1ac279366a6afc6420a1e4d4f7cc2186b24b02dcd2c3d98 default wizardly_einstein] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
____________________________ ContainerTest.test_top ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/59bed7231281d922ca5ebcdae3c25451468cb4af942928db388801ab0508ebb5/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:421: in test_top
    container = client.containers.run("alpine", "sleep 60", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/59bed7231281d922ca5ebcdae3c25451468cb4af942928db388801ab0508ebb5/start: Internal Server Error ("command rootless-cni-infra [alloc 59bed7231281d922ca5ebcdae3c25451468cb4af942928db388801ab0508ebb5 default quirky_golick] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_update ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/fdc7ca3e14c24db39b49905b034d49f78fe4cc5107830c9c7e53b07fc3cdf49a/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:429: in test_update
    container = client.containers.run("alpine", "sleep 60", detach=True,
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/fdc7ca3e14c24db39b49905b034d49f78fe4cc5107830c9c7e53b07fc3cdf49a/start: Internal Server Error ("command rootless-cni-infra [alloc fdc7ca3e14c24db39b49905b034d49f78fe4cc5107830c9c7e53b07fc3cdf49a default nostalgic_mclaren] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_wait ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/c8a931a8f4b541473c82d2128935e271036f0110fe910ec52c1188be8f1e0178/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:439: in test_wait
    container = client.containers.run("alpine", "sh -c 'exit 0'",
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/c8a931a8f4b541473c82d2128935e271036f0110fe910ec52c1188be8f1e0178/start: Internal Server Error ("command rootless-cni-infra [alloc c8a931a8f4b541473c82d2128935e271036f0110fe910ec52c1188be8f1e0178 default blissful_wing] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
________________________ ImageCollectionTest.test_build ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:20: in test_build
    assert client.containers.run(image) == b"hello world\n"
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("container create: both RootfsImageName and RootfsImageID must be set if either is set: invalid argument")
__________________ ImageCollectionTest.test_build_with_error ___________________
tests/integration/models_images_test.py:30: in test_build_with_error
    assert (
E   AssertionError: assert "The command '/bin/sh -c exit 1' returned a non-zero code: 1" in 'docker.errors.BuildError: error building at STEP "RUN exit 1": exit status 1'
E    +  where 'docker.errors.BuildError: error building at STEP "RUN exit 1": exit status 1' = <bound method ExceptionInfo.exconly of <ExceptionInfo BuildError('error building at STEP "RUN exit 1": exit status 1\n') tblen=2>>()
E    +    where <bound method ExceptionInfo.exconly of <ExceptionInfo BuildError('error building at STEP "RUN exit 1": exit status 1\n') tblen=2>> = <ExceptionInfo BuildError('error building at STEP "RUN exit 1": exit status 1\n') tblen=2>.exconly
_____________ ImageCollectionTest.test_build_with_multiple_success _____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6ade8894d517a7c782f17b421cd0b91921be3444a720a9063348921e7a2a534c/start

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:44: in test_build_with_multiple_success
    assert client.containers.run(image) == b"hello world\n"
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6ade8894d517a7c782f17b421cd0b91921be3444a720a9063348921e7a2a534c/start: Internal Server Error ("command rootless-cni-infra [alloc 6ade8894d517a7c782f17b421cd0b91921be3444a720a9063348921e7a2a534c default loving_thompson] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________ ImageCollectionTest.test_build_with_success_build_output ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/79a9e110c3e09f68b5f7fb6ef4b8187f44ee5cd3c9f083143d589786a4118994/start

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:55: in test_build_with_success_build_output
    assert client.containers.run(image) == b"Successfully built abcd1234\n"
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/79a9e110c3e09f68b5f7fb6ef4b8187f44ee5cd3c9f083143d589786a4118994/start: Internal Server Error ("command rootless-cni-infra [alloc 79a9e110c3e09f68b5f7fb6ef4b8187f44ee5cd3c9f083143d589786a4118994 default keen_goldstine] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_____________________ ImageCollectionTest.test_load_error ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/images/load

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:98: in test_load_error
    client.images.load('abc')
docker/models/images.py:384: in load
    for chunk in resp:
docker/api/client.py:389: in _stream_helper
    yield self._result(response, json=decode)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/images/load: Internal Server Error ("failed to load image: error pulling "": Invalid image localhost/")
________________________ ImageCollectionTest.test_pull _________________________
tests/integration/models_images_test.py:71: in test_pull
    assert 'alpine:latest' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:latest' in ['docker.io/library/alpine:3.12', 'docker.io/library/alpine:latest']
____________________ ImageCollectionTest.test_pull_multiple ____________________
tests/integration/models_images_test.py:91: in test_pull_multiple
    assert any([
tests/integration/models_images_test.py:91: in <listcomp>
    assert any([
E   TypeError: argument of type 'NoneType' is not iterable
____________________ ImageCollectionTest.test_pull_with_sha ____________________
tests/integration/models_images_test.py:85: in test_pull_with_sha
    assert image_ref in image.attrs['RepoDigests']
E   AssertionError: assert 'hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7' in ['docker.io/library/hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7', 'docker.io/library/hello-world@sha256:8072a54ebb3bc136150e2f2860f00a7bf45f13eeb917cca2430fcd0054c8e51b']
____________________ ImageCollectionTest.test_pull_with_tag ____________________
tests/integration/models_images_test.py:76: in test_pull_with_tag
    assert 'alpine:3.10' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:3.10' in ['docker.io/library/alpine:3.10', 'docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c']
_______________ ImageCollectionTest.test_save_and_load_repo_name _______________
tests/integration/models_images_test.py:122: in test_save_and_load_repo_name
    stream = image.save(named='{}:latest'.format(additional_tag))
docker/models/images.py:98: in save
    raise InvalidArgument(
E   docker.errors.InvalidArgument: dockerpytest_692f5b49c3af0b7:latest is not a valid tag for this image
______________________ NetworkCollectionTest.test_create _______________________
tests/integration/models_networks_test.py:14: in test_create
    assert network.attrs['Labels']['foo'] == "bar"
E   TypeError: 'NoneType' object is not subscriptable
____________________ NetworkCollectionTest.test_list_remove ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks?filters=%7B%22id%22%3A+%5B%22fdhjklfdfdshjkfds%22%5D%7D

During handling of the above exception, another exception occurred:
tests/integration/models_networks_test.py:30: in test_list_remove
    assert network.id not in [
docker/models/networks.py:209: in list
    resp = self.client.api.networks(*args, **kwargs)
docker/api/network.py:39: in networks
    return self._result(res, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks?filters=%7B%22id%22%3A+%5B%22fdhjklfdfdshjkfds%22%5D%7D: Internal Server Error ("only the name filter for listing networks is implemented")
_____________________ NetworkTest.test_connect_disconnect ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_b62491604858a12e/connect

During handling of the above exception, another exception occurred:
tests/integration/models_networks_test.py:59: in test_connect_disconnect
    network.connect(container)
docker/models/networks.py:58: in connect
    return self.client.api.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_b62491604858a12e/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
________________________ NodesTest.test_list_get_update ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_nodes_test.py:18: in test_list_get_update
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
____________________________ ModelTest.test_reload _____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e21f19d6dd8ba316831fbdd82d8cc4b8f55fbbccd3bd7f9d66ce4fb9bcca0a87/start

During handling of the above exception, another exception occurred:
tests/integration/models_resources_test.py:9: in test_reload
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e21f19d6dd8ba316831fbdd82d8cc4b8f55fbbccd3bd7f9d66ce4fb9bcca0a87/start: Internal Server Error ("command rootless-cni-infra [alloc e21f19d6dd8ba316831fbdd82d8cc4b8f55fbbccd3bd7f9d66ce4fb9bcca0a87 default unruffled_dhawan] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_________________________ VolumesTest.test_list_remove _________________________
tests/integration/models_volumes_test.py:26: in test_list_remove
    assert volume in client.volumes.list(filters={'name': 'dockerpytest_'})
E   AssertionError: assert <Volume: dockerpyte> in []
E    +  where [] = <bound method VolumeCollection.list of <docker.models.volumes.VolumeCollection object at 0x7efd1f465040>>(filters={'name': 'dockerpytest_'})
E    +    where <bound method VolumeCollection.list of <docker.models.volumes.VolumeCollection object at 0x7efd1f465040>> = <docker.models.volumes.VolumeCollection object at 0x7efd1f465040>.list
E    +      where <docker.models.volumes.VolumeCollection object at 0x7efd1f465040> = <docker.client.DockerClient object at 0x7efd1efd6820>.volumes
________ TestRegressions.test_443_handle_nonchunked_response_in_stream _________
tests/integration/regression_test.py:16: in test_443_handle_nonchunked_response_in_stream
    pass
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
_______________ TestRegressions.test_792_explicit_port_protocol ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/bd48f30cf6bb8de80642fcb4bbe443b8d55ddbcb01fb61773ec441bfd18fa398/start

During handling of the above exception, another exception occurred:
tests/integration/regression_test.py:56: in test_792_explicit_port_protocol
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/bd48f30cf6bb8de80642fcb4bbe443b8d55ddbcb01fb61773ec441bfd18fa398/start: Internal Server Error ("command rootless-cni-infra [alloc bd48f30cf6bb8de80642fcb4bbe443b8d55ddbcb01fb61773ec441bfd18fa398 default jovial_taussig] in container 61915f9cb196cf1dcabd2f16187dbd32de35ada11f551065a9c5b608e423041c failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
=============================== warnings summary ===============================
../../.virtualenvs/docker-py/lib/python3.8/site-packages/paramiko/hostkeys.py:23
  /home/riyad/.virtualenvs/docker-py/lib/python3.8/site-packages/paramiko/hostkeys.py:23: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.9 it will stop working
    from collections import MutableMapping

tests/integration/api_client_test.py::ConnectionTimeoutTest::test_timeout
  /home/riyad/src/docker-py/docker/utils/utils.py:276: DeprecationWarning: urllib.parse.splitnport() is deprecated as of 3.8, use urllib.parse.urlparse() instead
    host, port = splitnport(parsed_url.netloc)

-- Docs: https://docs.pytest.org/en/stable/warnings.html
=========================== short test summary info ============================
XFAIL tests/integration/api_build_test.py::BuildTest::test_prune_builds
  Currently fails on 18.09: https://github.com/moby/moby/issues/37920
XFAIL tests/integration/api_container_test.py::CreateContainerTest::test_create_with_storage_opt
  Not supported on most drivers
XFAIL tests/integration/api_container_test.py::ContainerTopTest::test_top
  Output of docker top depends on host distro, and is not formalized.
XFAIL tests/integration/api_container_test.py::ContainerTopTest::test_top_with_psargs
  Output of docker top depends on host distro, and is not formalized.
SKIPPED [1] tests/integration/api_image_test.py:292: Doesn't work inside a container - FIXME
= 162 failed, 109 passed, 1 skipped, 106 deselected, 4 xfailed, 1 xpassed, 2 warnings, 6 errors in 913.38s (0:15:13) =
