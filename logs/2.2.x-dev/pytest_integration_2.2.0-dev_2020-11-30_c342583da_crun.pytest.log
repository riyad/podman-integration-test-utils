============================= test session starts ==============================
platform linux -- Python 3.8.5, pytest-4.3.1, py-1.9.0, pluggy-0.13.1 -- /home/riyad/.virtualenvs/docker-py/bin/python
cachedir: .pytest_cache
rootdir: /home/riyad/src/docker-py, inifile: pytest.ini
plugins: cov-2.6.1, timeout-1.3.3
collecting ... collected 389 items

tests/integration/api_build_test.py::BuildTest::test_build_container_with_target FAILED [  0%]
tests/integration/api_build_test.py::BuildTest::test_build_from_stringio PASSED [  0%]
tests/integration/api_build_test.py::BuildTest::test_build_gzip_custom_encoding PASSED [  0%]
tests/integration/api_build_test.py::BuildTest::test_build_gzip_encoding PASSED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_abs_dockerfile FAILED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_dockerfile FAILED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_in_context_nested_dockerfile FAILED [  1%]
tests/integration/api_build_test.py::BuildTest::test_build_invalid_platform FAILED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_isolation PASSED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_labels FAILED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_out_of_context_dockerfile FAILED [  2%]
tests/integration/api_build_test.py::BuildTest::test_build_shmsize PASSED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_squash FAILED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_stderr_data FAILED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_streaming PASSED [  3%]
tests/integration/api_build_test.py::BuildTest::test_build_with_buildargs PASSED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_with_cache_from FAILED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_with_dockerfile_empty_lines PASSED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_with_dockerignore PASSED [  4%]
tests/integration/api_build_test.py::BuildTest::test_build_with_extra_hosts FAILED [  5%]
tests/integration/api_build_test.py::BuildTest::test_build_with_network_mode FAILED [  5%]
tests/integration/api_build_test.py::BuildTest::test_build_with_proxy PASSED [  5%]
tests/integration/api_build_test.py::BuildTest::test_build_with_proxy_and_buildargs PASSED [  5%]
tests/integration/api_build_test.py::BuildTest::test_prune_builds XFAIL  [  6%]
tests/integration/api_client_test.py::InformationTest::test_info PASSED  [  6%]
tests/integration/api_client_test.py::InformationTest::test_version PASSED [  6%]
tests/integration/api_client_test.py::AutoDetectVersionTest::test_client_init PASSED [  6%]
tests/integration/api_client_test.py::ConnectionTimeoutTest::test_timeout PASSED [  7%]
tests/integration/api_client_test.py::UnixconnTest::test_resource_warnings PASSED [  7%]
tests/integration/api_config_test.py::ConfigAPITest::test_create_config ERROR [  7%]
tests/integration/api_config_test.py::ConfigAPITest::test_create_config_unicode_data ERROR [  7%]
tests/integration/api_config_test.py::ConfigAPITest::test_inspect_config ERROR [  8%]
tests/integration/api_config_test.py::ConfigAPITest::test_list_configs ERROR [  8%]
tests/integration/api_config_test.py::ConfigAPITest::test_remove_config ERROR [  8%]
tests/integration/api_container_test.py::ListContainersTest::test_list_containers FAILED [  8%]
tests/integration/api_container_test.py::CreateContainerTest::test_create PASSED [  9%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_container_with_volumes_from FAILED [  9%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_auto_remove PASSED [  9%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_cpu_rt_options XPASS [ 10%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_device_cgroup_rules FAILED [ 10%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_environment_variable_no_value FAILED [ 10%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_host_pid_mode PASSED [ 10%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_init PASSED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_isolation FAILED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_links FAILED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_mac_address FAILED [ 11%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_memory_constraints_with_int FAILED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_memory_constraints_with_str FAILED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_restart_policy FAILED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_stop_timeout PASSED [ 12%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_storage_opt XFAIL [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_tmpfs FAILED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_create_with_uts_mode PASSED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_group_id_ints FAILED [ 13%]
tests/integration/api_container_test.py::CreateContainerTest::test_group_id_strings FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_invalid_log_driver_raises_exception FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_log_driver_and_log_opt FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_no_config_specified FAILED [ 14%]
tests/integration/api_container_test.py::CreateContainerTest::test_valid_no_log_driver_specified FAILED [ 15%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_binds_ro FAILED [ 15%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_binds_rw FAILED [ 15%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_mounts FAILED [ 15%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_mounts_ro FAILED [ 16%]
tests/integration/api_container_test.py::VolumeBindTest::test_create_with_volume_mount FAILED [ 16%]
tests/integration/api_container_test.py::ArchiveTest::test_copy_directory_to_container FAILED [ 16%]
tests/integration/api_container_test.py::ArchiveTest::test_copy_file_to_container FAILED [ 16%]
tests/integration/api_container_test.py::ArchiveTest::test_get_file_archive_from_container FAILED [ 17%]
tests/integration/api_container_test.py::ArchiveTest::test_get_file_stat_from_container FAILED [ 17%]
tests/integration/api_container_test.py::RenameContainerTest::test_rename_container FAILED [ 17%]
tests/integration/api_container_test.py::StartContainerTest::test_run_shlex_commands PASSED [ 17%]
tests/integration/api_container_test.py::StartContainerTest::test_start_container PASSED [ 18%]
tests/integration/api_container_test.py::StartContainerTest::test_start_container_with_dict_instead_of_id PASSED [ 18%]
tests/integration/api_container_test.py::WaitTest::test_wait PASSED      [ 18%]
tests/integration/api_container_test.py::WaitTest::test_wait_with_condition FAILED [ 19%]
tests/integration/api_container_test.py::WaitTest::test_wait_with_dict_instead_of_id PASSED [ 19%]
tests/integration/api_container_test.py::LogsTest::test_logs PASSED      [ 19%]
tests/integration/api_container_test.py::LogsTest::test_logs_streaming_and_follow PASSED [ 19%]
tests/integration/api_container_test.py::LogsTest::test_logs_streaming_and_follow_and_cancel PASSED [ 20%]
tests/integration/api_container_test.py::LogsTest::test_logs_tail_option PASSED [ 20%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_dict_instead_of_id PASSED [ 20%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_tail_0 PASSED [ 20%]
tests/integration/api_container_test.py::LogsTest::test_logs_with_until FAILED [ 21%]
tests/integration/api_container_test.py::DiffTest::test_diff PASSED      [ 21%]
tests/integration/api_container_test.py::DiffTest::test_diff_with_dict_instead_of_id PASSED [ 21%]
tests/integration/api_container_test.py::StopTest::test_stop PASSED      [ 21%]
tests/integration/api_container_test.py::StopTest::test_stop_with_dict_instead_of_id PASSED [ 22%]
tests/integration/api_container_test.py::KillTest::test_kill PASSED      [ 22%]
tests/integration/api_container_test.py::KillTest::test_kill_with_dict_instead_of_id PASSED [ 22%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal PASSED [ 22%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal_integer PASSED [ 23%]
tests/integration/api_container_test.py::KillTest::test_kill_with_signal_name PASSED [ 23%]
tests/integration/api_container_test.py::PortTest::test_port FAILED      [ 23%]
tests/integration/api_container_test.py::ContainerTopTest::test_top XFAIL [ 23%]
tests/integration/api_container_test.py::ContainerTopTest::test_top_with_psargs XFAIL [ 24%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart PASSED [ 24%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart_with_dict_instead_of_id PASSED [ 24%]
tests/integration/api_container_test.py::RestartContainerTest::test_restart_with_low_timeout PASSED [ 24%]
tests/integration/api_container_test.py::RemoveContainerTest::test_remove PASSED [ 25%]
tests/integration/api_container_test.py::RemoveContainerTest::test_remove_with_dict_instead_of_id PASSED [ 25%]
tests/integration/api_container_test.py::AttachContainerTest::test_attach_no_stream FAILED [ 25%]
tests/integration/api_container_test.py::AttachContainerTest::test_attach_stream_and_cancel PASSED [ 25%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_arg PASSED [ 26%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_config_file PASSED [ 26%]
tests/integration/api_container_test.py::AttachContainerTest::test_detach_with_default PASSED [ 26%]
tests/integration/api_container_test.py::AttachContainerTest::test_run_container_reading_socket PASSED [ 26%]
tests/integration/api_container_test.py::AttachContainerTest::test_run_container_streaming PASSED [ 27%]
tests/integration/api_container_test.py::PauseTest::test_pause_unpause PASSED [ 27%]
tests/integration/api_container_test.py::PruneTest::test_prune_containers PASSED [ 27%]
tests/integration/api_container_test.py::GetContainerStatsTest::test_get_container_stats_no_stream PASSED [ 28%]
tests/integration/api_container_test.py::ContainerUpdateTest::test_restart_policy_update FAILED [ 28%]
tests/integration/api_container_test.py::ContainerUpdateTest::test_update_container FAILED [ 28%]
tests/integration/api_container_test.py::ContainerCPUTest::test_container_cpu_shares FAILED [ 28%]
tests/integration/api_container_test.py::ContainerCPUTest::test_container_cpuset FAILED [ 29%]
tests/integration/api_container_test.py::ContainerCPUTest::test_create_with_runtime FAILED [ 29%]
tests/integration/api_container_test.py::LinkTest::test_remove_link FAILED [ 29%]
tests/integration/api_exec_test.py::ExecTest::test_detach_with_config_file FAILED [ 29%]
tests/integration/api_exec_test.py::ExecTest::test_detach_with_default PASSED [ 30%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_as_root PASSED [ 30%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_as_user PASSED [ 30%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_streaming PASSED [ 30%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_string PASSED [ 31%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_with_env PASSED [ 31%]
tests/integration/api_exec_test.py::ExecTest::test_exec_command_with_workdir PASSED [ 31%]
tests/integration/api_exec_test.py::ExecTest::test_exec_inspect PASSED   [ 31%]
tests/integration/api_exec_test.py::ExecTest::test_exec_start_detached FAILED [ 32%]
tests/integration/api_exec_test.py::ExecTest::test_exec_start_socket FAILED [ 32%]
tests/integration/api_exec_test.py::ExecTest::test_execute_command PASSED [ 32%]
tests/integration/api_exec_test.py::ExecTest::test_execute_command_with_proxy_env PASSED [ 32%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_no_stream_demux PASSED [ 33%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_no_stream_no_demux PASSED [ 33%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_stream_demux PASSED [ 33%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_stream_no_demux PASSED [ 33%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_no_stream_demux FAILED [ 34%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_no_stream_no_demux FAILED [ 34%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_stream_demux FAILED [ 34%]
tests/integration/api_exec_test.py::ExecDemuxTest::test_exec_command_tty_stream_no_demux FAILED [ 34%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_fails FAILED [ 35%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_passes FAILED [ 35%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_shell_command FAILED [ 35%]
tests/integration/api_healthcheck_test.py::HealthcheckTest::test_healthcheck_start_period FAILED [ 35%]
tests/integration/api_image_test.py::ListImagesTest::test_images PASSED  [ 36%]
tests/integration/api_image_test.py::ListImagesTest::test_images_quiet PASSED [ 36%]
tests/integration/api_image_test.py::PullImageTest::test_pull PASSED     [ 36%]
tests/integration/api_image_test.py::PullImageTest::test_pull_invalid_platform FAILED [ 37%]
tests/integration/api_image_test.py::PullImageTest::test_pull_streaming PASSED [ 37%]
tests/integration/api_image_test.py::CommitTest::test_commit FAILED      [ 37%]
tests/integration/api_image_test.py::CommitTest::test_commit_with_changes FAILED [ 37%]
tests/integration/api_image_test.py::RemoveImageTest::test_remove PASSED [ 38%]
tests/integration/api_image_test.py::ImportImageTest::test_get_load_image FAILED [ 38%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_bytes PASSED [ 38%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_file PASSED [ 38%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_stream PASSED [ 39%]
tests/integration/api_image_test.py::ImportImageTest::test_import_from_url SKIPPED [ 39%]
tests/integration/api_image_test.py::ImportImageTest::test_import_image_from_data_with_changes PASSED [ 39%]
tests/integration/api_image_test.py::ImportImageTest::test_import_image_with_changes PASSED [ 39%]
tests/integration/api_image_test.py::PruneImagesTest::test_prune_images FAILED [ 40%]
tests/integration/api_image_test.py::SaveLoadImagesTest::test_get_image_load_image FAILED [ 40%]
tests/integration/api_image_test.py::InspectDistributionTest::test_inspect_distribution FAILED [ 40%]
tests/integration/api_network_test.py::TestNetworks::test_connect_and_disconnect_container FAILED [ 40%]
tests/integration/api_network_test.py::TestNetworks::test_connect_and_force_disconnect_container FAILED [ 41%]
tests/integration/api_network_test.py::TestNetworks::test_connect_on_container_create FAILED [ 41%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_aliases FAILED [ 41%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_ipv4_address FAILED [ 41%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_ipv6_address FAILED [ 42%]
tests/integration/api_network_test.py::TestNetworks::test_connect_with_links FAILED [ 42%]
tests/integration/api_network_test.py::TestNetworks::test_create_check_duplicate FAILED [ 42%]
tests/integration/api_network_test.py::TestNetworks::test_create_inspect_network_with_scope FAILED [ 42%]
tests/integration/api_network_test.py::TestNetworks::test_create_internal_networks FAILED [ 43%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_attachable FAILED [ 43%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_ingress FAILED [ 43%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_ipv6_enabled FAILED [ 43%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_host_driver_fails PASSED [ 44%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_ipam_config FAILED [ 44%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_labels FAILED [ 44%]
tests/integration/api_network_test.py::TestNetworks::test_create_network_with_labels_wrong_type PASSED [ 44%]
tests/integration/api_network_test.py::TestNetworks::test_create_remove_network_with_space_in_name PASSED [ 45%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_aliases PASSED [ 45%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_driveropt FAILED [ 45%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_ipv4_address FAILED [ 46%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_ipv6_address FAILED [ 46%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_linklocal_ips FAILED [ 46%]
tests/integration/api_network_test.py::TestNetworks::test_create_with_links FAILED [ 46%]
tests/integration/api_network_test.py::TestNetworks::test_inspect_network FAILED [ 47%]
tests/integration/api_network_test.py::TestNetworks::test_list_networks FAILED [ 47%]
tests/integration/api_network_test.py::TestNetworks::test_prune_networks FAILED [ 47%]
tests/integration/api_network_test.py::TestNetworks::test_remove_network PASSED [ 47%]
tests/integration/api_plugin_test.py::PluginTest::test_configure_plugin FAILED [ 48%]
tests/integration/api_plugin_test.py::PluginTest::test_create_plugin FAILED [ 48%]
tests/integration/api_plugin_test.py::PluginTest::test_disable_plugin FAILED [ 48%]
tests/integration/api_plugin_test.py::PluginTest::test_enable_plugin FAILED [ 48%]
tests/integration/api_plugin_test.py::PluginTest::test_force_remove_plugin FAILED [ 49%]
tests/integration/api_plugin_test.py::PluginTest::test_inspect_plugin FAILED [ 49%]
tests/integration/api_plugin_test.py::PluginTest::test_install_plugin FAILED [ 49%]
tests/integration/api_plugin_test.py::PluginTest::test_list_plugins FAILED [ 49%]
tests/integration/api_plugin_test.py::PluginTest::test_plugin_privileges FAILED [ 50%]
tests/integration/api_plugin_test.py::PluginTest::test_remove_plugin FAILED [ 50%]
tests/integration/api_plugin_test.py::PluginTest::test_upgrade_plugin FAILED [ 50%]
tests/integration/api_secret_test.py::SecretAPITest::test_create_secret ERROR [ 50%]
tests/integration/api_secret_test.py::SecretAPITest::test_create_secret_unicode_data ERROR [ 51%]
tests/integration/api_secret_test.py::SecretAPITest::test_inspect_secret ERROR [ 51%]
tests/integration/api_secret_test.py::SecretAPITest::test_list_secrets ERROR [ 51%]
tests/integration/api_secret_test.py::SecretAPITest::test_remove_secret ERROR [ 51%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_custom_log_driver ERROR [ 52%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_global_mode ERROR [ 52%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_replicated_mode ERROR [ 52%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_simple ERROR [ 52%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_config ERROR [ 53%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_custom_networks ERROR [ 53%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_dns_config ERROR [ 53%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_endpoint_spec ERROR [ 53%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_endpoint_spec_host_publish_mode ERROR [ 54%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_env ERROR [ 54%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_failure_action_rollback ERROR [ 54%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_generic_resources ERROR [ 55%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_groups ERROR [ 55%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_healthcheck ERROR [ 55%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_hostname ERROR [ 55%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_hosts ERROR [ 56%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_init ERROR [ 56%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_invalid_generic_resources ERROR [ 56%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_network_attachment_config ERROR [ 56%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement ERROR [ 57%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement_object ERROR [ 57%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement_platform ERROR [ 57%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement_preferences ERROR [ 57%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_placement_preferences_tuple ERROR [ 58%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_privileges ERROR [ 58%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_readonly ERROR [ 58%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_resources_constraints ERROR [ 58%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_restart_policy ERROR [ 59%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_rollback_config ERROR [ 59%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_secret ERROR [ 59%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_stop_signal ERROR [ 59%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_tty ERROR [ 60%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_tty_dict ERROR [ 60%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_unicode_config ERROR [ 60%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_unicode_secret ERROR [ 60%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_update_config ERROR [ 61%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_update_config_monitor ERROR [ 61%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_update_order ERROR [ 61%]
tests/integration/api_service_test.py::ServiceTest::test_create_service_with_volume_mount ERROR [ 61%]
tests/integration/api_service_test.py::ServiceTest::test_inspect_service_by_id ERROR [ 62%]
tests/integration/api_service_test.py::ServiceTest::test_inspect_service_by_name ERROR [ 62%]
tests/integration/api_service_test.py::ServiceTest::test_inspect_service_insert_defaults ERROR [ 62%]
tests/integration/api_service_test.py::ServiceTest::test_list_services ERROR [ 62%]
tests/integration/api_service_test.py::ServiceTest::test_list_services_filter_by_label ERROR [ 63%]
tests/integration/api_service_test.py::ServiceTest::test_remove_service_by_id ERROR [ 63%]
tests/integration/api_service_test.py::ServiceTest::test_remove_service_by_name ERROR [ 63%]
tests/integration/api_service_test.py::ServiceTest::test_service_logs ERROR [ 64%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_force_update ERROR [ 64%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_remove_container_labels ERROR [ 64%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_remove_healthcheck ERROR [ 64%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_remove_labels ERROR [ 65%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_container_labels ERROR [ 65%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_endpoint_spec ERROR [ 65%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_labels ERROR [ 65%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_mode ERROR [ 66%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_name ERROR [ 66%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_networks ERROR [ 66%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_defaults_update_config ERROR [ 66%]
tests/integration/api_service_test.py::ServiceTest::test_update_service_with_network_change ERROR [ 67%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_already_in_cluster FAILED [ 67%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_addr_pool_both_args FAILED [ 67%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_addr_pool_defaults FAILED [ 67%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_addr_pool_only_pool FAILED [ 68%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_addr_pool_only_subnet_size FAILED [ 68%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_custom_raft_spec FAILED [ 68%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_data_path_addr XFAIL [ 68%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_force_new_cluster SKIPPED [ 69%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_simple FAILED [ 69%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_with_autolock_managers FAILED [ 69%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_with_ca_config FAILED [ 69%]
tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_with_log_driver XFAIL [ 70%]
tests/integration/api_swarm_test.py::SwarmTest::test_inspect_node FAILED [ 70%]
tests/integration/api_swarm_test.py::SwarmTest::test_leave_swarm FAILED  [ 70%]
tests/integration/api_swarm_test.py::SwarmTest::test_list_nodes FAILED   [ 70%]
tests/integration/api_swarm_test.py::SwarmTest::test_remove_main_node FAILED [ 71%]
tests/integration/api_swarm_test.py::SwarmTest::test_rotate_manager_unlock_key FAILED [ 71%]
tests/integration/api_swarm_test.py::SwarmTest::test_update_node FAILED  [ 71%]
tests/integration/api_swarm_test.py::SwarmTest::test_update_swarm FAILED [ 71%]
tests/integration/api_volume_test.py::TestVolumes::test_create_volume PASSED [ 72%]
tests/integration/api_volume_test.py::TestVolumes::test_create_volume_invalid_driver FAILED [ 72%]
tests/integration/api_volume_test.py::TestVolumes::test_force_remove_volume PASSED [ 72%]
tests/integration/api_volume_test.py::TestVolumes::test_inspect_nonexistent_volume PASSED [ 73%]
tests/integration/api_volume_test.py::TestVolumes::test_inspect_volume FAILED [ 73%]
tests/integration/api_volume_test.py::TestVolumes::test_list_volumes FAILED [ 73%]
tests/integration/api_volume_test.py::TestVolumes::test_prune_volumes PASSED [ 73%]
tests/integration/api_volume_test.py::TestVolumes::test_remove_nonexistent_volume PASSED [ 74%]
tests/integration/api_volume_test.py::TestVolumes::test_remove_volume PASSED [ 74%]
tests/integration/client_test.py::ClientTest::test_df PASSED             [ 74%]
tests/integration/client_test.py::ClientTest::test_info PASSED           [ 74%]
tests/integration/client_test.py::ClientTest::test_ping PASSED           [ 75%]
tests/integration/client_test.py::ClientTest::test_version PASSED        [ 75%]
tests/integration/client_test.py::CancellableEventsTest::test_cancel_events PASSED [ 75%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_context_remove FAILED [ 75%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_lifecycle FAILED [ 76%]
tests/integration/context_api_test.py::ContextLifecycleTest::test_load_context_without_orchestrator FAILED [ 76%]
tests/integration/errors_test.py::ErrorsTest::test_api_error_parses_json FAILED [ 76%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_get FAILED [ 76%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_list FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_list_sparse FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_detach FAILED [ 77%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_auto_remove FAILED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_auto_remove_error FAILED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_error FAILED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_image_that_does_not_exist FAILED [ 78%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_json_file_driver FAILED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_named_volume FAILED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_network PASSED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_none_driver FAILED [ 79%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_proxy_config FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_streamed_logs FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_streamed_logs_and_cancel FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerCollectionTest::test_run_with_volume FAILED [ 80%]
tests/integration/models_containers_test.py::ContainerTest::test_commit FAILED [ 81%]
tests/integration/models_containers_test.py::ContainerTest::test_create_with_volume_driver FAILED [ 81%]
tests/integration/models_containers_test.py::ContainerTest::test_diff FAILED [ 81%]
tests/integration/models_containers_test.py::ContainerTest::test_exec_run_failed FAILED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_exec_run_success FAILED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_kill FAILED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_logs FAILED [ 82%]
tests/integration/models_containers_test.py::ContainerTest::test_pause FAILED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_list FAILED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_none FAILED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_ports_target_tuple FAILED [ 83%]
tests/integration/models_containers_test.py::ContainerTest::test_remove FAILED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_rename FAILED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_restart FAILED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_start FAILED [ 84%]
tests/integration/models_containers_test.py::ContainerTest::test_stats FAILED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_stop FAILED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_top FAILED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_update FAILED [ 85%]
tests/integration/models_containers_test.py::ContainerTest::test_wait FAILED [ 86%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build FAILED [ 86%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_error FAILED [ 86%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_multiple_success FAILED [ 86%]
tests/integration/models_images_test.py::ImageCollectionTest::test_build_with_success_build_output FAILED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_list PASSED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_list_with_repository PASSED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_load_error FAILED [ 87%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull FAILED [ 88%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_multiple FAILED [ 88%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_with_sha FAILED [ 88%]
tests/integration/models_images_test.py::ImageCollectionTest::test_pull_with_tag FAILED [ 88%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_and_load PASSED [ 89%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_and_load_repo_name FAILED [ 89%]
tests/integration/models_images_test.py::ImageCollectionTest::test_save_name_error PASSED [ 89%]
tests/integration/models_images_test.py::ImageTest::test_tag_and_remove PASSED [ 89%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_create FAILED [ 90%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_get PASSED [ 90%]
tests/integration/models_networks_test.py::NetworkCollectionTest::test_list_remove FAILED [ 90%]
tests/integration/models_networks_test.py::NetworkTest::test_connect_disconnect FAILED [ 91%]
tests/integration/models_nodes_test.py::NodesTest::test_list_get_update FAILED [ 91%]
tests/integration/models_resources_test.py::ModelTest::test_reload FAILED [ 91%]
tests/integration/models_services_test.py::ServiceTest::test_create ERROR [ 91%]
tests/integration/models_services_test.py::ServiceTest::test_create_with_network ERROR [ 92%]
tests/integration/models_services_test.py::ServiceTest::test_force_update_service ERROR [ 92%]
tests/integration/models_services_test.py::ServiceTest::test_force_update_service_using_bool ERROR [ 92%]
tests/integration/models_services_test.py::ServiceTest::test_force_update_service_using_shorthand_method ERROR [ 92%]
tests/integration/models_services_test.py::ServiceTest::test_get ERROR   [ 93%]
tests/integration/models_services_test.py::ServiceTest::test_list_remove ERROR [ 93%]
tests/integration/models_services_test.py::ServiceTest::test_scale_method_global_service ERROR [ 93%]
tests/integration/models_services_test.py::ServiceTest::test_scale_method_service ERROR [ 93%]
tests/integration/models_services_test.py::ServiceTest::test_scale_service ERROR [ 94%]
tests/integration/models_services_test.py::ServiceTest::test_tasks ERROR [ 94%]
tests/integration/models_services_test.py::ServiceTest::test_update ERROR [ 94%]
tests/integration/models_services_test.py::ServiceTest::test_update_remove_service_labels ERROR [ 94%]
tests/integration/models_services_test.py::ServiceTest::test_update_retains_container_labels ERROR [ 95%]
tests/integration/models_services_test.py::ServiceTest::test_update_retains_networks XFAIL [ 95%]
tests/integration/models_services_test.py::ServiceTest::test_update_retains_service_labels ERROR [ 95%]
tests/integration/models_swarm_test.py::SwarmTest::test_init_update_leave FAILED [ 95%]
tests/integration/models_swarm_test.py::SwarmTest::test_join_on_already_joined_swarm FAILED [ 96%]
tests/integration/models_volumes_test.py::VolumesTest::test_create_get PASSED [ 96%]
tests/integration/models_volumes_test.py::VolumesTest::test_list_remove FAILED [ 96%]
tests/integration/regression_test.py::TestRegressions::test_443_handle_nonchunked_response_in_stream FAILED [ 96%]
tests/integration/regression_test.py::TestRegressions::test_542_truncate_ids_client_side PASSED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_647_support_doubleslash_in_image_names PASSED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_649_handle_timeout_value_none PASSED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_715_handle_user_param_as_int_value PASSED [ 97%]
tests/integration/regression_test.py::TestRegressions::test_792_explicit_port_protocol FAILED [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_store_and_get ERROR [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_get_nonexistent ERROR [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_store_and_erase ERROR [ 98%]
tests/integration/credentials/store_test.py::TestStore::test_unicode_strings ERROR [ 99%]
tests/integration/credentials/store_test.py::TestStore::test_list ERROR  [ 99%]
tests/integration/credentials/store_test.py::TestStore::test_execute_with_env_override ERROR [ 99%]
tests/integration/credentials/utils_test.py::test_create_environment_dict PASSED [100%]

==================================== ERRORS ====================================
______________ ERROR at setup of ConfigAPITest.test_create_config ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ConfigAPITest.test_create_config_unicode_data ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ ERROR at setup of ConfigAPITest.test_inspect_config ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of ConfigAPITest.test_list_configs _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of ConfigAPITest.test_remove_config ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_config_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of SecretAPITest.test_create_secret ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of SecretAPITest.test_create_secret_unicode_data ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ ERROR at setup of SecretAPITest.test_inspect_secret ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of SecretAPITest.test_list_secrets _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______________ ERROR at setup of SecretAPITest.test_remove_secret ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_secret_test.py:16: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_custom_log_driver ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_create_service_global_mode _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_replicated_mode _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________ ERROR at setup of ServiceTest.test_create_service_simple ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_create_service_with_config _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_custom_networks ____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_with_dns_config _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_with_endpoint_spec _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_endpoint_spec_host_publish_mode _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________ ERROR at setup of ServiceTest.test_create_service_with_env __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_failure_action_rollback _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___ ERROR at setup of ServiceTest.test_create_service_with_generic_resources ___
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_create_service_with_groups _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_with_healthcheck ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_create_service_with_hostname ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________ ERROR at setup of ServiceTest.test_create_service_with_hosts _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________ ERROR at setup of ServiceTest.test_create_service_with_init __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_invalid_generic_resources _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_network_attachment_config _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_create_service_with_placement _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___ ERROR at setup of ServiceTest.test_create_service_with_placement_object ____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__ ERROR at setup of ServiceTest.test_create_service_with_placement_platform ___
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_placement_preferences _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_placement_preferences_tuple _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_with_privileges _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_create_service_with_readonly ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_resources_constraints _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_restart_policy _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_rollback_config ____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_create_service_with_secret _________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_create_service_with_stop_signal ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________ ERROR at setup of ServiceTest.test_create_service_with_tty __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_create_service_with_tty_dict ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_unicode_config _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_create_service_with_unicode_secret _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_with_update_config _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_create_service_with_update_config_monitor _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_with_update_order ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_create_service_with_volume_mount ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________ ERROR at setup of ServiceTest.test_inspect_service_by_id ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________ ERROR at setup of ServiceTest.test_inspect_service_by_name __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
______ ERROR at setup of ServiceTest.test_inspect_service_insert_defaults ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________ ERROR at setup of ServiceTest.test_list_services _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_list_services_filter_by_label _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________ ERROR at setup of ServiceTest.test_remove_service_by_id ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________ ERROR at setup of ServiceTest.test_remove_service_by_name ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________ ERROR at setup of ServiceTest.test_service_logs ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________ ERROR at setup of ServiceTest.test_update_service_force_update ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__ ERROR at setup of ServiceTest.test_update_service_remove_container_labels ___
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_update_service_remove_healthcheck _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______ ERROR at setup of ServiceTest.test_update_service_remove_labels ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_update_service_with_defaults_container_labels _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_update_service_with_defaults_endpoint_spec _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_update_service_with_defaults_labels ____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_update_service_with_defaults_mode _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____ ERROR at setup of ServiceTest.test_update_service_with_defaults_name _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___ ERROR at setup of ServiceTest.test_update_service_with_defaults_networks ___
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_ ERROR at setup of ServiceTest.test_update_service_with_defaults_update_config _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
____ ERROR at setup of ServiceTest.test_update_service_with_network_change _____
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_service_test.py:21: in setup_class
    cls._init_swarm(client)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________ ERROR at setup of ServiceTest.test_create ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
____________ ERROR at setup of ServiceTest.test_create_with_network ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
___________ ERROR at setup of ServiceTest.test_force_update_service ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
______ ERROR at setup of ServiceTest.test_force_update_service_using_bool ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_ ERROR at setup of ServiceTest.test_force_update_service_using_shorthand_method _
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
____________________ ERROR at setup of ServiceTest.test_get ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
________________ ERROR at setup of ServiceTest.test_list_remove ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
________ ERROR at setup of ServiceTest.test_scale_method_global_service ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
___________ ERROR at setup of ServiceTest.test_scale_method_service ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_______________ ERROR at setup of ServiceTest.test_scale_service _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
___________________ ERROR at setup of ServiceTest.test_tasks ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
__________________ ERROR at setup of ServiceTest.test_update ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_______ ERROR at setup of ServiceTest.test_update_remove_service_labels ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
______ ERROR at setup of ServiceTest.test_update_retains_container_labels ______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_______ ERROR at setup of ServiceTest.test_update_retains_service_labels _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_services_test.py:17: in setUpClass
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
________________ ERROR at setup of TestStore.test_store_and_get ________________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
_______________ ERROR at setup of TestStore.test_get_nonexistent _______________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
_______________ ERROR at setup of TestStore.test_store_and_erase _______________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
_______________ ERROR at setup of TestStore.test_unicode_strings _______________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
____________________ ERROR at setup of TestStore.test_list _____________________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
__________ ERROR at setup of TestStore.test_execute_with_env_override __________
tests/integration/credentials/store_test.py:31: in setup_method
    raise Exception('No supported docker-credential store in PATH')
E   Exception: No supported docker-credential store in PATH
=================================== FAILURES ===================================
__________________ BuildTest.test_build_container_with_target __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/images/build1/json

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:272: in test_build_container_with_target
    info = self.client.inspect_image('build1')
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:253: in inspect_image
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.40/images/build1/json: Not Found ("failed to find image build1: unable to find a name and tag match for build1 in repotags: No such image")
________________ BuildTest.test_build_in_context_abs_dockerfile ________________
tests/integration/api_build_test.py:575: in test_build_in_context_abs_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built 4e83f0868f54\n'
__________________ BuildTest.test_build_in_context_dockerfile __________________
tests/integration/api_build_test.py:510: in test_build_in_context_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built f076231b8f25\n'
______________ BuildTest.test_build_in_context_nested_dockerfile _______________
tests/integration/api_build_test.py:543: in test_build_in_context_nested_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   AssertionError: assert 'Successfully tagged' in 'Successfully built 39c2fcdc463a\n'
____________________ BuildTest.test_build_invalid_platform _____________________
tests/integration/api_build_test.py:448: in test_build_invalid_platform
    pass
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
_________________________ BuildTest.test_build_labels __________________________
tests/integration/api_build_test.py:215: in test_build_labels
    assert info['Config']['Labels'] == labels
E   AssertionError: assert {'io.buildah.... 'test': 'OK'} == {'test': 'OK'}
E     Omitting 1 identical items, use -vv to show
E     Left contains more items:
E     {'io.buildah.version': '1.18.0'}
E     Full diff:
E     - {'io.buildah.version': '1.18.0', 'test': 'OK'}
E     + {'test': 'OK'}
________________ BuildTest.test_build_out_of_context_dockerfile ________________
tests/integration/api_build_test.py:481: in test_build_out_of_context_dockerfile
    assert 'Successfully tagged' in lines[-1]['stream']
E   KeyError: 'stream'
_________________________ BuildTest.test_build_squash __________________________
tests/integration/api_build_test.py:371: in test_build_squash
    assert len(non_squashed['RootFS']['Layers']) == 4
E   AssertionError: assert 2 == 4
E     -2
E     +4
_______________________ BuildTest.test_build_stderr_data _______________________
tests/integration/api_build_test.py:391: in test_build_stderr_data
    assert any([line == expected for line in lines])
E   AssertionError: assert False
E    +  where False = any([False, False, False, False, False, False, ...])
_____________________ BuildTest.test_build_with_cache_from _____________________
tests/integration/api_build_test.py:240: in test_build_with_cache_from
    assert counter == 3
E   AssertionError: assert 0 == 3
E     -0
E     +3
____________________ BuildTest.test_build_with_extra_hosts _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/images/dockerpytest_extrahost_build/json

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:340: in test_build_with_extra_hosts
    assert self.client.inspect_image(img_name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:253: in inspect_image
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.ImageNotFound: 404 Client Error for http+docker://localhost/v1.40/images/dockerpytest_extrahost_build/json: Not Found ("failed to find image dockerpytest_extrahost_build: unable to find a name and tag match for dockerpytest_extrahost_build in repotags: No such image")
____________________ BuildTest.test_build_with_network_mode ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_20732928da994bba/connect

During handling of the above exception, another exception occurred:
tests/integration/api_build_test.py:283: in test_build_with_network_mode
    self.client.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_20732928da994bba/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
___________________ ListContainersTest.test_list_containers ____________________
tests/integration/api_container_test.py:40: in test_list_containers
    assert re.search(r'alpine:.*', retrieved['Image']) is not None
E   AssertionError: assert None is not None
E    +  where None = <function search at 0x7fba449365e0>('alpine:.*', 'docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c')
E    +    where <function search at 0x7fba449365e0> = re.search
_________ CreateContainerTest.test_create_container_with_volumes_from __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:149: in test_create_container_with_volumes_from
    res = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("container create: error looking up container "foobar_vol0" for volumes-from: no container with name or ID foobar_vol0 found: no such container")
___________ CreateContainerTest.test_create_with_device_cgroup_rules ___________
tests/integration/api_container_test.py:477: in test_create_with_device_cgroup_rules
    assert config['HostConfig']['DeviceCgroupRules'] == [rule]
E   AssertionError: assert None == ['c 7:128 rwm']
E     -None
E     +['c 7:128 rwm']
______ CreateContainerTest.test_create_with_environment_variable_no_value ______
tests/integration/api_container_test.py:373: in test_create_with_environment_variable_no_value
    assert 'Foo' in config['Config']['Env']
E   AssertionError: assert 'Foo' in ['PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'TERM=xterm', 'container=podman', 'Other=one', 'Blank=', 'HOSTNAME=']
________________ CreateContainerTest.test_create_with_isolation ________________
tests/integration/api_container_test.py:402: in test_create_with_isolation
    assert config['HostConfig']['Isolation'] == 'default'
E   AssertionError: assert '' == 'default'
E     + default
__________________ CreateContainerTest.test_create_with_links __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:96: in test_create_with_links
    res2 = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request ("bad parameter: Link is not supported")
_______________ CreateContainerTest.test_create_with_mac_address _______________
tests/integration/api_container_test.py:217: in test_create_with_mac_address
    assert mac_address_expected == res['NetworkSettings']['MacAddress']
E   AssertionError: assert '02:42:ac:11:00:0a' == ''
E     - 02:42:ac:11:00:0a
_______ CreateContainerTest.test_create_with_memory_constraints_with_int _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/1f62cce439d226b1052d8d3e24231f8c176f4b77677531f236eb12f9f47e2112/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:358: in test_create_with_memory_constraints_with_int
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/1f62cce439d226b1052d8d3e24231f8c176f4b77677531f236eb12f9f47e2112/start: Internal Server Error ("command rootless-cni-infra [alloc 1f62cce439d226b1052d8d3e24231f8c176f4b77677531f236eb12f9f47e2112 default wizardly_allen] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_______ CreateContainerTest.test_create_with_memory_constraints_with_str _______
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/7cdc573b3e0ee91807033f83d9fec4c46a600a05ae153955a5a80e04656c1285/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:343: in test_create_with_memory_constraints_with_str
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/7cdc573b3e0ee91807033f83d9fec4c46a600a05ae153955a5a80e04656c1285/start: Internal Server Error ("command rootless-cni-infra [alloc 7cdc573b3e0ee91807033f83d9fec4c46a600a05ae153955a5a80e04656c1285 default naughty_zhukovsky] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_____________ CreateContainerTest.test_create_with_restart_policy ______________
tests/integration/api_container_test.py:127: in test_create_with_restart_policy
    self.client.remove_container(id)
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
__________________ CreateContainerTest.test_create_with_tmpfs __________________
tests/integration/api_container_test.py:391: in test_create_with_tmpfs
    assert config['HostConfig']['Tmpfs'] == tmpfs
E   AssertionError: assert {'/tmp1=size=...ev,tmpcopyup'} == {'/tmp1': 'size=3M'}
E     Left contains more items:
E     {'/tmp1=size=3M': 'rw,rprivate,nosuid,nodev,tmpcopyup'}
E     Right contains more items:
E     {'/tmp1': 'size=3M'}
E     Full diff:
E     - {'/tmp1=size=3M': 'rw,rprivate,nosuid,nodev,tmpcopyup'}
E     + {'/tmp1': 'size=3M'}
____________________ CreateContainerTest.test_group_id_ints ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/375fd9c40ee585adf175d1470a65b8d9f63161e6381d0ea945b2d85e9f20fdd1/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:227: in test_group_id_ints
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/375fd9c40ee585adf175d1470a65b8d9f63161e6381d0ea945b2d85e9f20fdd1/start: Internal Server Error ("command rootless-cni-infra [alloc 375fd9c40ee585adf175d1470a65b8d9f63161e6381d0ea945b2d85e9f20fdd1 default stoic_ramanujan] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________ CreateContainerTest.test_group_id_strings ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/84bffc3ddbbad0122d2c5cc7dd5daf3eee6e515b176ad5f1ba916a31625ecf87/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:244: in test_group_id_strings
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/84bffc3ddbbad0122d2c5cc7dd5daf3eee6e515b176ad5f1ba916a31625ecf87/start: Internal Server Error ("command rootless-cni-infra [alloc 84bffc3ddbbad0122d2c5cc7dd5daf3eee6e515b176ad5f1ba916a31625ecf87 default serene_clarke] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_________ CreateContainerTest.test_invalid_log_driver_raises_exception _________
tests/integration/api_container_test.py:293: in test_invalid_log_driver_raises_exception
    assert excinfo.value.explanation in expected_msgs
E   AssertionError: assert 'container create: error running container create option: invalid log driver: invalid argument' in ["logger: no log driver named 'asdf' is registered", 'error looking up logging plugin asdf: plugin "asdf" not found']
E    +  where 'container create: error running container create option: invalid log driver: invalid argument' = APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')).explanation
E    +    where APIError(HTTPError('500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create')) = <ExceptionInfo APIError tblen=6>.value
____________ CreateContainerTest.test_valid_log_driver_and_log_opt _____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/4917bedbd9643424706bb1c3bb2feb21d71fdbec0fa6726ffef3e2421538a884/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:266: in test_valid_log_driver_and_log_opt
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4917bedbd9643424706bb1c3bb2feb21d71fdbec0fa6726ffef3e2421538a884/start: Internal Server Error ("command rootless-cni-infra [alloc 4917bedbd9643424706bb1c3bb2feb21d71fdbec0fa6726ffef3e2421538a884 default determined_bell] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
______________ CreateContainerTest.test_valid_no_config_specified ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/4a0c7d8fd76366c1625d791474021a707588767ad36ae114e56a007025551686/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:325: in test_valid_no_config_specified
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/4a0c7d8fd76366c1625d791474021a707588767ad36ae114e56a007025551686/start: Internal Server Error ("command rootless-cni-infra [alloc 4a0c7d8fd76366c1625d791474021a707588767ad36ae114e56a007025551686 default optimistic_joliot] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
____________ CreateContainerTest.test_valid_no_log_driver_specified ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/d320342feb6c199e44577cc8d411bc95c47987028863cf4ad56f0ac8b946d5d7/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:306: in test_valid_no_log_driver_specified
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/d320342feb6c199e44577cc8d411bc95c47987028863cf4ad56f0ac8b946d5d7/start: Internal Server Error ("command rootless-cni-infra [alloc d320342feb6c199e44577cc8d411bc95c47987028863cf4ad56f0ac8b946d5d7 default unruffled_benz] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________ VolumeBindTest.test_create_with_binds_ro ___________________
tests/integration/api_container_test.py:541: in test_create_with_binds_ro
    assert self.filename in logs
E   AssertionError: assert 'shared.txt' in ''
E    +  where 'shared.txt' = <tests.integration.api_container_test.VolumeBindTest testMethod=test_create_with_binds_ro>.filename
___________________ VolumeBindTest.test_create_with_binds_rw ___________________
tests/integration/api_container_test.py:522: in test_create_with_binds_rw
    assert self.filename in logs
E   AssertionError: assert 'shared.txt' in ''
E    +  where 'shared.txt' = <tests.integration.api_container_test.VolumeBindTest testMethod=test_create_with_binds_rw>.filename
____________________ VolumeBindTest.test_create_with_mounts ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:552: in test_create_with_mounts
    container = self.run_container(
tests/integration/base.py:98: in run_container
    container = self.client.create_container(*args, **kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("fill out specgen: incorrect mount format: should be --mount type=<bind|tmpfs|volume>,[src=<host-dir|volume-name>,]target=<ctr-dir>[,options]")
__________________ VolumeBindTest.test_create_with_mounts_ro ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:571: in test_create_with_mounts_ro
    container = self.run_container(
tests/integration/base.py:98: in run_container
    container = self.client.create_container(*args, **kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("fill out specgen: incorrect mount format: should be --mount type=<bind|tmpfs|volume>,[src=<host-dir|volume-name>,]target=<ctr-dir>[,options]")
_________________ VolumeBindTest.test_create_with_volume_mount _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:590: in test_create_with_volume_mount
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("fill out specgen: incorrect mount format: should be --mount type=<bind|tmpfs|volume>,[src=<host-dir|volume-name>,]target=<ctr-dir>[,options]")
_________________ ArchiveTest.test_copy_directory_to_container _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 501 Server Error: Not Implemented for url: http+docker://localhost/v1.40/containers/d16a561eacdfb6ccbcead7a8702b5bdafb40d7a5ba529c6114c90aaae341b6a1/archive?path=%2Fvol1

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:700: in test_copy_directory_to_container
    self.client.put_archive(ctnr, '/vol1', test_tar)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:966: in put_archive
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 501 Server Error for http+docker://localhost/v1.40/containers/d16a561eacdfb6ccbcead7a8702b5bdafb40d7a5ba529c6114c90aaae341b6a1/archive?path=%2Fvol1: Not Implemented ("not implemented")
___________________ ArchiveTest.test_copy_file_to_container ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 501 Server Error: Not Implemented for url: http+docker://localhost/v1.40/containers/a0648a96c7089653e637ff5db42a4a821bf72c942d1fcf8dccfe0a0de4143afc/archive?path=%2Fvol1

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:682: in test_copy_file_to_container
    self.client.put_archive(ctnr, '/vol1', test_tar)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:966: in put_archive
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 501 Server Error for http+docker://localhost/v1.40/containers/a0648a96c7089653e637ff5db42a4a821bf72c942d1fcf8dccfe0a0de4143afc/archive?path=%2Fvol1: Not Implemented ("not implemented")
_______________ ArchiveTest.test_get_file_archive_from_container _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 501 Server Error: Not Implemented for url: http+docker://localhost/v1.40/containers/fb9047f0d88602cbc4b5a87a010398a56b2a5518636b107647d23c2e10d264ad/archive?path=%2Fvol1%2Fdata.txt

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:644: in test_get_file_archive_from_container
    strm, stat = self.client.get_archive(ctnr, '/vol1/data.txt')
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:750: in get_archive
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 501 Server Error for http+docker://localhost/v1.40/containers/fb9047f0d88602cbc4b5a87a010398a56b2a5518636b107647d23c2e10d264ad/archive?path=%2Fvol1%2Fdata.txt: Not Implemented ("not implemented")
________________ ArchiveTest.test_get_file_stat_from_container _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 501 Server Error: Not Implemented for url: http+docker://localhost/v1.40/containers/e1c992c4272ded2d21b5f0bd7b3cfdce45c278bf12e0c3a67b99cffc284e9dbd/archive?path=%2Fvol1%2Fdata.txt

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:662: in test_get_file_stat_from_container
    strm, stat = self.client.get_archive(ctnr, '/vol1/data.txt')
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:750: in get_archive
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 501 Server Error for http+docker://localhost/v1.40/containers/e1c992c4272ded2d21b5f0bd7b3cfdce45c278bf12e0c3a67b99cffc284e9dbd/archive?path=%2Fvol1%2Fdata.txt: Not Implemented ("not implemented")
__________________ RenameContainerTest.test_rename_container ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/f1f8a5f5b02fc57aa586c53eb89a895e0bcea5cb6cf789e70fc0aaaac7dfff1b/rename?name=hong_meiling

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:720: in test_rename_container
    self.client.rename(res, name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1030: in rename
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/f1f8a5f5b02fc57aa586c53eb89a895e0bcea5cb6cf789e70fc0aaaac7dfff1b/rename?name=hong_meiling: Not Found ("Path /v1.40/containers/f1f8a5f5b02fc57aa586c53eb89a895e0bcea5cb6cf789e70fc0aaaac7dfff1b/rename is not supported")
______________________ WaitTest.test_wait_with_condition _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/8bd8a7325caa9c25b2d63035753a97c33a97e98007c1ac279c300f0ac77175f4/wait?condition=removed

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:815: in test_wait_with_condition
    self.client.wait(ctnr, condition='removed', timeout=1)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1306: in wait
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8bd8a7325caa9c25b2d63035753a97c33a97e98007c1ac279c300f0ac77175f4/wait?condition=removed: Internal Server Error ("unknown container state: removed: invalid argument")
________________________ LogsTest.test_logs_with_until _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/2839ecece79f0946c7f4f141c8129e0f3ec2827395c6a6ed6e7244bd44002a97/logs?stderr=1&stdout=1&timestamps=0&follow=0&tail=all&until=1

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:931: in test_logs_with_until
    logs_until_1 = self.client.logs(container, until=1)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:871: in logs
    output = self._get_result(container, stream, res)
docker/api/client.py:486: in _get_result
    return self._get_result_tty(stream, res, self._check_is_tty(container))
docker/api/client.py:495: in _get_result_tty
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/2839ecece79f0946c7f4f141c8129e0f3ec2827395c6a6ed6e7244bd44002a97/logs?stderr=1&stdout=1&timestamps=0&follow=0&tail=all&until=1: Bad Request ("failed to parse query parameter 'until': "1": unable to interpret time value")
______________________________ PortTest.test_port ______________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/33eec546644bc4079f2bdd0ed8e80669297e54d578d91509049c100f098d0d9d/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1090: in test_port
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/33eec546644bc4079f2bdd0ed8e80669297e54d578d91509049c100f098d0d9d/start: Internal Server Error ("command rootless-cni-infra [alloc 33eec546644bc4079f2bdd0ed8e80669297e54d578d91509049c100f098d0d9d bridge suspicious_bassi] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"bridge\" in /etc/cni/net.d\n"")
__________________ AttachContainerTest.test_attach_no_stream ___________________
tests/integration/api_container_test.py:1252: in test_attach_no_stream
    assert output == 'hello\n'.encode(encoding='ascii')
E   AssertionError: assert b'hello' == b'hello\n'
E     Right contains more items, first extra item: 10
E     Full diff:
E     - b'hello'
E     + b'hello\n'
E     ?        ++
________________ ContainerUpdateTest.test_restart_policy_update ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/05c8af1684122c59314b3f04795e130e1ea434a34460c7eec562b809488d2dd5/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1437: in test_restart_policy_update
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/05c8af1684122c59314b3f04795e130e1ea434a34460c7eec562b809488d2dd5/start: Internal Server Error ("command rootless-cni-infra [alloc 05c8af1684122c59314b3f04795e130e1ea434a34460c7eec562b809488d2dd5 default determined_haibt] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________ ContainerUpdateTest.test_update_container ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/f738d8c5a854ffc0dd4bbf225b5097411fd1952c648a17fbab79c87b75ea115d/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1415: in test_update_container
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f738d8c5a854ffc0dd4bbf225b5097411fd1952c648a17fbab79c87b75ea115d/start: Internal Server Error ("command rootless-cni-infra [alloc f738d8c5a854ffc0dd4bbf225b5097411fd1952c648a17fbab79c87b75ea115d default vigilant_bhaskara] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________ ContainerCPUTest.test_container_cpu_shares __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6e40dd7c9cacc06461d37a9de80dfecdabc3ae8a48adba56bce4560a2c5245c7/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1460: in test_container_cpu_shares
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6e40dd7c9cacc06461d37a9de80dfecdabc3ae8a48adba56bce4560a2c5245c7/start: Internal Server Error ("command rootless-cni-infra [alloc 6e40dd7c9cacc06461d37a9de80dfecdabc3ae8a48adba56bce4560a2c5245c7 default festive_diffie] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
____________________ ContainerCPUTest.test_container_cpuset ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/d33136d000f72ee9b4a83bc14e77bcac5910707714c558c396cc151e7cbd181e/start

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1472: in test_container_cpuset
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/d33136d000f72ee9b4a83bc14e77bcac5910707714c558c396cc151e7cbd181e/start: Internal Server Error ("command rootless-cni-infra [alloc d33136d000f72ee9b4a83bc14e77bcac5910707714c558c396cc151e7cbd181e default stupefied_vaughan] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________ ContainerCPUTest.test_create_with_runtime ___________________
tests/integration/api_container_test.py:1483: in test_create_with_runtime
    assert config['HostConfig']['Runtime'] == 'runc'
E   AssertionError: assert 'oci' == 'runc'
E     - oci
E     + runc
__________________________ LinkTest.test_remove_link ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_container_test.py:1501: in test_remove_link
    container2 = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.40/containers/create: Bad Request ("bad parameter: Link is not supported")
____________________ ExecTest.test_detach_with_config_file _____________________
tests/integration/api_exec_test.py:227: in test_detach_with_config_file
    assert_cat_socket_detached_with_keys(sock, [ctrl_with('p')])
tests/helpers.py:138: in assert_cat_socket_detached_with_keys
    assert data == b'' or data.startswith(
E   AssertionError
______________________ ExecTest.test_exec_start_detached _______________________
tests/integration/api_exec_test.py:152: in test_exec_start_detached
    assert response == ""
E   AssertionError: assert '\n' == ''
E     Strings contain only whitespace, escaping them using repr()
E     - '\n'
E     + ''
_______________________ ExecTest.test_exec_start_socket ________________________
tests/integration/api_exec_test.py:134: in test_exec_start_socket
    assert stream == 1  # stdout (0 = stdin, 1 = stdout, 2 = stderr)
E   AssertionError: assert 121 == 1
E     -121
E     +1
_____________ ExecDemuxTest.test_exec_command_tty_no_stream_demux ______________
tests/integration/api_exec_test.py:299: in test_exec_command_tty_no_stream_demux
    exec_log = self.client.exec_start(res, demux=True)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/exec_api.py:169: in exec_start
    return self._read_from_socket(res, stream, tty=tty, demux=demux)
docker/api/client.py:450: in _read_from_socket
    return consume_socket_output(gen, demux=demux)
docker/utils/socket.py:142: in consume_socket_output
    for frame in frames:
docker/api/client.py:441: in <genexpr>
    gen = (demux_adaptor(*frame) for frame in gen)
docker/utils/socket.py:169: in demux_adaptor
    raise ValueError('{0} is not a valid stream'.format(stream_id))
E   ValueError: 104 is not a valid stream
____________ ExecDemuxTest.test_exec_command_tty_no_stream_no_demux ____________
tests/integration/api_exec_test.py:282: in test_exec_command_tty_no_stream_no_demux
    assert exec_log == b'hello out\r\nhello err\r\n'
E   AssertionError: assert b't\r\nhello err\r\n' == b'hello out\r\nhello err\r\n'
E     At index 0 diff: 116 != 104
E     Right contains more items, first extra item: 108
E     Full diff:
E     - b't\r\nhello err\r\n'
E     + b'hello out\r\nhello err\r\n'
E     ?   ++++++++
_______________ ExecDemuxTest.test_exec_command_tty_stream_demux _______________
tests/integration/api_exec_test.py:305: in test_exec_command_tty_stream_demux
    exec_log = list(self.client.exec_start(res, demux=True, stream=True))
docker/api/client.py:441: in <genexpr>
    gen = (demux_adaptor(*frame) for frame in gen)
docker/utils/socket.py:169: in demux_adaptor
    raise ValueError('{0} is not a valid stream'.format(stream_id))
E   ValueError: 104 is not a valid stream
_____________ ExecDemuxTest.test_exec_command_tty_stream_no_demux ______________
tests/integration/api_exec_test.py:288: in test_exec_command_tty_stream_no_demux
    assert b'hello out\r\n' in exec_log
E   AssertionError: assert b'hello out\r\n' in [b't\r\n', b'hello err\r\n']
____________________ HealthcheckTest.test_healthcheck_fails ____________________
tests/integration/api_healthcheck_test.py:51: in test_healthcheck_fails
    wait_on_health_status(self.client, container, "unhealthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'
___________________ HealthcheckTest.test_healthcheck_passes ____________________
tests/integration/api_healthcheck_test.py:38: in test_healthcheck_passes
    wait_on_health_status(self.client, container, "healthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'
________________ HealthcheckTest.test_healthcheck_shell_command ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/api_healthcheck_test.py:18: in test_healthcheck_shell_command
    container = self.client.create_container(
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("fill out specgen: healthcheck-retries must be greater than 0")
________________ HealthcheckTest.test_healthcheck_start_period _________________
tests/integration/api_healthcheck_test.py:68: in test_healthcheck_start_period
    wait_on_health_status(self.client, container, "healthy")
tests/integration/api_healthcheck_test.py:11: in wait_on_health_status
    return helpers.wait_on_condition(condition)
tests/helpers.py:82: in wait_on_condition
    while not condition():
tests/integration/api_healthcheck_test.py:10: in condition
    return res['State']['Health']['Status'] == status
E   KeyError: 'Health'
___________________ PullImageTest.test_pull_invalid_platform ___________________
tests/integration/api_image_test.py:70: in test_pull_invalid_platform
    self.client.pull('hello-world', platform='foobar')
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
____________________________ CommitTest.test_commit ____________________________
tests/integration/api_image_test.py:93: in test_commit
    assert TEST_IMG == img['ContainerConfig']['Image']
E   AssertionError: assert 'alpine:3.10' == 'docker.io/library/sha...97472e91ecb41504e8a27c'
E     - alpine:3.10
E     + docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c
_____________________ CommitTest.test_commit_with_changes ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/commit?container=e7dbfcb3f21402231ddf3295ab45aca6689d7f2131adc3227db0f0704c0edb84&changes=EXPOSE+8000&changes=CMD+%5B%22bash%22%5D

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:102: in test_commit_with_changes
    img_id = self.client.commit(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:147: in commit
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/commit?container=e7dbfcb3f21402231ddf3295ab45aca6689d7f2131adc3227db0f0704c0edb84&changes=EXPOSE+8000&changes=CMD+%5B%22bash%22%5D: Internal Server Error ("CommitFailure: invalid change "CMD" - must be formatted as KEY VALUE")
_____________________ ImportImageTest.test_get_load_image ______________________
tests/integration/api_image_test.py:267: in test_get_load_image
    assert any([
E   AssertionError: assert False
E    +  where False = any([])
______________________ PruneImagesTest.test_prune_images _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/images/prune?filters=%7B%22dangling%22%3A+%5B%22false%22%5D%7D

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:332: in test_prune_images
    result = self.client.prune_images({'dangling': False})
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/image.py:351: in prune_images
    return self._result(self._post(url, params=params), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/images/prune?filters=%7B%22dangling%22%3A+%5B%22false%22%5D%7D: Internal Server Error ("runtime error: invalid memory address or nil pointer dereference")
_________________ SaveLoadImagesTest.test_get_image_load_image _________________
tests/integration/api_image_test.py:361: in test_get_image_load_image
    assert success is True
E   AssertionError: assert False is True
----------------------------- Captured stdout call -----------------------------
{'stream': 'Loaded image: docker.io/library/alpine:3.10\n'}
______________ InspectDistributionTest.test_inspect_distribution _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/distribution/busybox:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_image_test.py:367: in test_inspect_distribution
    data = self.client.inspect_distribution('busybox:latest')
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/image.py:289: in inspect_distribution
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/distribution/busybox:latest/json: Not Found ("Path /v1.40/distribution/busybox:latest/json is not supported")
______________ TestNetworks.test_connect_and_disconnect_container ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_24424e21d7be006d/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:102: in test_connect_and_disconnect_container
    self.client.connect_container_to_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_24424e21d7be006d/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
___________ TestNetworks.test_connect_and_force_disconnect_container ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_c3f1cbfa7b3973bf/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:129: in test_connect_and_force_disconnect_container
    self.client.connect_container_to_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_c3f1cbfa7b3973bf/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
________________ TestNetworks.test_connect_on_container_create _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_23e94a85f0860c46/disconnect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:175: in test_connect_on_container_create
    self.client.disconnect_container_from_network(container, net_id)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:274: in disconnect_container_from_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_23e94a85f0860c46/disconnect: Internal Server Error ("network connect is not enabled for rootless containers")
____________________ TestNetworks.test_connect_with_aliases ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_df1cb35fff72f331/connect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:151: in test_connect_with_aliases
    self.client.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_df1cb35fff72f331/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
_________________ TestNetworks.test_connect_with_ipv4_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/2775a4c3749419162c12c40470f057aca057f13603a148b5ef5e617dc88d366c/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:373: in test_connect_with_ipv4_address
    container = self.create_and_start(
tests/integration/base.py:115: in create_and_start
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/2775a4c3749419162c12c40470f057aca057f13603a148b5ef5e617dc88d366c/start: Internal Server Error ("command rootless-cni-infra [alloc 2775a4c3749419162c12c40470f057aca057f13603a148b5ef5e617dc88d366c dockerpytest_55031b035c35e541 reverent_agnesi] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="failed to set bridge addr: \"cni-podman16\" already has an IP address different from 172.28.5.254/16\n"")
_________________ TestNetworks.test_connect_with_ipv6_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_1cbe9a52460d5d3f/disconnect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:402: in test_connect_with_ipv6_address
    self.client.disconnect_container_from_network(container, net_name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:274: in disconnect_container_from_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_1cbe9a52460d5d3f/disconnect: Internal Server Error ("network connect is not enabled for rootless containers")
_____________________ TestNetworks.test_connect_with_links _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_cfdbeca6ae356d71/disconnect

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:340: in test_connect_with_links
    self.client.disconnect_container_from_network(container, net_name)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:274: in disconnect_container_from_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_cfdbeca6ae356d71/disconnect: Internal Server Error ("network connect is not enabled for rootless containers")
___________________ TestNetworks.test_create_check_duplicate ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/create

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:330: in test_create_check_duplicate
    net_id = self.client.create_network(net_name, check_duplicate=False)
docker/api/network.py:153: in create_network
    return self._result(res, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/create: Internal Server Error ("the network name dockerpytest_d8fb0005c02fec3b is already used")
_____________ TestNetworks.test_create_inspect_network_with_scope ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:474: in test_create_inspect_network_with_scope
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________ TestNetworks.test_create_internal_networks __________________
tests/integration/api_network_test.py:415: in test_create_internal_networks
    assert net['Internal'] is True
E   AssertionError: assert False is True
_________________ TestNetworks.test_create_network_attachable __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:453: in test_create_network_attachable
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________________ TestNetworks.test_create_network_ingress ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:460: in test_create_network_ingress
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________________ TestNetworks.test_create_network_ipv6_enabled _________________
tests/integration/api_network_test.py:449: in test_create_network_ipv6_enabled
    assert net['EnableIPv6'] is True
E   AssertionError: assert False is True
______________ TestNetworks.test_create_network_with_ipam_config _______________
tests/integration/api_network_test.py:70: in test_create_network_with_ipam_config
    assert ipam['Config'] == [{
E   AssertionError: assert [{'Gateway': ...2.28.0.0/16'}] == [{'AuxiliaryAd...2.28.0.0/16'}]
E     At index 0 diff: {'Subnet': '172.28.0.0/16', 'Gateway': '172.28.5.254'} != {'Subnet': '172.28.0.0/16', 'IPRange': '172.28.5.0/24', 'Gateway': '172.28.5.254', 'AuxiliaryAddresses': {'a': '172.28.1.5', 'b': '172.28.1.6', 'c': '172.28.1.7'}}
E     Full diff:
E     - [{'Gateway': '172.28.5.254', 'Subnet': '172.28.0.0/16'}]
E     + [{'AuxiliaryAddresses': {'a': '172.28.1.5',
E     +                          'b': '172.28.1.6',
E     +                          'c': '172.28.1.7'},
E     +   'Gateway': '172.28.5.254',...
E     
E     ...Full output truncated (3 lines hidden), use '-vv' to show
_________________ TestNetworks.test_create_network_with_labels _________________
tests/integration/api_network_test.py:425: in test_create_network_with_labels
    assert len(net['Labels']) == 1
E   TypeError: object of type 'NoneType' has no len()
___________________ TestNetworks.test_create_with_driveropt ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/05e436ead20a3151f08636defc0fb4731863f6b770c6eca8c7b5328b7ebd0d36/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:292: in test_create_with_driveropt
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/05e436ead20a3151f08636defc0fb4731863f6b770c6eca8c7b5328b7ebd0d36/start: Internal Server Error ("command rootless-cni-infra [alloc 05e436ead20a3151f08636defc0fb4731863f6b770c6eca8c7b5328b7ebd0d36 bridge nice_wozniak] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"bridge\" in /etc/cni/net.d\n"")
__________________ TestNetworks.test_create_with_ipv4_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/554750e81a61b10c46fb53ca8f0aab9fed2d5b40f234bff7aa45b9014b186132/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:223: in test_create_with_ipv4_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/554750e81a61b10c46fb53ca8f0aab9fed2d5b40f234bff7aa45b9014b186132/start: Internal Server Error ("command rootless-cni-infra [alloc 554750e81a61b10c46fb53ca8f0aab9fed2d5b40f234bff7aa45b9014b186132 dockerpytest_3aafc142a949d77d happy_goldberg] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="failed to set bridge addr: \"cni-podman16\" already has an IP address different from 132.124.0.1/16\n"")
__________________ TestNetworks.test_create_with_ipv6_address __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/ea9e14807af7e08ef7029a402a0f02a03c5eb10005670931ddf0b293689a3dc2/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:249: in test_create_with_ipv6_address
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/ea9e14807af7e08ef7029a402a0f02a03c5eb10005670931ddf0b293689a3dc2/start: Internal Server Error ("command rootless-cni-infra [alloc ea9e14807af7e08ef7029a402a0f02a03c5eb10005670931ddf0b293689a3dc2 dockerpytest_cc47e5afe7e87ca inspiring_ishizaka] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="failed to set bridge addr: \"cni-podman16\" already has an IP address different from 2001:389::1/64\n"")
_________________ TestNetworks.test_create_with_linklocal_ips __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/22f9eea269a34ccd73e19214d3a93204d2b8dbb1400c352046bdb7cffb74e405/start

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:271: in test_create_with_linklocal_ips
    self.client.start(container)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/22f9eea269a34ccd73e19214d3a93204d2b8dbb1400c352046bdb7cffb74e405/start: Internal Server Error ("command rootless-cni-infra [alloc 22f9eea269a34ccd73e19214d3a93204d2b8dbb1400c352046bdb7cffb74e405 bridge friendly_cannon] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"bridge\" in /etc/cni/net.d\n"")
_____________________ TestNetworks.test_create_with_links ______________________
tests/integration/api_network_test.py:315: in test_create_with_links
    assert net_settings['Networks'][net_name]['Links'] == [
E   AssertionError: assert None == ['docker-py-test-upstream:bar']
E     -None
E     +['docker-py-test-upstream:bar']
______________________ TestNetworks.test_inspect_network _______________________
tests/integration/api_network_test.py:41: in test_inspect_network
    assert net['Scope'] == 'local'
E   AssertionError: assert '' == 'local'
E     + local
_______________________ TestNetworks.test_list_networks ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks?filters=%7B%22id%22%3A+%5B%22dockerpy%22%5D%7D

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:31: in test_list_networks
    networks_by_partial_id = self.client.networks(ids=[net_id[:8]])
docker/api/network.py:39: in networks
    return self._result(res, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks?filters=%7B%22id%22%3A+%5B%22dockerpy%22%5D%7D: Internal Server Error ("only the name filter for listing networks is implemented")
_______________________ TestNetworks.test_prune_networks _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 405 Client Error: Method Not Allowed for url: http+docker://localhost/v1.40/networks/prune

During handling of the above exception, another exception occurred:
tests/integration/api_network_test.py:469: in test_prune_networks
    result = self.client.prune_networks()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/network.py:175: in prune_networks
    return self._result(self._post(url, params=params), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 405 Client Error for http+docker://localhost/v1.40/networks/prune: Method Not Allowed ("b'Method Not Allowed'")
_______________________ PluginTest.test_configure_plugin _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:90: in test_configure_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_create_plugin _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/create?name=docker-sdk-py%2Fdummy

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:140: in test_create_plugin
    assert self.client.create_plugin(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:52: in create_plugin
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/create?name=docker-sdk-py%2Fdummy: Not Found ("b'Not Found'")
________________________ PluginTest.test_disable_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:56: in test_disable_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_enable_plugin _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:47: in test_enable_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
_____________________ PluginTest.test_force_remove_plugin ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:109: in test_force_remove_plugin
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_inspect_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:68: in test_inspect_plugin
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_install_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:120: in test_install_plugin
    prv = self.client.plugin_privileges(SSHFS)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
_________________________ PluginTest.test_list_plugins _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:83: in test_list_plugins
    self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
______________________ PluginTest.test_plugin_privileges _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:75: in test_plugin_privileges
    prv = self.client.plugin_privileges(SSHFS)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_remove_plugin _________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:104: in test_remove_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
________________________ PluginTest.test_upgrade_plugin ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:39: in ensure_plugin_installed
    return self.client.inspect_plugin(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:104: in inspect_plugin
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/vieux/sshfs:latest/json: Not Found ("b'Not Found'")

During handling of the above exception, another exception occurred:
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest

During handling of the above exception, another exception occurred:
tests/integration/api_plugin_test.py:128: in test_upgrade_plugin
    pl_data = self.ensure_plugin_installed(SSHFS)
tests/integration/api_plugin_test.py:41: in ensure_plugin_installed
    prv = self.client.plugin_privileges(plugin_name)
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/plugin.py:180: in plugin_privileges
    return self._result(
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/plugins/privileges?remote=vieux%2Fsshfs%3Alatest: Not Found ("b'Not Found'")
____________________ SwarmTest.test_init_already_in_cluster ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:69: in test_init_already_in_cluster
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ SwarmTest.test_init_swarm_custom_addr_pool_both_args _____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:61: in test_init_swarm_custom_addr_pool_both_args
    assert self.init_swarm(default_addr_pool=['2.0.0.0/16', '3.0.0.0/16'],
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ SwarmTest.test_init_swarm_custom_addr_pool_defaults ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:40: in test_init_swarm_custom_addr_pool_defaults
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_____________ SwarmTest.test_init_swarm_custom_addr_pool_only_pool _____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:47: in test_init_swarm_custom_addr_pool_only_pool
    assert self.init_swarm(default_addr_pool=['2.0.0.0/16'])
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________ SwarmTest.test_init_swarm_custom_addr_pool_only_subnet_size __________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:54: in test_init_swarm_custom_addr_pool_only_subnet_size
    assert self.init_swarm(subnet_size=26)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________ SwarmTest.test_init_swarm_custom_raft_spec __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:78: in test_init_swarm_custom_raft_spec
    assert self.init_swarm(swarm_spec=spec)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________________ SwarmTest.test_init_swarm_simple _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:26: in test_init_swarm_simple
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________ SwarmTest.test_init_swarm_with_autolock_managers _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:101: in test_init_swarm_with_autolock_managers
    assert self.init_swarm(swarm_spec=spec)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________________ SwarmTest.test_init_swarm_with_ca_config ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:89: in test_init_swarm_with_ca_config
    assert self.init_swarm(swarm_spec=spec)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________________________ SwarmTest.test_inspect_node __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:189: in test_inspect_node
    node_id = self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________________ SwarmTest.test_leave_swarm __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:127: in test_leave_swarm
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________________ SwarmTest.test_list_nodes ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:170: in test_list_nodes
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_______________________ SwarmTest.test_remove_main_node ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:224: in test_remove_main_node
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
___________________ SwarmTest.test_rotate_manager_unlock_key ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:242: in test_rotate_manager_unlock_key
    assert self.init_swarm(swarm_spec=spec)
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
__________________________ SwarmTest.test_update_node __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:201: in test_update_node
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
_________________________ SwarmTest.test_update_swarm __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 503 Server Error: Service Unavailable for url: http+docker://localhost/v1.40/swarm/init

During handling of the above exception, another exception occurred:
tests/integration/api_swarm_test.py:139: in test_update_swarm
    assert self.init_swarm()
tests/integration/base.py:127: in init_swarm
    return self._init_swarm(self.client, **kwargs)
tests/integration/base.py:93: in _init_swarm
    return client.init_swarm(
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:170: in init_swarm
    return self._result(response, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 503 Server Error for http+docker://localhost/v1.40/swarm/init: Service Unavailable ("Podman does not support service: /v1.40/swarm/init")
________________ TestVolumes.test_create_volume_invalid_driver _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/volumes/create

During handling of the above exception, another exception occurred:
tests/integration/api_volume_test.py:22: in test_create_volume_invalid_driver
    self.client.create_volume('perfectcherryblossom', driver_name)
docker/api/volume.py:89: in create_volume
    return self._result(self._post_json(url, data=data), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/volumes/create: Internal Server Error ("error running volume create option: not yet implemented")
_______________________ TestVolumes.test_inspect_volume ________________________
tests/integration/api_volume_test.py:38: in test_inspect_volume
    assert volume_info == result
E   AssertionError: assert {'CreatedAt':...l/_data', ...} == {'CreatedAt': ...l/_data', ...}
E     Omitting 6 identical items, use -vv to show
E     Differing items:
E     {'Options': None} != {'Options': {}}
E     Full diff:
E     {'CreatedAt': '2021-01-02T00:05:51+01:00',
E     'Driver': 'local',
E     'Labels': {},...
E     
E     ...Full output truncated (8 lines hidden), use '-vv' to show
________________________ TestVolumes.test_list_volumes _________________________
tests/integration/api_volume_test.py:31: in test_list_volumes
    assert volume_info in volumes
E   AssertionError: assert {'CreatedAt': '2021-01-02T00:05:54+01:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...} in [{'CreatedAt': '2021-01-01T23:38:48+01:00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage...00', 'Driver': 'local', 'Labels': {}, 'Mountpoint': '/home/riyad/podman/storage/volumes/imperishablenight/_data', ...}]
___________________ ContextLifecycleTest.test_context_remove ___________________
tests/integration/context_api_test.py:47: in test_context_remove
    ContextAPI.create_context("test")
docker/context/api.py:57: in create_context
    raise errors.ContextAlreadyExists(name)
E   docker.errors.ContextAlreadyExists: context test already exists
_____________________ ContextLifecycleTest.test_lifecycle ______________________
tests/integration/context_api_test.py:13: in test_lifecycle
    assert not ContextAPI.get_context("test")
E   AssertionError: assert not <Context: 'test'>
E    +  where <Context: 'test'> = <bound method ContextAPI.get_context of <class 'docker.context.api.ContextAPI'>>('test')
E    +    where <bound method ContextAPI.get_context of <class 'docker.context.api.ContextAPI'>> = ContextAPI.get_context
_________ ContextLifecycleTest.test_load_context_without_orchestrator __________
tests/integration/context_api_test.py:55: in test_load_context_without_orchestrator
    ContextAPI.create_context("test")
docker/context/api.py:57: in create_context
    raise errors.ContextAlreadyExists(name)
E   docker.errors.ContextAlreadyExists: context test already exists
____________________ ErrorsTest.test_api_error_parses_json _____________________
tests/integration/errors_test.py:13: in test_api_error_parses_json
    assert 'You cannot remove a running container' in explanation
E   AssertionError: assert 'You cannot remove a running container' in 'cannot remove container e3d0a08a7c093e781e6c8f52408c30850b52d8e79f27b1a76f09eb1401144a8f as it is running - running or paused containers cannot be removed without force: container state improper'
_______________________ ContainerCollectionTest.test_get _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/27b1ea97c6bbf9cfc8c5ea4fd77addc607468357ceb477bebf5aa807a7a77a0c/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:187: in test_get
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/27b1ea97c6bbf9cfc8c5ea4fd77addc607468357ceb477bebf5aa807a7a77a0c/start: Internal Server Error ("command rootless-cni-infra [alloc 27b1ea97c6bbf9cfc8c5ea4fd77addc607468357ceb477bebf5aa807a7a77a0c default brave_proskuriakova] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
______________________ ContainerCollectionTest.test_list _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e7c8adea04063c6c4f429dff0228f9cb7866e4565075f22899cfd66298a1be33/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:194: in test_list
    container_id = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e7c8adea04063c6c4f429dff0228f9cb7866e4565075f22899cfd66298a1be33/start: Internal Server Error ("command rootless-cni-infra [alloc e7c8adea04063c6c4f429dff0228f9cb7866e4565075f22899cfd66298a1be33 default youthful_kilby] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________ ContainerCollectionTest.test_list_sparse ___________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/0ff78cb89681468567c50427f0a37541507490db7c7a2f2e6fca0fac331f596c/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:212: in test_list_sparse
    container_id = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/0ff78cb89681468567c50427f0a37541507490db7c7a2f2e6fca0fac331f596c/start: Internal Server Error ("command rootless-cni-infra [alloc 0ff78cb89681468567c50427f0a37541507490db7c7a2f2e6fca0fac331f596c default upbeat_almeida] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_______________________ ContainerCollectionTest.test_run _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/cbb1d3d0da727ed9d284371db726d8723a287a239c4dabf0be8db2e7f1a9e7fb/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:18: in test_run
    assert client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/cbb1d3d0da727ed9d284371db726d8723a287a239c4dabf0be8db2e7f1a9e7fb/start: Internal Server Error ("command rootless-cni-infra [alloc cbb1d3d0da727ed9d284371db726d8723a287a239c4dabf0be8db2e7f1a9e7fb default crazy_banach] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________ ContainerCollectionTest.test_run_detach ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/530ec64b6386e4568cee8f3fa385b3a3ab4d301f92403035cfd115806c3150a3/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:24: in test_run_detach
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/530ec64b6386e4568cee8f3fa385b3a3ab4d301f92403035cfd115806c3150a3/start: Internal Server Error ("command rootless-cni-infra [alloc 530ec64b6386e4568cee8f3fa385b3a3ab4d301f92403035cfd115806c3150a3 default musing_cray] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
______________ ContainerCollectionTest.test_run_with_auto_remove _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/f805b8dc265da587504bb960d15beda95275a0d173dd00bb35d83aa9ea5940cf/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:128: in test_run_with_auto_remove
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f805b8dc265da587504bb960d15beda95275a0d173dd00bb35d83aa9ea5940cf/start: Internal Server Error ("command rootless-cni-infra [alloc f805b8dc265da587504bb960d15beda95275a0d173dd00bb35d83aa9ea5940cf default kind_wing] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________ ContainerCollectionTest.test_run_with_auto_remove_error ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/8259a826e57c11a709094e1f8d3339aaf99012718f5bb195a2d51c2fab991bf3/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:139: in test_run_with_auto_remove_error
    client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8259a826e57c11a709094e1f8d3339aaf99012718f5bb195a2d51c2fab991bf3/start: Internal Server Error ("command rootless-cni-infra [alloc 8259a826e57c11a709094e1f8d3339aaf99012718f5bb195a2d51c2fab991bf3 default determined_hertz] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_________________ ContainerCollectionTest.test_run_with_error __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/f53e83da95e3d398c6e570f8f95646e90885d8baf77ff5c99085a2e3ce918b48/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:32: in test_run_with_error
    client.containers.run("alpine", "cat /test", remove=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f53e83da95e3d398c6e570f8f95646e90885d8baf77ff5c99085a2e3ce918b48/start: Internal Server Error ("command rootless-cni-infra [alloc f53e83da95e3d398c6e570f8f95646e90885d8baf77ff5c99085a2e3ce918b48 default gracious_kalam] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_______ ContainerCollectionTest.test_run_with_image_that_does_not_exist ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:41: in test_run_with_image_that_does_not_exist
    client.containers.run("dockerpytest_does_not_exist")
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/containers/create: Not Found ("unable to find a name and tag match for dockerpytest_does_not_exist in repotags: no such image")
____________ ContainerCollectionTest.test_run_with_json_file_driver ____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/d1f5ca72b0fd5836a08c7cc9834219dee65b1ed124f418b4ac011eb03a48477f/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:119: in test_run_with_json_file_driver
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/d1f5ca72b0fd5836a08c7cc9834219dee65b1ed124f418b4ac011eb03a48477f/start: Internal Server Error ("command rootless-cni-infra [alloc d1f5ca72b0fd5836a08c7cc9834219dee65b1ed124f418b4ac011eb03a48477f default modest_raman] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
______________ ContainerCollectionTest.test_run_with_named_volume ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/3cdc79b671c9f2d4a44c3d2f0fa20b0285cc84bd3850e2087b41dabbfa024f18/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:72: in test_run_with_named_volume
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3cdc79b671c9f2d4a44c3d2f0fa20b0285cc84bd3850e2087b41dabbfa024f18/start: Internal Server Error ("command rootless-cni-infra [alloc 3cdc79b671c9f2d4a44c3d2f0fa20b0285cc84bd3850e2087b41dabbfa024f18 default stoic_cori] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
______________ ContainerCollectionTest.test_run_with_none_driver _______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/715f7618f5939920bbac023952e51d23a0430c2eba2159fc84aa919bffd1d0e3/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:110: in test_run_with_none_driver
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/715f7618f5939920bbac023952e51d23a0430c2eba2159fc84aa919bffd1d0e3/start: Internal Server Error ("command rootless-cni-infra [alloc 715f7618f5939920bbac023952e51d23a0430c2eba2159fc84aa919bffd1d0e3 default musing_mccarthy] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
______________ ContainerCollectionTest.test_run_with_proxy_config ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/59e0c849f2a87314ef01a8e19c7c1aab58d3fdb0f1736333431f61b70cb1f06e/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:180: in test_run_with_proxy_config
    out = client.containers.run('alpine', 'sh -c "env"')
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/59e0c849f2a87314ef01a8e19c7c1aab58d3fdb0f1736333431f61b70cb1f06e/start: Internal Server Error ("command rootless-cni-infra [alloc 59e0c849f2a87314ef01a8e19c7c1aab58d3fdb0f1736333431f61b70cb1f06e default eager_mestorf] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_____________ ContainerCollectionTest.test_run_with_streamed_logs ______________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/172eccc68fc327ee30bbca517db6a047770e93fedb134a8f21f6007bc238e6c1/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:150: in test_run_with_streamed_logs
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/172eccc68fc327ee30bbca517db6a047770e93fedb134a8f21f6007bc238e6c1/start: Internal Server Error ("command rootless-cni-infra [alloc 172eccc68fc327ee30bbca517db6a047770e93fedb134a8f21f6007bc238e6c1 default affectionate_chatelet] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
________ ContainerCollectionTest.test_run_with_streamed_logs_and_cancel ________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/cca4e7744efed82b5231d3cd7a8b0376410d7f26155cfd1d9256ef640d5cb905/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:162: in test_run_with_streamed_logs_and_cancel
    out = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/cca4e7744efed82b5231d3cd7a8b0376410d7f26155cfd1d9256ef640d5cb905/start: Internal Server Error ("command rootless-cni-infra [alloc cca4e7744efed82b5231d3cd7a8b0376410d7f26155cfd1d9256ef640d5cb905 default trusting_burnell] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_________________ ContainerCollectionTest.test_run_with_volume _________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/5e0f2e6133cb09c211beeb81cfce4176bf412b4c7ea53f8cb03745d17c906c42/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:50: in test_run_with_volume
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/5e0f2e6133cb09c211beeb81cfce4176bf412b4c7ea53f8cb03745d17c906c42/start: Internal Server Error ("command rootless-cni-infra [alloc 5e0f2e6133cb09c211beeb81cfce4176bf412b4c7ea53f8cb03745d17c906c42 default quirky_khorana] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_commit ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/3dc687aef2616e32ccda5b27250276162611b4cfee99d6e9faeb7f5bd6a72499/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:235: in test_commit
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3dc687aef2616e32ccda5b27250276162611b4cfee99d6e9faeb7f5bd6a72499/start: Internal Server Error ("command rootless-cni-infra [alloc 3dc687aef2616e32ccda5b27250276162611b4cfee99d6e9faeb7f5bd6a72499 default loving_rubin] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_________________ ContainerTest.test_create_with_volume_driver _________________
tests/integration/models_containers_test.py:456: in test_create_with_volume_driver
    assert container.attrs['HostConfig']['VolumeDriver'] == 'foo'
E   AssertionError: assert '' == 'foo'
E     + foo
___________________________ ContainerTest.test_diff ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/688e7a713a69e8ebfc54e39519f4af8c0e10d8fc4140330600eb6f0d6a04e95d/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:248: in test_diff
    container = client.containers.run("alpine", "touch /test", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/688e7a713a69e8ebfc54e39519f4af8c0e10d8fc4140330600eb6f0d6a04e95d/start: Internal Server Error ("command rootless-cni-infra [alloc 688e7a713a69e8ebfc54e39519f4af8c0e10d8fc4140330600eb6f0d6a04e95d default adoring_dewdney] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
______________________ ContainerTest.test_exec_run_failed ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/67777968ce23baf0070a20b943f1db5148351d3b3475cf823f45b864031b8c20/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:265: in test_exec_run_failed
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/67777968ce23baf0070a20b943f1db5148351d3b3475cf823f45b864031b8c20/start: Internal Server Error ("command rootless-cni-infra [alloc 67777968ce23baf0070a20b943f1db5148351d3b3475cf823f45b864031b8c20 default keen_williams] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_____________________ ContainerTest.test_exec_run_success ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/18f670435a091507168566897f167a3f8882bb8e8f4f01c711fcddac985c2a7d/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:255: in test_exec_run_success
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/18f670435a091507168566897f167a3f8882bb8e8f4f01c711fcddac985c2a7d/start: Internal Server Error ("command rootless-cni-infra [alloc 18f670435a091507168566897f167a3f8882bb8e8f4f01c711fcddac985c2a7d default suspicious_wu] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_kill ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/0bad3883fc7dd0ec7efdd438020cc6e9be5fe880ff2174732b97245ce300269f/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:274: in test_kill
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/0bad3883fc7dd0ec7efdd438020cc6e9be5fe880ff2174732b97245ce300269f/start: Internal Server Error ("command rootless-cni-infra [alloc 0bad3883fc7dd0ec7efdd438020cc6e9be5fe880ff2174732b97245ce300269f default kind_burnell] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_logs ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/f9765d9a4f4a3fd1b1c85f41276ed2db4357916f86a311c93e6c69c620d70d5f/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:285: in test_logs
    container = client.containers.run("alpine", "echo hello world",
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/f9765d9a4f4a3fd1b1c85f41276ed2db4357916f86a311c93e6c69c620d70d5f/start: Internal Server Error ("command rootless-cni-infra [alloc f9765d9a4f4a3fd1b1c85f41276ed2db4357916f86a311c93e6c69c620d70d5f default elated_sanderson] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_pause ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/8c44138c1ef2c91d6dca03cd70dd2dcbef4b7d634ffea80ebcda625de4443d52/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:293: in test_pause
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/8c44138c1ef2c91d6dca03cd70dd2dcbef4b7d634ffea80ebcda625de4443d52/start: Internal Server Error ("command rootless-cni-infra [alloc 8c44138c1ef2c91d6dca03cd70dd2dcbef4b7d634ffea80ebcda625de4443d52 default youthful_meitner] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_____________________ ContainerTest.test_ports_target_list _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/3db4fd726ede925b0e550913c5f27691f72555a758af13c4ab2fc7c5e5e0eb57/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:394: in test_ports_target_list
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3db4fd726ede925b0e550913c5f27691f72555a758af13c4ab2fc7c5e5e0eb57/start: Internal Server Error ("command rootless-cni-infra [alloc 3db4fd726ede925b0e550913c5f27691f72555a758af13c4ab2fc7c5e5e0eb57 default youthful_mendeleev] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_____________________ ContainerTest.test_ports_target_none _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:354: in test_ports_target_none
    container = client.containers.run(
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("make cli opts(): strconv.Atoi: parsing "": invalid syntax")
____________________ ContainerTest.test_ports_target_tuple _____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/68b2f05fb1231ff274d4f71a032be51daee01f56accc022f26c998bcdd04ba94/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:374: in test_ports_target_tuple
    container = client.containers.run(
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/68b2f05fb1231ff274d4f71a032be51daee01f56accc022f26c998bcdd04ba94/start: Internal Server Error ("command rootless-cni-infra [alloc 68b2f05fb1231ff274d4f71a032be51daee01f56accc022f26c998bcdd04ba94 default relaxed_mahavira] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_remove ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/ee6afcee64ae24829d30ee5e605152acc63f20ff82cef144b906a764291d4d00/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:304: in test_remove
    container = client.containers.run("alpine", "echo hello", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/ee6afcee64ae24829d30ee5e605152acc63f20ff82cef144b906a764291d4d00/start: Internal Server Error ("command rootless-cni-infra [alloc ee6afcee64ae24829d30ee5e605152acc63f20ff82cef144b906a764291d4d00 default gallant_kowalevski] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_rename ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/397d085a5ca7b579bf9aa3eb86a0bc5e870ad01a486b50fbbe4e9da723f65a63/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:314: in test_rename
    container = client.containers.run("alpine", "echo hello", name="test1",
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/397d085a5ca7b579bf9aa3eb86a0bc5e870ad01a486b50fbbe4e9da723f65a63/start: Internal Server Error ("command rootless-cni-infra [alloc 397d085a5ca7b579bf9aa3eb86a0bc5e870ad01a486b50fbbe4e9da723f65a63 default admiring_chebyshev] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_restart __________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/5af8723692daf54f49f4e85185523baea9ec80ad8476aee09a98b22447bfbecd/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:324: in test_restart
    container = client.containers.run("alpine", "sleep 100", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/5af8723692daf54f49f4e85185523baea9ec80ad8476aee09a98b22447bfbecd/start: Internal Server Error ("command rootless-cni-infra [alloc 5af8723692daf54f49f4e85185523baea9ec80ad8476aee09a98b22447bfbecd default focused_germain] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_start ___________________________
tests/integration/models_containers_test.py:336: in test_start
    assert container.status == "created"
E   AssertionError: assert 'configured' == 'created'
E     - configured
E     + created
___________________________ ContainerTest.test_stats ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/89518bb6b745a7ec74d17f48efe6d9aa4a9d3f5749fa6c45471f3c67cdde5732/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:343: in test_stats
    container = client.containers.run("alpine", "sleep 100", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/89518bb6b745a7ec74d17f48efe6d9aa4a9d3f5749fa6c45471f3c67cdde5732/start: Internal Server Error ("command rootless-cni-infra [alloc 89518bb6b745a7ec74d17f48efe6d9aa4a9d3f5749fa6c45471f3c67cdde5732 default affectionate_cray] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_stop ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/a8bfc20127378e52584fac217c350e6cae6f2c448f3c5937d32e164c97865f79/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:412: in test_stop
    container = client.containers.run("alpine", "top", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/a8bfc20127378e52584fac217c350e6cae6f2c448f3c5937d32e164c97865f79/start: Internal Server Error ("command rootless-cni-infra [alloc a8bfc20127378e52584fac217c350e6cae6f2c448f3c5937d32e164c97865f79 default recursing_elgamal] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
____________________________ ContainerTest.test_top ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/20042d7388759c336e03db97c4f5df2006b446b4b775e0ee5e188b6374445052/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:421: in test_top
    container = client.containers.run("alpine", "sleep 60", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/20042d7388759c336e03db97c4f5df2006b446b4b775e0ee5e188b6374445052/start: Internal Server Error ("command rootless-cni-infra [alloc 20042d7388759c336e03db97c4f5df2006b446b4b775e0ee5e188b6374445052 default jovial_franklin] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
__________________________ ContainerTest.test_update ___________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/0c9d5710bf7bfd04ff5252c961a1320ad8c4fe68534ef5654542a079a3bd969f/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:429: in test_update
    container = client.containers.run("alpine", "sleep 60", detach=True,
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/0c9d5710bf7bfd04ff5252c961a1320ad8c4fe68534ef5654542a079a3bd969f/start: Internal Server Error ("command rootless-cni-infra [alloc 0c9d5710bf7bfd04ff5252c961a1320ad8c4fe68534ef5654542a079a3bd969f default brave_burnell] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________________________ ContainerTest.test_wait ____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/e60f0a48d19c141208804b7103bbb0498302b70cd507475da82b47cbe446b101/start

During handling of the above exception, another exception occurred:
tests/integration/models_containers_test.py:439: in test_wait
    container = client.containers.run("alpine", "sh -c 'exit 0'",
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/e60f0a48d19c141208804b7103bbb0498302b70cd507475da82b47cbe446b101/start: Internal Server Error ("command rootless-cni-infra [alloc e60f0a48d19c141208804b7103bbb0498302b70cd507475da82b47cbe446b101 default frosty_antonelli] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
________________________ ImageCollectionTest.test_build ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/create

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:20: in test_build
    assert client.containers.run(image) == b"hello world\n"
docker/models/containers.py:811: in run
    container = self.create(image=image, command=command,
docker/models/containers.py:870: in create
    resp = self.client.api.create_container(**create_kwargs)
docker/api/container.py:430: in create_container
    return self.create_container_from_config(config, name)
docker/api/container.py:441: in create_container_from_config
    return self._result(res, True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/create: Internal Server Error ("container create: both RootfsImageName and RootfsImageID must be set if either is set: invalid argument")
__________________ ImageCollectionTest.test_build_with_error ___________________
tests/integration/models_images_test.py:30: in test_build_with_error
    assert (
E   AssertionError: assert "The command '/bin/sh -c exit 1' returned a non-zero code: 1" in 'docker.errors.BuildError: error building at STEP "RUN exit 1": exit status 1'
E    +  where 'docker.errors.BuildError: error building at STEP "RUN exit 1": exit status 1' = <bound method ExceptionInfo.exconly of <ExceptionInfo BuildError tblen=2>>()
E    +    where <bound method ExceptionInfo.exconly of <ExceptionInfo BuildError tblen=2>> = <ExceptionInfo BuildError tblen=2>.exconly
_____________ ImageCollectionTest.test_build_with_multiple_success _____________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6da2505d5795624bc0e85398192ca4e3fe9bc0ad0ce54ce497d1ea68cfa4b81a/start

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:44: in test_build_with_multiple_success
    assert client.containers.run(image) == b"hello world\n"
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6da2505d5795624bc0e85398192ca4e3fe9bc0ad0ce54ce497d1ea68cfa4b81a/start: Internal Server Error ("command rootless-cni-infra [alloc 6da2505d5795624bc0e85398192ca4e3fe9bc0ad0ce54ce497d1ea68cfa4b81a default loving_montalcini] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
___________ ImageCollectionTest.test_build_with_success_build_output ___________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/3b87d6c7ad698c1521420f8f943a41ef13c54918ea8ec390a5de985bec89912d/start

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:55: in test_build_with_success_build_output
    assert client.containers.run(image) == b"Successfully built abcd1234\n"
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/3b87d6c7ad698c1521420f8f943a41ef13c54918ea8ec390a5de985bec89912d/start: Internal Server Error ("command rootless-cni-infra [alloc 3b87d6c7ad698c1521420f8f943a41ef13c54918ea8ec390a5de985bec89912d default sweet_proskuriakova] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_____________________ ImageCollectionTest.test_load_error ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/images/load

During handling of the above exception, another exception occurred:
tests/integration/models_images_test.py:98: in test_load_error
    client.images.load('abc')
docker/models/images.py:384: in load
    for chunk in resp:
docker/api/client.py:389: in _stream_helper
    yield self._result(response, json=decode)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/images/load: Internal Server Error ("failed to load image: error pulling "": Invalid image localhost/")
________________________ ImageCollectionTest.test_pull _________________________
tests/integration/models_images_test.py:71: in test_pull
    assert 'alpine:latest' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:latest' in ['docker.io/library/alpine:3.12', 'docker.io/library/alpine:latest']
____________________ ImageCollectionTest.test_pull_multiple ____________________
tests/integration/models_images_test.py:91: in test_pull_multiple
    assert any([
tests/integration/models_images_test.py:91: in <listcomp>
    assert any([
E   TypeError: argument of type 'NoneType' is not iterable
____________________ ImageCollectionTest.test_pull_with_sha ____________________
tests/integration/models_images_test.py:85: in test_pull_with_sha
    assert image_ref in image.attrs['RepoDigests']
E   AssertionError: assert 'hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7' in ['docker.io/library/hello-world@sha256:083de497cff944f969d8499ab94f07134c50bcf5e6b9559b27182d3fa80ce3f7', 'docker.io/library/hello-world@sha256:8072a54ebb3bc136150e2f2860f00a7bf45f13eeb917cca2430fcd0054c8e51b']
____________________ ImageCollectionTest.test_pull_with_tag ____________________
tests/integration/models_images_test.py:76: in test_pull_with_tag
    assert 'alpine:3.10' in image.attrs['RepoTags']
E   AssertionError: assert 'alpine:3.10' in ['docker.io/library/alpine:3.10', 'docker.io/library/sha256:be4e4bea2c2e15b403bb321562e78ea84b501fb41497472e91ecb41504e8a27c']
_______________ ImageCollectionTest.test_save_and_load_repo_name _______________
tests/integration/models_images_test.py:122: in test_save_and_load_repo_name
    stream = image.save(named='{}:latest'.format(additional_tag))
docker/models/images.py:98: in save
    raise InvalidArgument(
E   docker.errors.InvalidArgument: dockerpytest_171830f4d6df9c0c:latest is not a valid tag for this image
______________________ NetworkCollectionTest.test_create _______________________
tests/integration/models_networks_test.py:14: in test_create
    assert network.attrs['Labels']['foo'] == "bar"
E   TypeError: 'NoneType' object is not subscriptable
____________________ NetworkCollectionTest.test_list_remove ____________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks?filters=%7B%22id%22%3A+%5B%22fdhjklfdfdshjkfds%22%5D%7D

During handling of the above exception, another exception occurred:
tests/integration/models_networks_test.py:30: in test_list_remove
    assert network.id not in [
docker/models/networks.py:209: in list
    resp = self.client.api.networks(*args, **kwargs)
docker/api/network.py:39: in networks
    return self._result(res, json=True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks?filters=%7B%22id%22%3A+%5B%22fdhjklfdfdshjkfds%22%5D%7D: Internal Server Error ("only the name filter for listing networks is implemented")
_____________________ NetworkTest.test_connect_disconnect ______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/networks/dockerpytest_e3a7f0513e3b894a/connect

During handling of the above exception, another exception occurred:
tests/integration/models_networks_test.py:59: in test_connect_disconnect
    network.connect(container)
docker/models/networks.py:58: in connect
    return self.client.api.connect_container_to_network(
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/network.py:250: in connect_container_to_network
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/networks/dockerpytest_e3a7f0513e3b894a/connect: Internal Server Error ("network disconnect is not enabled for rootless containers")
________________________ NodesTest.test_list_get_update ________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_nodes_test.py:18: in test_list_get_update
    client.swarm.init('127.0.0.1', listen_addr=helpers.swarm_listen_addr())
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
____________________________ ModelTest.test_reload _____________________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/6b43abf0bb21afd9de3fcc13953377d4228c839f67e60caab744e44e65feb17a/start

During handling of the above exception, another exception occurred:
tests/integration/models_resources_test.py:9: in test_reload
    container = client.containers.run("alpine", "sleep 300", detach=True)
docker/models/containers.py:818: in run
    container.start()
docker/models/containers.py:404: in start
    return self.client.api.start(self.id, **kwargs)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/6b43abf0bb21afd9de3fcc13953377d4228c839f67e60caab744e44e65feb17a/start: Internal Server Error ("command rootless-cni-infra [alloc 6b43abf0bb21afd9de3fcc13953377d4228c839f67e60caab744e44e65feb17a default objective_mccarthy] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
_______________________ SwarmTest.test_init_update_leave _______________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_swarm_test.py:19: in test_init_update_leave
    client.swarm.init(
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_________________ SwarmTest.test_join_on_already_joined_swarm __________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 404 Client Error: Not Found for url: http+docker://localhost/v1.40/swarm

During handling of the above exception, another exception occurred:
tests/integration/models_swarm_test.py:37: in test_join_on_already_joined_swarm
    client.swarm.init()
docker/client.py:175: in swarm
    return Swarm(client=self)
docker/models/swarm.py:17: in __init__
    self.reload()
docker/models/swarm.py:147: in reload
    self.attrs = self.client.api.inspect_swarm()
docker/utils/decorators.py:34: in wrapper
    return f(self, *args, **kwargs)
docker/api/swarm.py:185: in inspect_swarm
    return self._result(self._get(url), True)
docker/api/client.py:302: in _result
    self._raise_for_status(response)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.NotFound: 404 Client Error for http+docker://localhost/v1.40/swarm: Not Found ("b'Not Found'")
_________________________ VolumesTest.test_list_remove _________________________
tests/integration/models_volumes_test.py:26: in test_list_remove
    assert volume in client.volumes.list(filters={'name': 'dockerpytest_'})
E   AssertionError: assert <Volume: dockerpyte> in []
E    +  where [] = <bound method VolumeCollection.list of <docker.models.volumes.VolumeCollection object at 0x7fba4191b460>>(filters={'name': 'dockerpytest_'})
E    +    where <bound method VolumeCollection.list of <docker.models.volumes.VolumeCollection object at 0x7fba4191b460>> = <docker.models.volumes.VolumeCollection object at 0x7fba4191b460>.list
E    +      where <docker.models.volumes.VolumeCollection object at 0x7fba4191b460> = <docker.client.DockerClient object at 0x7fba4166ac40>.volumes
________ TestRegressions.test_443_handle_nonchunked_response_in_stream _________
tests/integration/regression_test.py:16: in test_443_handle_nonchunked_response_in_stream
    pass
E   Failed: DID NOT RAISE <class 'docker.errors.APIError'>
_______________ TestRegressions.test_792_explicit_port_protocol ________________
docker/api/client.py:296: in _raise_for_status
    response.raise_for_status()
../../.virtualenvs/docker-py/lib/python3.8/site-packages/requests/models.py:940: in raise_for_status
    raise HTTPError(http_error_msg, response=self)
E   requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.40/containers/bfe966567c7d263a42e70670d05190a6b856f60259f5c6635c73234e9bf797b0/start

During handling of the above exception, another exception occurred:
tests/integration/regression_test.py:56: in test_792_explicit_port_protocol
    self.client.start(ctnr)
docker/utils/decorators.py:19: in wrapped
    return f(self, resource_id, *args, **kwargs)
docker/api/container.py:1111: in start
    self._raise_for_status(res)
docker/api/client.py:298: in _raise_for_status
    raise create_api_error_from_http_exception(e)
docker/errors.py:31: in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation)
E   docker.errors.APIError: 500 Server Error for http+docker://localhost/v1.40/containers/bfe966567c7d263a42e70670d05190a6b856f60259f5c6635c73234e9bf797b0/start: Internal Server Error ("command rootless-cni-infra [alloc bfe966567c7d263a42e70670d05190a6b856f60259f5c6635c73234e9bf797b0 default brave_hoover] in container b7bfe23071a91174d9489d4f5cb2af53b34b641ba03841cb3ef5e28065b3ca60 failed with status 1, stdout="", stderr="no net configuration with name \"default\" in /etc/cni/net.d\n"")
=============================== warnings summary ===============================
tests/integration/api_client_test.py::ConnectionTimeoutTest::test_timeout
  /home/riyad/src/docker-py/docker/utils/utils.py:276: DeprecationWarning: urllib.parse.splitnport() is deprecated as of 3.8, use urllib.parse.urlparse() instead
    host, port = splitnport(parsed_url.netloc)

-- Docs: https://docs.pytest.org/en/latest/warnings.html
=========================== short test summary info ============================
XFAIL tests/integration/api_build_test.py::BuildTest::test_prune_builds
  Currently fails on 18.09: https://github.com/moby/moby/issues/37920
XFAIL tests/integration/api_container_test.py::CreateContainerTest::test_create_with_storage_opt
  Not supported on most drivers
XFAIL tests/integration/api_container_test.py::ContainerTopTest::test_top
  Output of docker top depends on host distro, and is not formalized.
XFAIL tests/integration/api_container_test.py::ContainerTopTest::test_top_with_psargs
  Output of docker top depends on host distro, and is not formalized.
XFAIL tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_data_path_addr
  Can fail if eth0 has multiple IP addresses
XFAIL tests/integration/api_swarm_test.py::SwarmTest::test_init_swarm_with_log_driver
  This doesn't seem to be taken into account by the engine
XFAIL tests/integration/models_services_test.py::ServiceTest::test_update_retains_networks
  Flaky test
SKIPPED [1] tests/integration/api_image_test.py:292: Doesn't work inside a container - FIXME
SKIPPED [1] /home/riyad/src/docker-py/tests/integration/api_swarm_test.py:31: Test stalls the engine on 1.12.0
= 180 failed, 109 passed, 2 skipped, 7 xfailed, 1 xpassed, 1 warnings, 90 error in 874.48 seconds =
